object UniMainModule: TUniMainModule
  OldCreateOrder = False
  OnCreate = UniGUIMainModuleCreate
  Theme = 'neptune'
  TouchTheme = 'neptune'
  BrowserOptions = [boDisableMouseRightClick, boDisableChromeRefresh]
  MonitoredKeys.Keys = <>
  Height = 893
  Width = 1299
  object brd: TUniQuery
    Connection = Conexao
    SQL.Strings = (
      'SELECT convert('#39#39',char(10)) sel'
      '     , brd.brdcodigo'
      '     , brdidentificacao'
      '  FROM brd'
      ' INNER JOIN brg '
      '         ON brd.brdcodigo = brg.brdcodigo'
      ' WHERE brg.grpcodigo = :grpcodigo'
      ' ORDER BY brdidentificacao')
    CachedUpdates = True
    Left = 472
    Top = 392
    ParamData = <
      item
        DataType = ftInteger
        Name = 'grpcodigo'
        Value = 2
      end>
    object brdsel: TStringField
      FieldName = 'sel'
      Size = 10
    end
    object brdbrdcodigo: TIntegerField
      AutoGenerateValue = arAutoInc
      FieldName = 'brdcodigo'
    end
    object brdbrdidentificacao: TStringField
      FieldName = 'brdidentificacao'
      Required = True
      Size = 50
    end
  end
  object letras: TUniQuery
    Connection = Conexao
    SQL.Strings = (
      'DROP TEMPORARY TABLE IF EXISTS letras;'
      ''
      'CREATE TEMPORARY TABLE IF NOT EXISTS letras('
      'letra varchar(5));'
      ''
      ''
      ''
      'SELECT * FROM letras;')
    Left = 152
    Top = 576
    object letrasletra: TStringField
      FieldName = 'letra'
      Size = 5
    end
  end
  object UniDataSource1: TUniDataSource
    DataSet = tisi
    Left = 664
    Top = 192
  end
  object montapedido: TUniQuery
    Connection = Conexao
    Left = 408
    Top = 632
  end
  object Dbpr: TDataSource
    DataSet = bpr
    Left = 672
    Top = 328
  end
  object bpr: TUniQuery
    Connection = Conexao
    SQL.Strings = (
      
        'SELECT bprchave, pronome, bpr.procodigo, bpr.procodigoborda FROM' +
        ' bpr,pro WHERE bpr.procodigoborda=pro.procodigo AND bpr.procodig' +
        'o=:procodigo')
    Left = 624
    Top = 328
    ParamData = <
      item
        DataType = ftUnknown
        Name = 'procodigo'
        Value = nil
      end>
    object bprbprchave: TIntegerField
      FieldName = 'bprchave'
    end
    object bprpronome: TStringField
      FieldName = 'pronome'
      Size = 35
    end
    object bprprocodigo: TIntegerField
      FieldName = 'procodigo'
    end
    object bprprocodigoborda: TIntegerField
      FieldName = 'procodigoborda'
    end
  end
  object trfmesa: TUniQuery
    SQLInsert.Strings = (
      'INSERT INTO tro'
      '  (trochave, orcchaveorigem, orcchavedestino)'
      'VALUES'
      '  (:trochave, :orcchaveorigem, :orcchavedestino)')
    SQLDelete.Strings = (
      'DELETE FROM tro'
      'WHERE'
      '  trochave = :Old_trochave')
    SQLUpdate.Strings = (
      'UPDATE tro'
      'SET'
      
        '  trochave = :trochave, orcchaveorigem = :orcchaveorigem, orccha' +
        'vedestino = :orcchavedestino'
      'WHERE'
      '  trochave = :Old_trochave')
    SQLLock.Strings = (
      'SELECT * FROM tro'
      'WHERE'
      '  trochave = :Old_trochave'
      'FOR UPDATE')
    SQLRefresh.Strings = (
      'SELECT trochave, orcchaveorigem, orcchavedestino FROM tro'
      'WHERE'
      '  trochave = :Old_trochave')
    SQLRecCount.Strings = (
      'SELECT COUNT(*) FROM tro')
    DataTypeMap = <
      item
        DBType = 226
        FieldType = ftString
        FieldLength = 30
      end
      item
        DBType = 227
        FieldType = ftString
        FieldLength = 30
      end>
    Connection = Conexao
    SQL.Strings = (
      'SET @Orcchave  = :orcchave;'
      'SET @Titutlo   = :TituloOperador;'
      ''
      'SELECT DISTINCT'
      '       orc.orcchave '
      '    -- , CONCAT(@Titutlo,'#39' '#39',orc.orcmesa) mesa'
      '     , CONVERT(orc.orcmesa,  CHAR) mesa'
      '     , orc.orcmesa'
      '     , 0 sel'
      '  FROM orc'
      ' INNER JOIN ito'
      '         ON orc.orcchave = ito.orcchave'
      '        AND ito.stocodigo = 2    '
      ' WHERE orc.moccodigo = 5'
      '   AND orc.orcdataencerr IS NULL'
      '   AND orc.stocodigo = 2'
      '   AND orc.orcchave != @Orcchave'
      '  ORDER BY orc.orcmesa')
    CachedUpdates = True
    Left = 444
    Top = 133
    ParamData = <
      item
        DataType = ftInteger
        Name = 'orcchave'
        Value = 0
      end
      item
        DataType = ftUnknown
        Name = 'TituloOperador'
        Value = nil
      end>
    object trfmesaorcchave: TIntegerField
      AutoGenerateValue = arAutoInc
      FieldName = 'orcchave'
    end
    object trfmesamesa: TStringField
      FieldName = 'mesa'
      Size = 30
    end
    object trfmesaorcmesa: TIntegerField
      FieldName = 'orcmesa'
    end
    object trfmesasel: TIntegerField
      FieldName = 'sel'
    end
  end
  object ttro: TUniQuery
    SQLInsert.Strings = (
      'INSERT INTO ttro'
      '  (ID, orcchave, mesa, orcmesa)'
      'VALUES'
      '  (:ID, :orcchave, :mesa, :orcmesa)')
    SQLDelete.Strings = (
      'DELETE FROM ttro'
      'WHERE'
      '  ID = :Old_ID')
    SQLUpdate.Strings = (
      'UPDATE ttro'
      'SET'
      
        '  ID = :ID, orcchave = :orcchave, mesa = :mesa, orcmesa = :orcme' +
        'sa'
      'WHERE'
      '  ID = :Old_ID')
    SQLLock.Strings = (
      'SELECT * FROM ttro'
      'WHERE'
      '  ID = :Old_ID'
      'FOR UPDATE')
    SQLRefresh.Strings = (
      'SELECT ID, orcchave, mesa, orcmesa FROM ttro'
      'WHERE'
      '  ID = :Old_ID')
    SQLRecCount.Strings = (
      'SELECT COUNT(*) FROM ttro')
    Connection = Conexao
    SQL.Strings = (
      'DROP TEMPORARY TABLE IF EXISTS ttro;'
      '   '
      'CREATE TEMPORARY TABLE ttro'
      '     ( ID INT NOT NULL AUTO_INCREMENT'
      '     , orcchave  int'
      '     , mesa      VARCHAR(20)'
      '     , orcmesa   int'
      '     , PRIMARY KEY (ID)'
      '   ) ENGINE = INNODB DEFAULT charset = latin1;'
      '   '
      'SELECT ID '
      '     , orcchave '
      '     , mesa'
      '     , orcmesa'
      '  FROM ttro;')
    CachedUpdates = True
    Left = 395
    Top = 132
    object ttroID: TIntegerField
      AutoGenerateValue = arAutoInc
      FieldName = 'ID'
    end
    object ttroorcchave: TIntegerField
      FieldName = 'orcchave'
    end
    object ttromesa: TStringField
      FieldName = 'mesa'
    end
    object ttroorcmesa: TIntegerField
      FieldName = 'orcmesa'
    end
  end
  object TransfereMesa: TUniStoredProc
    StoredProcName = 'TransfereMesa'
    Connection = Conexao
    Left = 392
    Top = 80
    ParamData = <
      item
        DataType = ftInteger
        Name = 'pOrcChave'
        ParamType = ptInput
        Value = nil
      end
      item
        DataType = ftInteger
        Name = 'pConfirma'
        ParamType = ptOutput
        Value = nil
      end
      item
        DataType = ftString
        Name = 'pMensagem'
        ParamType = ptOutput
        Size = 255
        Value = nil
      end>
    CommandStoredProcName = 'TransfereMesa'
  end
  object UniSQLMonitor1: TUniSQLMonitor
    Left = 320
    Top = 16
  end
  object cfg: TUniQuery
    Connection = Conexao
    SQL.Strings = (
      
        'select cfgcodigo, cfgmgoumesas, cfgmgoutaxaatendimento, cfgmgouq' +
        'tdmesas, cfgmgounomelocal from cfgmgou')
    Left = 120
    Top = 456
    object cfgcfgcodigo: TIntegerField
      FieldName = 'cfgcodigo'
    end
    object cfgcfgmgoutaxaatendimento: TFloatField
      FieldName = 'cfgmgoutaxaatendimento'
      Required = True
    end
    object cfgcfgmgouqtdmesas: TIntegerField
      FieldName = 'cfgmgouqtdmesas'
    end
    object cfgcfgmgounomelocal: TStringField
      FieldName = 'cfgmgounomelocal'
      Size = 15
    end
  end
  object dsTgr: TUniDataSource
    DataSet = tgr
    Left = 192
    Top = 520
  end
  object dsCgr: TUniDataSource
    DataSet = cgr
    Left = 80
    Top = 525
  end
  object cgr: TUniQuery
    Connection = Conexao
    SQL.Strings = (
      'select cgr.cgrcodigo, cgridentificacao,tpocodigo from cgr'
      '  INNER JOIN grp ON  grp.cgrcodigo=cgr.cgrcodigo'
      
        '  INNER JOIN pro ON grp.grpcodigo=pro.grpcodigo  AND pro.tpocodi' +
        'go NOT IN (7,8)'
      '  group BY cgridentificacao'
      '  order BY cgridentificacao')
    Left = 48
    Top = 525
    object cgrcgrcodigo: TIntegerField
      FieldName = 'cgrcodigo'
    end
    object cgrcgridentificacao: TStringField
      FieldName = 'cgridentificacao'
      Size = 25
    end
  end
  object tgr: TUniQuery
    Connection = Conexao
    SQL.Strings = (
      'SELECT'
      '  tgr.tgrcodigo,'
      '  tgridentificacao'
      'FROM tgr'
      '  INNER JOIN grp'
      '    ON grp.tgrcodigo = tgr.tgrcodigo'
      '  INNER JOIN gri'
      '    ON grp.grpcodigo = gri.grpcodigo  '
      '  INNER JOIN pro'
      '    ON grp.grpcodigo = pro.grpcodigo'
      '    AND pro.tpocodigo NOT IN (7, 8)'
      'WHERE cgrcodigo = :cgrcodigo and (gri.gricardapio=1 )'
      'GROUP BY tgridentificacao'
      'ORDER BY tgridentificacao')
    Left = 152
    Top = 520
    ParamData = <
      item
        DataType = ftUnknown
        Name = 'cgrcodigo'
        Value = nil
      end>
    object tgrtgrcodigo: TIntegerField
      FieldName = 'tgrcodigo'
    end
    object tgrtgridentificacao: TStringField
      FieldName = 'tgridentificacao'
      Size = 35
    end
  end
  object olt: TUniQuery
    Connection = Conexao
    SQL.Strings = (
      'SET @orcchave = :orcchave;'
      ''
      'SELECT distinct olt.oltchave'
      '     , olt.oltidentificacao'
      '     , lte.ctacodigo '
      '     , lte.lteregistro'
      '     , lte.lteprincipal'
      '     , lte.ltedesconto     '
      '     , lte.ltetotal'
      '     , ctaidentificacao'
      '     , clbidentificacao'
      '     , IF(olt.orcchave = @orcchave, 1, 0) tipobaixa'
      '     , olt.orcchave'
      '     , lte.ltechave'
      '    -- , mes.meschave'
      '  FROM olt'
      ' INNER JOIN lte ON olt.ltechave = lte.ltechave'
      ' INNER JOIN cta ON lte.ctacodigo = cta.ctacodigo'
      ' INNER JOIN clb ON lte.clbcodigo = clb.clbcodigo'
      '  LEFT JOIN mor ON olt.orcchave = mor.orcchave'
      '  LEFT JOIN mes ON mor.meschave = mes.meschave'
      ' WHERE (olt.orcchave = @orcchave'
      
        '    OR olt.orcchave IN (SELECT orcchavedestino FROM tro WHERE tr' +
        'o.orcchaveorigem = @orcchave))')
    Left = 550
    Top = 16
    ParamData = <
      item
        DataType = ftUnknown
        Name = 'orcchave'
        Value = nil
      end>
    object oltoltchave: TIntegerField
      AutoGenerateValue = arAutoInc
      FieldName = 'oltchave'
    end
    object oltoltidentificacao: TStringField
      FieldName = 'oltidentificacao'
    end
    object oltctacodigo: TIntegerField
      FieldName = 'ctacodigo'
      ReadOnly = True
    end
    object oltlteregistro: TDateTimeField
      FieldName = 'lteregistro'
      ReadOnly = True
    end
    object oltlteprincipal: TFloatField
      FieldName = 'lteprincipal'
      ReadOnly = True
      Required = True
      DisplayFormat = '#,##0.00'
    end
    object oltltedesconto: TFloatField
      FieldName = 'ltedesconto'
      ReadOnly = True
      Required = True
      DisplayFormat = '#,##0.00'
    end
    object oltltetotal: TFloatField
      FieldName = 'ltetotal'
      ReadOnly = True
      Required = True
      DisplayFormat = '#,##0.00'
    end
    object oltctaidentificacao: TStringField
      FieldName = 'ctaidentificacao'
      ReadOnly = True
      Required = True
      Size = 50
    end
    object oltclbidentificacao: TStringField
      FieldName = 'clbidentificacao'
      ReadOnly = True
      Size = 30
    end
    object olttipobaixa: TIntegerField
      FieldName = 'tipobaixa'
      ReadOnly = True
      Required = True
    end
    object oltorcchave: TIntegerField
      FieldName = 'orcchave'
      Required = True
    end
    object oltltechave: TIntegerField
      AutoGenerateValue = arAutoInc
      FieldName = 'ltechave'
      ReadOnly = True
    end
  end
  object unm: TUniQuery
    Connection = Conexao
    SQL.Strings = (
      'SELECT unm.unmchave'
      '     , unm.orcchave'
      '     , unm.unmmesa'
      '     , orc.orcmesa '
      '  FROM unm'
      ' INNER JOIN orc ON unm.orcchave = orc.orcchave'
      ' WHERE unm.unmmesa = :unimesa'
      '   AND orc.stocodigo IN (1,2,5);')
    CachedUpdates = True
    Left = 48
    Top = 472
    ParamData = <
      item
        DataType = ftUnknown
        Name = 'unimesa'
        Value = nil
      end>
    object unmunmchave: TIntegerField
      AutoGenerateValue = arAutoInc
      FieldName = 'unmchave'
    end
    object unmorcchave: TIntegerField
      FieldName = 'orcchave'
      Required = True
    end
    object unmunmmesa: TIntegerField
      FieldName = 'unmmesa'
      Required = True
    end
    object unmorcmesa: TIntegerField
      FieldName = 'orcmesa'
      ReadOnly = True
    end
  end
  object msaocupada: TUniQuery
    Connection = Conexao
    SQL.Strings = (
      'SELECT orcmesa'
      '     , stocodigo'
      '     , item'
      '  FROM (SELECT orc.orcmesa'
      '             , orc.stocodigo     '
      '             , COUNT(ito.orcchave) item'
      '          FROM orc'
      '         INNER JOIN ito ON orc.orcchave = ito.orcchave'
      '         WHERE orc.orcmesa > 0'
      '           AND orc.orcdataencerr IS NULL'
      '           AND orc.stocodigo in (1, 2, 5)'
      '          GROUP BY orc.orcchave) torc'
      'UNION ALL'
      ''
      'SELECT unmmesa orcmesa'
      '     , 99      stocodigo'
      '     , 1       item'
      '  FROM unm'
      ' INNER JOIN orc ON unm.orcchave = orc.orcchave'
      ' WHERE orc.stocodigo in (1,2,5)'
      ''
      'ORDER by orcmesa')
    Left = 488
    Top = 16
    object msaocupadaorcmesa: TIntegerField
      FieldName = 'orcmesa'
    end
    object msaocupadastocodigo: TIntegerField
      FieldName = 'stocodigo'
      Required = True
    end
    object msaocupadaitem: TIntegerField
      FieldName = 'item'
      ReadOnly = True
      Required = True
    end
  end
  object ItemIngredienteNormal: TUniQuery
    Connection = Conexao
    SQL.Strings = (
      'SELECT ito.itoitem           -- item do orcamento'
      '     , ito.procodigo         -- chave produto'
      '     , isi.isitipo'
      '     , sbi.sbiobs'
      '     , ing.pronome ingnome'
      '     , tsi.tsiidentificacao'
      '  FROM ito'
      
        ' INNER JOIN pro ON ito.procodigo = pro.procodigo and pro.sipcodi' +
        'go=1'
      ' INNER JOIN imm ON ito.itochave = imm.itochave'
      ' INNER JOIN sbi ON ito.itochave = sbi.itochave'
      ' INNER JOIN isi ON sbi.sbichave = isi.sbichave'
      ' INNER JOIN tsi ON isi.tsicodigo = tsi.tsicodigo '
      ' INNER JOIN pro ing ON isi.procodigo = ing.procodigo'
      ' WHERE ito.orcchave  = :orcchave -- 2576'
      '    AND ito.itochave = :itochave -- 6017'
      '   AND ito.stocodigo not in (1,3,4,5,8,9)'
      ' ORDER BY ing.pronome')
    Left = 630
    Top = 520
    ParamData = <
      item
        DataType = ftUnknown
        Name = 'orcchave'
        Value = nil
      end
      item
        DataType = ftUnknown
        Name = 'itochave'
        Value = nil
      end>
    object ItemIngredienteNormalitoitem: TIntegerField
      FieldName = 'itoitem'
      Required = True
    end
    object ItemIngredienteNormalprocodigo: TIntegerField
      FieldName = 'procodigo'
      Required = True
    end
    object ItemIngredienteNormalisitipo: TIntegerField
      FieldName = 'isitipo'
      ReadOnly = True
      Required = True
    end
    object ItemIngredienteNormalsbiobs: TStringField
      FieldName = 'sbiobs'
      ReadOnly = True
      Size = 255
    end
    object ItemIngredienteNormalingnome: TStringField
      FieldName = 'ingnome'
      ReadOnly = True
      Required = True
      Size = 150
    end
    object ItemIngredienteNormaltsiidentificacao: TStringField
      FieldName = 'tsiidentificacao'
      ReadOnly = True
      Size = 15
    end
  end
  object ItemIngredienteFra: TUniQuery
    Connection = Conexao
    SQL.Strings = (
      'SELECT DISTINCT'
      '       ito.itoitem         '
      '     , isi.procodigo'
      '     , isi.isitipo'
      '     , sbi.sbiobs'
      '     , ing.pronome ingnome'
      '     , tsi.tsiidentificacao'
      '  FROM ito'
      
        ' INNER JOIN pro ON ito.procodigo = pro.procodigo and pro.sipcodi' +
        'go=1'
      ' INNER JOIN uni ON ito.unicodigo = uni.unicodigo'
      ' INNER JOIN sto ON ito.stocodigo = sto.stocodigo'
      ' INNER JOIN imm ON ito.itochave = imm.itochave'
      '  LEFT JOIN sfn '
      '         ON pro.procodigo = sfn.procodigo '
      '        AND uni.unicodigo = sfn.unicodigo'
      '  LEFT JOIN bri ON ito.itochave = bri.itochave'
      '  LEFT JOIN brd ON bri.brdcodigo = brd.brdcodigo'
      '  LEFT JOIN sbi ON ito.itochave = sbi.itochave'
      '  LEFT JOIN sbr ON sbi.sbrcodigo = sbr.sbrcodigo'
      '  LEFT JOIN isi ON sbi.sbichave = isi.sbichave'
      '  left JOIN tsi ON isi.tsicodigo = tsi.tsicodigo '
      '  LEFT JOIN pro ing ON isi.procodigo = ing.procodigo'
      ' WHERE ito.orcchave = :orcchave'
      '   AND ito.itochave = :itochave'
      '   AND sbi.sbichave = :sbichave'
      '   AND isi.procodigo IS NOT null'
      '   AND ing.pronome IS NOT NULL '
      
        '   AND ((isi.isitipo = 0 AND isi.tsicodigo !=3) OR isi.isitipo =' +
        ' 1)   '
      '   AND ito.stocodigo not in (1,3,4,5,8,9)'
      ' ORDER BY ing.pronome;')
    Left = 504
    Top = 520
    ParamData = <
      item
        DataType = ftUnknown
        Name = 'orcchave'
        Value = nil
      end
      item
        DataType = ftUnknown
        Name = 'itochave'
        Value = nil
      end
      item
        DataType = ftUnknown
        Name = 'sbichave'
        Value = nil
      end>
    object ItemIngredienteFraitoitem: TIntegerField
      FieldName = 'itoitem'
      Required = True
    end
    object ItemIngredienteFraprocodigo: TIntegerField
      FieldName = 'procodigo'
      ReadOnly = True
    end
    object ItemIngredienteFraisitipo: TIntegerField
      FieldName = 'isitipo'
      ReadOnly = True
    end
    object ItemIngredienteFrasbiobs: TStringField
      FieldName = 'sbiobs'
      ReadOnly = True
      Size = 255
    end
    object ItemIngredienteFraingnome: TStringField
      FieldName = 'ingnome'
      ReadOnly = True
      Size = 150
    end
    object ItemIngredienteFratsiidentificacao: TStringField
      FieldName = 'tsiidentificacao'
      ReadOnly = True
      Size = 15
    end
  end
  object ItemSabor: TUniQuery
    Connection = Conexao
    SQL.Strings = (
      'SELECT DISTINCT'
      '       ito.itoitem             -- item do orcamento'
      '     , sbr.sbridentificacao    -- saberes'
      '     , sbi.sbichave'
      '  FROM ito'
      ' INNER JOIN pro ON ito.procodigo = pro.procodigo'
      ' INNER JOIN uni ON ito.unicodigo = uni.unicodigo'
      ' INNER JOIN sto ON ito.stocodigo = sto.stocodigo'
      ' INNER JOIN imm ON ito.itochave = imm.itochave'
      '  LEFT JOIN sfn '
      '         ON pro.procodigo = sfn.procodigo '
      '        AND uni.unicodigo = sfn.unicodigo'
      '  LEFT JOIN bri ON ito.itochave = bri.itochave'
      '  LEFT JOIN brd ON bri.brdcodigo = brd.brdcodigo'
      '  LEFT JOIN sbi ON ito.itochave = sbi.itochave'
      '  LEFT JOIN sbr ON sbi.sbrcodigo = sbr.sbrcodigo'
      ' WHERE ito.orcchave = :orcchave'
      '   AND ito.itochave = :itochave'
      '   AND sbr.sbridentificacao IS NOT NULL'
      '   AND ito.stocodigo not in (1,3,4,5,8,9)'
      ' ORDER BY sbr.sbridentificacao;')
    Left = 424
    Top = 520
    ParamData = <
      item
        DataType = ftUnknown
        Name = 'orcchave'
        Value = nil
      end
      item
        DataType = ftUnknown
        Name = 'itochave'
        Value = nil
      end>
    object ItemSaboritoitem: TIntegerField
      FieldName = 'itoitem'
      Required = True
    end
    object ItemSaborsbridentificacao: TStringField
      FieldName = 'sbridentificacao'
      ReadOnly = True
      Size = 100
    end
    object ItemSaborsbichave: TIntegerField
      FieldName = 'sbichave'
      ReadOnly = True
    end
  end
  object ItemBorda: TUniQuery
    Connection = Conexao
    SQL.Strings = (
      'SELECT DISTINCT'
      '       ito.itoitem             -- item do orcamento'
      '     , brd.brdidentificacao    -- borda'
      '  FROM ito'
      ' INNER JOIN pro ON ito.procodigo = pro.procodigo'
      ' INNER JOIN uni ON ito.unicodigo = uni.unicodigo'
      ' INNER JOIN sto ON ito.stocodigo = sto.stocodigo'
      ' INNER JOIN imm ON ito.itochave = imm.itochave'
      '  LEFT JOIN sfn '
      '         ON pro.procodigo = sfn.procodigo '
      '        AND uni.unicodigo = sfn.unicodigo'
      '  LEFT JOIN bri ON ito.itochave = bri.itochave'
      '  LEFT JOIN brd ON bri.brdcodigo = brd.brdcodigo'
      ' WHERE ito.orcchave = :orcchave'
      '   AND ito.itochave = :itochave'
      '   AND brd.brdidentificacao IS NOT NULL '
      '   AND ito.stocodigo not in (1,3,4,5,8,9)'
      '   AND bri.briincluir = 1'
      ' ORDER BY brd.brdidentificacao')
    Left = 352
    Top = 520
    ParamData = <
      item
        DataType = ftUnknown
        Name = 'orcchave'
        Value = nil
      end
      item
        DataType = ftUnknown
        Name = 'itochave'
        Value = nil
      end>
    object ItemBordaitoitem: TIntegerField
      FieldName = 'itoitem'
      Required = True
    end
    object ItemBordabrdidentificacao: TStringField
      FieldName = 'brdidentificacao'
      ReadOnly = True
      Size = 50
    end
  end
  object Item: TUniQuery
    Connection = Conexao
    SQL.Strings = (
      'SELECT ito.itoitem             -- item do orcamento'
      '     , ito.procodigo           -- chave produto'
      
        '     , IF(sfn.sfncodigo IS NULL, pro.pronome, CONCAT(pro.pronome' +
        'reduzido,'#39' '#39',if(UPPER(uni.uninome)='#39'UNIDADE'#39','#39#39',uni.uninome),'#39' (' +
        'Sb: '#39',formatValor(sfn.sfnquantidade,0),'#39')'#39')) pronome'
      '     , ito.itoquantidade       -- quantidade vendida'
      '     , uni.unisimbolo'
      '     , ito.itovalorav          -- pre'#231'o a vista'
      '     , ito.itototalav          -- total liquido a vista'
      '  FROM ito'
      ' INNER JOIN pro ON ito.procodigo = pro.procodigo'
      ' INNER JOIN uni ON ito.unicodigo = uni.unicodigo'
      ' INNER JOIN sto ON ito.stocodigo = sto.stocodigo'
      '  LEFT JOIN sfn '
      '         ON pro.procodigo = sfn.procodigo '
      '        AND uni.unicodigo = sfn.unicodigo'
      ' WHERE ito.orcchave = :orcchave'
      '   AND ito.itochave = :itochave'
      '   AND ito.stocodigo not in (1,3,4,5,8,9)')
    Left = 296
    Top = 520
    ParamData = <
      item
        DataType = ftUnknown
        Name = 'orcchave'
        Value = nil
      end
      item
        DataType = ftUnknown
        Name = 'itochave'
        Value = nil
      end>
    object Itemitoitem: TIntegerField
      FieldName = 'itoitem'
      Required = True
    end
    object Itemprocodigo: TIntegerField
      FieldName = 'procodigo'
      Required = True
    end
    object Itempronome: TStringField
      FieldName = 'pronome'
      ReadOnly = True
      Size = 150
    end
    object Itemitoquantidade: TFloatField
      FieldName = 'itoquantidade'
      Required = True
    end
    object Itemunisimbolo: TStringField
      FieldName = 'unisimbolo'
      ReadOnly = True
      Required = True
      Size = 6
    end
    object Itemitovalorav: TFloatField
      FieldName = 'itovalorav'
      Required = True
      DisplayFormat = '#,##0.00'
    end
    object Itemitototalav: TFloatField
      FieldName = 'itototalav'
      Required = True
      DisplayFormat = '#,##0.00'
    end
  end
  object dvtbrd: TUniDataSource
    DataSet = vtbrd
    Left = 518
    Top = 440
  end
  object vtbrd: TVirtualTable
    FieldDefs = <
      item
        Name = 'brdcodigo'
        DataType = ftInteger
      end
      item
        Name = 'brdidentificacao'
        DataType = ftString
        Size = 50
      end>
    Left = 472
    Top = 440
    Data = {
      040002000900627264636F6469676F030000000000000010006272646964656E
      74696669636163616F0100320000000000000000000000}
    object vtbrdbrdcodigo: TIntegerField
      FieldName = 'brdcodigo'
    end
    object vtbrdbrdidentificacao: TStringField
      DisplayWidth = 50
      FieldName = 'brdidentificacao'
      Size = 50
    end
  end
  object tbrd: TUniQuery
    SQLInsert.Strings = (
      'INSERT INTO tbrd'
      '  (sfnid, sfncodigo, brdcodigo)'
      'VALUES'
      '  (:sfnid, :sfncodigo, :brdcodigo)')
    SQLDelete.Strings = (
      'DELETE FROM tbrd'
      'WHERE'
      '  sfnid = :Old_sfnid AND sfncodigo = :Old_sfncodigo')
    SQLUpdate.Strings = (
      'UPDATE tbrd'
      'SET'
      '  sfnid = :sfnid, sfncodigo = :sfncodigo, brdcodigo = :brdcodigo'
      'WHERE'
      '  sfnid = :Old_sfnid AND sfncodigo = :Old_sfncodigo')
    SQLLock.Strings = (
      'SELECT * FROM tbrd'
      'WHERE'
      '  sfnid = :Old_sfnid AND sfncodigo = :Old_sfncodigo'
      'FOR UPDATE')
    SQLRefresh.Strings = (
      'SELECT sfnid, sfncodigo, brdcodigo FROM tbrd'
      'WHERE'
      '  sfnid = :sfnid AND sfncodigo = :sfncodigo')
    SQLRecCount.Strings = (
      'SELECT COUNT(*) FROM tbrd')
    Connection = Conexao
    SQL.Strings = (
      'DROP TEMPORARY TABLE IF EXISTS tbrd;'
      '   '
      'CREATE TEMPORARY TABLE tbrd'
      '     ( sfnid     INT'
      '     , sfncodigo INT'
      '     , brdcodigo INT'
      '   ) ENGINE = INNODB DEFAULT charset = latin1;'
      '   '
      'SELECT sfnid'
      '     , sfncodigo'
      '     , brdcodigo'
      '  FROM tbrd'
      ''
      ''
      '/*'
      ''
      '   '
      'CREATE TABLE IF NOT EXISTS tbrd'
      '     ( sfnid     INT'
      '     , sfncodigo INT'
      '     , brdcodigo INT'
      '   ) ENGINE = INNODB DEFAULT charset = latin1;'
      '   '
      'SELECT sfnid'
      '     , sfncodigo'
      '     , brdcodigo'
      '  FROM tbrd'
      ''
      ''
      ''
      '*/')
    CachedUpdates = True
    Left = 406
    Top = 200
    object tbrdsfnid: TIntegerField
      FieldName = 'sfnid'
    end
    object tbrdsfncodigo: TIntegerField
      FieldName = 'sfncodigo'
    end
    object tbrdbrdcodigo: TIntegerField
      FieldName = 'brdcodigo'
    end
  end
  object dbrd: TUniDataSource
    DataSet = brd
    Left = 518
    Top = 392
  end
  object vtfIng: TVirtualTable
    FieldDefs = <
      item
        Name = 'sfnid'
        DataType = ftInteger
      end
      item
        Name = 'sfncodigo'
        DataType = ftInteger
      end
      item
        Name = 'sbrcodigo'
        DataType = ftInteger
      end
      item
        Name = 'procodigo'
        DataType = ftInteger
      end
      item
        Name = 'tsicodigo'
        DataType = ftInteger
      end
      item
        Name = 'tipo'
        DataType = ftInteger
      end>
    Left = 462
    Top = 304
    Data = {
      04000600050073666E69640300000000000000090073666E636F6469676F0300
      0000000000000900736272636F6469676F0300000000000000090070726F636F
      6469676F03000000000000000900747369636F6469676F030000000000000004
      007469706F0300000000000000000000000000}
    object vtfIngsfnid: TIntegerField
      FieldName = 'sfnid'
    end
    object vtfIngsfncodigo: TIntegerField
      FieldName = 'sfncodigo'
    end
    object vtfIngsbrcodigo: TIntegerField
      FieldName = 'sbrcodigo'
    end
    object vtfIngprocodigo: TIntegerField
      FieldName = 'procodigo'
    end
    object vtfIngtsicodigo: TIntegerField
      FieldName = 'tsicodigo'
    end
    object vtfIngtipo: TIntegerField
      FieldName = 'tipo'
    end
    object vtfIngquantidade: TIntegerField
      FieldName = 'quantidade'
    end
  end
  object dfIngrediente: TUniDataSource
    DataSet = fIngrediente
    Left = 622
    Top = 248
  end
  object fIngrediente: TUniQuery
    Connection = Conexao
    SQL.Strings = (
      'SET @tsicodigo        = :tsicodigo;'
      
        'SET @tsiidentificacao = (SELECT tsiidentificacao FROM tsi WHERE ' +
        'tsicodigo = @tsicodigo);'
      ''
      'SELECT isa.sbrcodigo'
      '     , isa.procodigo'
      '     , pro.pronome '
      '     , CONVERT(@tsicodigo, UNSIGNED) tsicodigo '
      '     , CONVERT(@tsiidentificacao, CHAR(15)) tsiidentificacao'
      '     , 0 tipo'
      '     , cast('#39#39' as char(100)) obs'
      '     , 0 itochave'
      '     , 1 isiquantidade'
      '  FROM isa,pro '
      ' WHERE isa.procodigo = pro.procodigo '
      '   AND sbrcodigo = :sbrcodigo'
      ' ORDER BY pro.pronome')
    CachedUpdates = True
    Left = 518
    Top = 248
    ParamData = <
      item
        DataType = ftInteger
        Name = 'tsicodigo'
        Value = nil
      end
      item
        DataType = ftInteger
        Name = 'sbrcodigo'
        Value = nil
      end>
    object fIngredientesbrcodigo: TIntegerField
      FieldName = 'sbrcodigo'
    end
    object fIngredienteprocodigo: TIntegerField
      FieldName = 'procodigo'
    end
    object fIngredientepronome: TStringField
      FieldName = 'pronome'
      Size = 150
    end
    object fIngredientetsicodigo: TIntegerField
      FieldName = 'tsicodigo'
    end
    object fIngredientetsiidentificacao: TStringField
      FieldName = 'tsiidentificacao'
      Size = 15
    end
    object fIngredientetipo: TIntegerField
      FieldName = 'tipo'
    end
    object fIngredienteobs: TStringField
      FieldName = 'obs'
      Size = 100
    end
    object fIngredienteitochave: TIntegerField
      FieldName = 'itochave'
    end
    object fIngredienteisiquantidade: TIntegerField
      FieldName = 'isiquantidade'
    end
  end
  object dvtpro: TUniDataSource
    DataSet = vtpro
    Left = 590
    Top = 176
  end
  object vtpro: TVirtualTable
    FieldDefs = <
      item
        Name = 'sfnid'
        DataType = ftInteger
      end
      item
        Name = 'sfncodigo'
        DataType = ftInteger
      end
      item
        Name = 'sbrcodigo'
        DataType = ftInteger
      end
      item
        Name = 'descricao'
        DataType = ftString
        Size = 50
      end
      item
        Name = 'copos'
        DataType = ftInteger
      end
      item
        Name = 'pratos'
        DataType = ftInteger
      end
      item
        Name = 'obs'
        DataType = ftString
        Size = 100
      end>
    Left = 518
    Top = 184
    Data = {
      04000700050073666E69640300000000000000090073666E636F6469676F0300
      0000000000000900736272636F6469676F030000000000000009006465736372
      6963616F01003200000000000500636F706F7303000000000000000600707261
      746F73030000000000000003006F62730100640000000000000000000000}
    object vtprosfnid: TIntegerField
      FieldName = 'sfnid'
    end
    object vtprosfncodigo: TIntegerField
      FieldName = 'sfncodigo'
    end
    object vtprosbrcodigo: TIntegerField
      FieldName = 'sbrcodigo'
    end
    object vtprodescricao: TStringField
      FieldName = 'descricao'
      Size = 50
    end
    object vtprocopos: TIntegerField
      FieldName = 'copos'
    end
    object vtpropratos: TIntegerField
      FieldName = 'pratos'
    end
    object vtproobs: TStringField
      FieldName = 'obs'
      Size = 100
    end
  end
  object dfsbr: TUniDataSource
    DataSet = fsbr
    Left = 590
    Top = 120
  end
  object fsbr: TUniQuery
    Connection = Conexao
    SQL.Strings = (
      'SELECT sbrcodigo'
      '     , sbridentificacao'
      '     , procodigo'
      '  FROM sbr'
      ' WHERE grpcodigo = :grpcodigo and sbr.sipcodigo=1'
      ' ORDER BY sbridentificacao')
    Left = 518
    Top = 120
    ParamData = <
      item
        DataType = ftUnknown
        Name = 'grpcodigo'
        Value = nil
      end>
    object fsbrsbrcodigo: TIntegerField
      AutoGenerateValue = arAutoInc
      FieldName = 'sbrcodigo'
    end
    object fsbrsbridentificacao: TStringField
      FieldName = 'sbridentificacao'
      Required = True
      Size = 100
    end
    object fsbrprocodigo: TIntegerField
      FieldName = 'procodigo'
    end
  end
  object tisi: TUniQuery
    SQLInsert.Strings = (
      'INSERT INTO tisi'
      
        '  (sbrcodigo, tsicodigo, procodigo, isitipo, sfncodigo, sfnid,  ' +
        'obs, isiitem, bprchave, isiquantidade)'
      'VALUES'
      
        '  (:sbrcodigo, :tsicodigo, :procodigo, :isitipo, :sfncodigo, :sf' +
        'nid,  :obs, :isiitem, :bprchave, :isiquantidade)')
    SQLDelete.Strings = (
      'DELETE FROM tisi'
      'WHERE'
      '  ID = :Old_ID')
    SQLUpdate.Strings = (
      'UPDATE tisi'
      'SET'
      
        '  sbrcodigo = :sbrcodigo, tsicodigo = :tsicodigo, procodigo = :p' +
        'rocodigo, isitipo = :isitipo, sfncodigo = :sfncodigo, sfnid = :s' +
        'fnid, obs = :obs, isiitem = :isiitem, bprchave = :bprchave, isiq' +
        'uantidade=:isiquantidade'
      'WHERE'
      '  ID = :Old_ID')
    SQLLock.Strings = (
      'SELECT * FROM tisi'
      'WHERE'
      '  ID = :Old_ID'
      'FOR UPDATE')
    SQLRefresh.Strings = (
      
        'SELECT sbrcodigo, tsicodigo, procodigo, isitipo, sfncodigo, sfni' +
        'd, obs, isiitem, bprchave,isiquantidade FROM tisi'
      'WHERE'
      '  ID = :Old_ID')
    SQLRecCount.Strings = (
      'SELECT COUNT(*) FROM tisi')
    Connection = Conexao
    SQL.Strings = (
      'DROP TEMPORARY TABLE  IF EXISTS tisi;'
      '   '
      'CREATE TEMPORARY TABLE IF NOT EXISTS tisi'
      '     ( ID        INT NOT NULL AUTO_INCREMENT'
      '     , sbrcodigo INT'
      '     , tsicodigo INT'
      '     , procodigo INT '
      '     , isitipo   INT'
      '     , sfncodigo int'
      '     , sfnid     int'
      '     , obs       varchar(100)'
      '     , isiitem  int'
      '     , bprchave int'
      '     , isiquantidade int'
      '     , PRIMARY KEY (ID)'
      '   ) ENGINE = INNODB DEFAULT charset = latin1;'
      '   '
      'SELECT sbrcodigo'
      '     , tsicodigo'
      '     , procodigo'
      '     , isitipo '
      '     , sfncodigo'
      '     , sfnid'
      '     , obs'
      '     , isiitem'
      '     , bprchave'
      '     , isiquantidade'
      '  FROM tisi'
      ''
      '/*'
      'CREATE TABLE IF NOT EXISTS tisi'
      '     ( ID        INT NOT NULL AUTO_INCREMENT'
      '     , sbrcodigo INT'
      '     , tsicodigo INT'
      '     , procodigo INT '
      '     , isitipo   INT'
      '     , sfncodigo int'
      '     , sfnid     int'
      '     , obs       varchar(100)'
      '     , isiitem  int'
      '     , bprchave int'
      '     , isiquantidade int'
      '     , PRIMARY KEY (ID)'
      '   ) ENGINE = INNODB DEFAULT charset = latin1;'
      '   '
      'SELECT sbrcodigo'
      '     , tsicodigo'
      '     , procodigo'
      '     , isitipo '
      '     , sfncodigo'
      '     , sfnid'
      '     , obs'
      '     , isiitem'
      '     , bprchave'
      '     , isiquantidade'
      '  FROM tisi'
      ''
      '*/')
    CachedUpdates = True
    Left = 432
    Top = 200
    object tisisbrcodigo: TIntegerField
      FieldName = 'sbrcodigo'
    end
    object tisitsicodigo: TIntegerField
      FieldName = 'tsicodigo'
    end
    object tisiprocodigo: TIntegerField
      FieldName = 'procodigo'
    end
    object tisiisitipo: TIntegerField
      FieldName = 'isitipo'
    end
    object tisisfncodigo: TIntegerField
      FieldName = 'sfncodigo'
    end
    object tisisfnid: TIntegerField
      FieldName = 'sfnid'
    end
    object tisiobs: TStringField
      FieldName = 'obs'
      Size = 100
    end
    object tisiisiitem: TIntegerField
      FieldName = 'isiitem'
    end
    object tisibprchave: TIntegerField
      FieldName = 'bprchave'
    end
    object tisiisiquantidade: TIntegerField
      FieldName = 'isiquantidade'
    end
  end
  object dAdc: TUniDataSource
    DataSet = Adc
    Left = 320
    Top = 376
  end
  object Adc: TUniQuery
    Connection = Conexao
    SQL.Strings = (
      'SET @tsicodigo        = :tsicodigo;'
      
        'SET @tsiidentificacao = (SELECT tsiidentificacao FROM tsi WHERE ' +
        'tsicodigo = @tsicodigo);'
      ''
      ''
      'SELECT DISTINCT'
      '  pro.procodigo,'
      '  pronome,'
      '  (SELECT'
      '      FormatValor(u.punprecoav,2)  punprecoav'
      '    FROM pun u'
      '    WHERE pro.procodigo = u.procodigo'
      '    AND pro.unicodigo = u.unicodigo) punprecoav,'
      '  pro.grpcodigo,'
      '  CONVERT(@tsicodigo, UNSIGNED) tsicodigo,'
      '  CONVERT('#39'1'#39', char(15)) tsiidentificacao,'
      '  1 isiquantidade,'
      '  3 tipo,'
      '  pro.procodigo'
      'FROM pro'
      ''
      '  JOIN pun'
      '    ON pro.procodigo = pun.procodigo'
      '    AND pro.unicodigo = pun.unicodigo'
      ''
      ''
      'WHERE pro.tpocodigo IN (1)'
      'AND pro.sipcodigo = 1'
      'AND pro.grpcodigo = :grpcodigo '
      ''
      ''
      'ORDER BY 2'
      ''
      ''
      '/*'
      ''
      'SELECT DISTINCT'
      '  isa.procodigo,'
      '  (SELECT'
      '      p.pronome'
      '    FROM pro p'
      '    WHERE p.procodigo = isa.procodigo) pronome,'
      '  (SELECT'
      '      u.punprecoav'
      '    FROM pun u'
      '    WHERE isa.procodigo = u.procodigo'
      '    AND pro.unicodigo = u.unicodigo) punprecoav,'
      '  pro.grpcodigo,'
      '  CONVERT(@tsicodigo, UNSIGNED) tsicodigo,'
      '  CONVERT('#39'1'#39', char(15)) tsiidentificacao,'
      '  1 isiquantidade,'
      '  3 tipo'
      'FROM pro'
      '  JOIN pun'
      '    ON pro.procodigo = pun.procodigo'
      '    AND pro.unicodigo = pun.unicodigo'
      '  JOIN sbr'
      '    ON sbr.procodigo = pro.procodigo'
      '  JOIN isa'
      '    ON isa.sbrcodigo = sbr.sbrcodigo -- and senadicionavel=1'
      'WHERE pro.tpocodigo IN (0)'
      'AND pro.sipcodigo = 1'
      'AND pro.grpcodigo = :grpcodigo'
      ''
      ''
      'UNION DISTINCT'
      ''
      'SELECT DISTINCT'
      '  isa.procodigo,'
      '  (SELECT'
      '      p.pronome'
      '    FROM pro p'
      '    WHERE p.procodigo = isa.procodigo) pronome,'
      '  (SELECT'
      '      u.punprecoav'
      '    FROM pun u'
      '    WHERE isa.procodigo = u.procodigo'
      '    AND pro.unicodigo = u.unicodigo) punprecoav,'
      '  pro.grpcodigo,'
      '  CONVERT(@tsicodigo, UNSIGNED) tsicodigo,'
      '  CONVERT('#39'1'#39', char(15)) tsiidentificacao,'
      '  1 isiquantidade,'
      '  3 tipo'
      'FROM pro'
      ''
      '  JOIN pun'
      '    ON pro.procodigo = pun.procodigo'
      '    AND pro.unicodigo = pun.unicodigo'
      '  JOIN sbr'
      '    ON sbr.grpcodigo = pro.grpcodigo'
      ''
      '  JOIN isa'
      '    ON isa.sbrcodigo = sbr.sbrcodigo -- and senadicionavel=1'
      'WHERE pro.tpocodigo IN (0)'
      'AND pro.sipcodigo = 1'
      'AND pro.grpcodigo = :grpcodigo '
      ''
      ''
      'ORDER BY 2 */'
      ''
      ''
      ''
      ''
      ''
      '/* SELECT DISTINCT isa.procodigo '
      
        '     , (select p.pronome FROM pro p WHERE p.procodigo=isa.procod' +
        'igo) pronome'
      
        '     , (SELECT u.punprecoav FROM pun u WHERE isa.procodigo  = u.' +
        'procodigo     AND pro.unicodigo = u.unicodigo ) punprecoav'
      '     , pro.grpcodigo '
      '     , pro.tpocodigo'
      '     , CONVERT(@tsicodigo, UNSIGNED) tsicodigo '
      '     , CONVERT(@tsiidentificacao, CHAR(15)) tsiidentificacao'
      '     , 1 isiquantidade'
      'FROM pro '
      '  JOIN v_enp enp '
      '    ON enp.enpcodigo = pro.enpcodigo '
      '  JOIN pun '
      '    ON pro.procodigo  = pun.procodigo '
      '    AND pro.unicodigo = pun.unicodigo '
      'JOIN sbr ON sbr.procodigo=pro.procodigo '
      'JOIN isa ON isa.sbrcodigo=sbr.sbrcodigo and senadicionavel=1'
      'where pro.tpocodigo in (0) '
      ''
      ''
      ''
      ''
      ''
      ''
      ''
      ''
      ''
      'SET @tsicodigo        = :tsicodigo;'
      
        'SET @tsiidentificacao = (SELECT tsiidentificacao FROM tsi WHERE ' +
        'tsicodigo = @tsicodigo);'
      ''
      'SELECT pro.procodigo '
      '     , pro.pronome '
      '     , pun.punprecoav '
      '     , pro.grpcodigo '
      '     , pro.tpocodigo'
      '     , CONVERT(@tsicodigo, UNSIGNED) tsicodigo '
      '     , CONVERT(@tsiidentificacao, CHAR(15)) tsiidentificacao'
      'FROM pro '
      '  JOIN v_enp enp '
      '    ON enp.enpcodigo = pro.enpcodigo '
      '  JOIN pun '
      '    ON pro.procodigo  = pun.procodigo '
      '    AND pro.unicodigo = pun.unicodigo '
      'where pro.tpocodigo=1'
      'order by pro.pronome'
      '*/')
    CachedUpdates = True
    Left = 240
    Top = 376
    ParamData = <
      item
        DataType = ftUnknown
        Name = 'tsicodigo'
        Value = nil
      end
      item
        DataType = ftUnknown
        Name = 'grpcodigo'
        Value = nil
      end>
    object Adcprocodigo: TIntegerField
      FieldName = 'procodigo'
    end
    object Adcpronome: TStringField
      FieldName = 'pronome'
      Size = 150
    end
    object Adcgrpcodigo: TIntegerField
      FieldName = 'grpcodigo'
    end
    object Adcpunprecoav: TStringField
      FieldName = 'punprecoav'
    end
    object Adctsicodigo: TIntegerField
      FieldName = 'tsicodigo'
    end
    object Adctsiidentificacao: TStringField
      FieldName = 'tsiidentificacao'
      Size = 15
    end
    object Adcisiquantidade: TIntegerField
      FieldName = 'isiquantidade'
    end
  end
  object dtsi: TUniDataSource
    DataSet = tsi
    Left = 376
    Top = 312
  end
  object tsi: TUniQuery
    Connection = Conexao
    SQL.Strings = (
      'SELECT tsicodigo'
      '     , tsiidentificacao '
      '     '
      '  FROM tsi'
      ' ORDER BY tsicodigo')
    Left = 376
    Top = 264
    object tsitsicodigo: TIntegerField
      AutoGenerateValue = arAutoInc
      FieldName = 'tsicodigo'
    end
    object tsitsiidentificacao: TStringField
      FieldName = 'tsiidentificacao'
      Size = 15
    end
  end
  object dsbr: TUniDataSource
    DataSet = sbr
    Left = 320
    Top = 312
  end
  object sbr: TUniQuery
    Connection = Conexao
    SQL.Strings = (
      'SET @tsicodigo        = :tsicodigo;'
      
        'SET @tsiidentificacao = (SELECT tsiidentificacao FROM tsi WHERE ' +
        'tsicodigo = @tsicodigo);'
      ''
      'SELECT isa.sbrcodigo'
      '     , sbr.procodigo sbrprocodigo'
      '     , isa.procodigo'
      '     , pro.pronome'
      '     , CONVERT(@tsicodigo, UNSIGNED) tsicodigo '
      '     , CONVERT(@tsiidentificacao, CHAR(15)) tsiidentificacao'
      '     , 0 tipo'
      '     , cast('#39#39' as char(100)) obs'
      '     , 0 itochave'
      '     , 1 isiquantidade'
      '  FROM isa'
      ' INNER JOIN sbr '
      
        '         ON isa.sbrcodigo = sbr.sbrcodigo and senadicionavel=0 a' +
        'nd sbr.sipcodigo=1'
      ''
      ' INNER JOIN pro '
      '         ON isa.procodigo = pro.procodigo and pro.sipcodigo=1'
      '         '
      ' WHERE sbr.procodigo = :procodigo and pro.sipcodigo=1'
      ' ORDER BY pro.pronome')
    CachedUpdates = True
    Left = 320
    Top = 264
    ParamData = <
      item
        DataType = ftInteger
        Name = 'tsicodigo'
        Value = 3
      end
      item
        DataType = ftInteger
        Name = 'procodigo'
        Value = 0
      end>
    object sbrsbrcodigo: TIntegerField
      FieldName = 'sbrcodigo'
    end
    object sbrsbrprocodigo: TIntegerField
      FieldName = 'sbrprocodigo'
    end
    object sbrprocodigo: TIntegerField
      FieldName = 'procodigo'
    end
    object sbrpronome: TStringField
      FieldName = 'pronome'
      Size = 150
    end
    object sbrtsicodigo: TIntegerField
      FieldName = 'tsicodigo'
    end
    object sbrtsiidentificacao: TStringField
      FieldName = 'tsiidentificacao'
      Size = 15
    end
    object sbrtipo: TIntegerField
      FieldName = 'tipo'
    end
    object sbrobs: TStringField
      FieldName = 'obs'
      Size = 100
    end
    object sbritochave: TIntegerField
      FieldName = 'itochave'
    end
    object sbrisiquantidade: TIntegerField
      FieldName = 'isiquantidade'
    end
  end
  object MobGravaItens: TUniStoredProc
    StoredProcName = 'MobGravaItens'
    SQL.Strings = (
      
        'CALL MobGravaItens(:pOrcChave, :pClbCodigo, :pFlaCodigo, :pTipoI' +
        'tem, @pConfirma, @pMensagem); SELECT CAST(@pConfirma AS SIGNED) ' +
        'AS '#39'@pConfirma'#39', @pMensagem AS '#39'@pMensagem'#39)
    Connection = Conexao
    Left = 320
    Top = 136
    ParamData = <
      item
        DataType = ftInteger
        Name = 'pOrcChave'
        ParamType = ptInput
        Value = nil
      end
      item
        DataType = ftInteger
        Name = 'pClbCodigo'
        ParamType = ptInput
        Value = nil
      end
      item
        DataType = ftInteger
        Name = 'pFlaCodigo'
        ParamType = ptInput
        Value = nil
      end
      item
        DataType = ftInteger
        Name = 'pTipoItem'
        ParamType = ptInput
        Value = nil
      end
      item
        DataType = ftInteger
        Name = 'pConfirma'
        ParamType = ptOutput
        Value = nil
      end
      item
        DataType = ftString
        Name = 'pMensagem'
        ParamType = ptOutput
        Size = 255
        Value = nil
      end>
    CommandStoredProcName = 'MobGravaItens'
  end
  object tito: TUniQuery
    SQLInsert.Strings = (
      'INSERT INTO tito'
      
        '  (ID, procodigo, puncodigo, clbcodigo, qtde, pessoas, obs, sfni' +
        'd, sfncodigo, copos, pratos)'
      'VALUES'
      
        '  (:ID, :procodigo, :puncodigo, :clbcodigo, :qtde, :pessoas, :ob' +
        's, :sfnid, :sfncodigo, :copos, :pratos)')
    SQLDelete.Strings = (
      'DELETE FROM tito'
      'WHERE'
      '  ID = :Old_ID')
    SQLUpdate.Strings = (
      'UPDATE tito'
      'SET'
      
        '  ID = :ID, procodigo = :procodigo, puncodigo = :puncodigo, clbc' +
        'odigo = :clbcodigo, qtde = :qtde, pessoas = :pessoas, obs = :obs' +
        ', sfnid = :sfnid, sfncodigo = :sfncodigo, copos = :copos, pratos' +
        ' = :pratos)'
      'WHERE'
      '  ID = :Old_ID')
    SQLLock.Strings = (
      'SELECT * FROM tito'
      'WHERE'
      '  ID = :Old_ID'
      'FOR UPDATE')
    SQLRefresh.Strings = (
      
        'SELECT ID, procodigo, puncodigo, clbcodigo, qtde, pessoas, obs, ' +
        'sfnid, sfncodigo FROM tito'
      'WHERE'
      '  ID = :Old_ID')
    SQLRecCount.Strings = (
      'SELECT COUNT(*) FROM tito')
    Connection = Conexao
    SQL.Strings = (
      'DROP TEMPORARY TABLE IF EXISTS tito;'
      '   '
      'CREATE TEMPORARY TABLE tito'
      '     ( ID INT NOT NULL AUTO_INCREMENT'
      '     , procodigo int'
      '     , puncodigo int'
      '     , clbcodigo int '
      '     , qtde      float'
      '     , pessoas   int'
      '     , obs       varchar(100)'
      '     , sfnid     int'
      '     , sfncodigo int'
      '     , copos     int'
      '     , pratos    int'
      '     , PRIMARY KEY (ID)'
      '   ) ENGINE = INNODB DEFAULT charset = latin1;'
      '   '
      'SELECT ID '
      '     , procodigo '
      '     , puncodigo '
      '     , clbcodigo'
      '     , qtde   '
      '     , pessoas'
      '     , obs'
      '     , sfnid'
      '     , sfncodigo'
      '     , copos'
      '     , pratos'
      '  FROM tito; '
      ''
      '/*'
      ''
      '  '
      'CREATE TABLE if not exists tito'
      '     ( ID INT NOT NULL AUTO_INCREMENT'
      '     , procodigo int'
      '     , puncodigo int'
      '     , clbcodigo int '
      '     , qtde      float'
      '     , pessoas   int'
      '     , obs       varchar(100)'
      '     , sfnid     int'
      '     , sfncodigo int'
      '     , copos     int'
      '     , pratos    int'
      '     , PRIMARY KEY (ID)'
      '   ) ENGINE = INNODB DEFAULT charset = latin1;'
      '   '
      'SELECT ID '
      '     , procodigo '
      '     , puncodigo '
      '     , clbcodigo'
      '     , qtde   '
      '     , pessoas'
      '     , obs'
      '     , sfnid'
      '     , sfncodigo'
      '     , copos'
      '     , pratos'
      '  FROM tito;'
      ''
      ''
      '*/'
      '')
    CachedUpdates = True
    Left = 376
    Top = 200
    object titoID: TIntegerField
      AutoGenerateValue = arAutoInc
      FieldName = 'ID'
    end
    object titoprocodigo: TIntegerField
      FieldName = 'procodigo'
    end
    object titopuncodigo: TIntegerField
      FieldName = 'puncodigo'
    end
    object titoclbcodigo: TIntegerField
      FieldName = 'clbcodigo'
    end
    object titoqtde: TFloatField
      FieldName = 'qtde'
    end
    object titopessoas: TIntegerField
      FieldName = 'pessoas'
    end
    object titoobs: TStringField
      FieldName = 'obs'
      Size = 100
    end
    object titosfnid: TIntegerField
      FieldName = 'sfnid'
    end
    object titosfncodigo: TIntegerField
      FieldName = 'sfncodigo'
    end
    object titocopos: TIntegerField
      FieldName = 'copos'
    end
    object titopratos: TIntegerField
      FieldName = 'pratos'
    end
  end
  object dpun: TUniDataSource
    DataSet = pun
    Left = 240
    Top = 312
  end
  object pun: TUniQuery
    Connection = Conexao
    SQL.Strings = (
      'SELECT pun.puncodigo'
      '     , uni.unisimbolo'
      '     , uni.uninome '
      '     , pun.punprecoav'
      '     , formatvalor(pun.punprecoav,2) vlvenda'
      '  FROM pun'
      ' INNER JOIN uni'
      '         ON pun.unicodigo = uni.unicodigo'
      
        ' WHERE procodigo = :procodigo and pun.tuncodigo in(1,9) and sipc' +
        'odigo=1'
      ' ORDER BY pun.punprecoav')
    Left = 240
    Top = 264
    ParamData = <
      item
        DataType = ftUnknown
        Name = 'procodigo'
        Value = nil
      end>
    object punpuncodigo: TIntegerField
      FieldName = 'puncodigo'
    end
    object pununisimbolo: TStringField
      FieldName = 'unisimbolo'
      ReadOnly = True
      Required = True
      Size = 6
    end
    object punpunprecoav: TFloatField
      FieldName = 'punprecoav'
      Required = True
    end
    object punvlvenda: TStringField
      Alignment = taRightJustify
      FieldName = 'vlvenda'
      ReadOnly = True
      Size = 30
    end
    object pununinome: TStringField
      FieldName = 'uninome'
      Size = 35
    end
  end
  object MobAbreMesa: TUniStoredProc
    StoredProcName = 'MobAbreOrcamento'
    SQL.Strings = (
      
        'CALL MobAbreOrcamento(:pEtdCodigo, :pClbCodigo, :pMocCodigo, :pO' +
        'rcMesa, :pFlacodigo, :pTrmCodigo, @pOrcChave); SELECT CAST(@pOrc' +
        'Chave AS SIGNED) AS '#39'@pOrcChave'#39)
    Connection = Conexao
    Left = 320
    Top = 80
    ParamData = <
      item
        DataType = ftInteger
        Name = 'pEtdCodigo'
        ParamType = ptInput
        Value = nil
      end
      item
        DataType = ftInteger
        Name = 'pClbCodigo'
        ParamType = ptInput
        Value = nil
      end
      item
        DataType = ftInteger
        Name = 'pMocCodigo'
        ParamType = ptInput
        Value = nil
      end
      item
        DataType = ftInteger
        Name = 'pOrcMesa'
        ParamType = ptInput
        Value = nil
      end
      item
        DataType = ftInteger
        Name = 'pFlacodigo'
        ParamType = ptInput
        Value = nil
      end
      item
        DataType = ftInteger
        Name = 'pTrmCodigo'
        ParamType = ptInput
        Value = nil
      end
      item
        DataType = ftInteger
        Name = 'pOrcChave'
        ParamType = ptOutput
        Value = nil
      end>
    CommandStoredProcName = 'MobAbreOrcamento'
  end
  object dsfn: TUniDataSource
    DataSet = sfn
    Left = 120
    Top = 400
  end
  object dproc: TUniDataSource
    DataSet = proc
    Left = 128
    Top = 352
  end
  object sfn: TUniQuery
    Connection = Conexao
    SQL.Strings = (
      '-- verificar se '
      'SELECT distinct pro.procodigo'
      '     , pun.puncodigo'
      
        '     , CONCAT(pro.pronomereduzido,'#39' '#39',if(UPPER(uni.uninome)='#39'UNI' +
        'DADE'#39','#39#39',uni.uninome),'#39' (Sb: '#39',formatValor(sfnquantidade,0),'#39')'#39')' +
        ' as pronomereduzido'
      '     , formatValor(pun.punprecoav,2) punprecoav'
      '     , pro.unicodigo as unipro'
      '     , pun.unicodigo as unipun'
      '     , uni.unisimbolo   '
      '     , sfn.sfnquantidade'
      '     , sfn.sfncodigo'
      '  FROM pun '
      ' INNER JOIN pro'
      '         ON pun.procodigo = pro.procodigo '
      ' INNER JOIN uni'
      '         ON pun.unicodigo = uni.unicodigo '
      ' INNER JOIN sfn '
      '         ON pro.procodigo = sfn.procodigo '
      '        AND uni.unicodigo = sfn.unicodigo'
      ' WHERE (pro.tpocodigo = 0 or pro.tpocodigo = 4)'
      '   AND pro.grpcodigo=:grpcodigo '
      ' ORDER BY pun.punprecoav -- pro.pronomereduzido, uni.uninome')
    Left = 48
    Top = 408
    ParamData = <
      item
        DataType = ftUnknown
        Name = 'grpcodigo'
        Value = nil
      end>
    object sfnprocodigo: TIntegerField
      FieldName = 'procodigo'
    end
    object sfnpuncodigo: TIntegerField
      FieldName = 'puncodigo'
      ReadOnly = True
    end
    object sfnpronomereduzido: TStringField
      FieldName = 'pronomereduzido'
      ReadOnly = True
      Size = 98
    end
    object sfnpunprecoav: TStringField
      Alignment = taRightJustify
      FieldName = 'punprecoav'
      ReadOnly = True
      Size = 30
    end
    object sfnunipro: TIntegerField
      FieldName = 'unipro'
      Required = True
    end
    object sfnunipun: TIntegerField
      FieldName = 'unipun'
      ReadOnly = True
      Required = True
    end
    object sfnunisimbolo: TStringField
      FieldName = 'unisimbolo'
      ReadOnly = True
      Required = True
      Size = 6
    end
    object sfnsfnquantidade: TFloatField
      FieldName = 'sfnquantidade'
      ReadOnly = True
      Required = True
    end
    object sfnsfncodigo: TIntegerField
      FieldName = 'sfncodigo'
      ReadOnly = True
    end
  end
  object proc: TUniQuery
    Connection = Conexao
    SQL.Strings = (
      '-- se n'#227'o existir resultado na pesquisa snf '#233' produto comum'
      'SELECT pro.procodigo'
      
        '     ,   namecase((CAST(pro.pronome as char(40) CHARSET Latin1))' +
        ') pronomereduzido'
      '     , punprecoav'
      '  FROM pro '
      ' INNER JOIN gri'
      '           ON pro.grpcodigo = gri.grpcodigo'
      ' left JOIN sbr'
      '         ON pro.procodigo = sbr.procodigo'
      ' INNER JOIN (SELECT pun.procodigo '
      '                  , pun.unicodigo'
      
        '                  , (CAST(GROUP_CONCAT(RTRIM(CONCAT(uni.unisimbo' +
        'lo,'#39' '#39',FormatValor(pun.punprecoav,2)))  ORDER BY pun.punprecoav ' +
        'ASC SEPARATOR '#39' '#39') AS char(40) charset Latin1)) AS punprecoav'
      '               FROM pun '
      '              INNER JOIN pro pr'
      
        '                      ON pun.procodigo = pr.procodigo  and pun.t' +
        'uncodigo in (1,9)'
      '              INNER JOIN uni on pun.unicodigo = uni.unicodigo'
      '              WHERE 0 = (SELECT COUNT(*)'
      '                           FROM pro p'
      '                          INNER JOIN sfn s'
      '                                  ON s.procodigo = p.procodigo '
      '                          WHERE p.grpcodigo=pr.grpcodigo)'
      '              GROUP BY pun.procodigo)tpun'
      '         ON pro.procodigo = tpun.procodigo'
      
        ' WHERE (pro.tpocodigo = 0  or pro.tpocodigo = 4  or pro.tpocodig' +
        'o = 9)'
      '   AND 0 = (SELECT COUNT(*)'
      '               FROM pro p'
      '              INNER JOIN sfn s'
      '                      ON s.procodigo = p.procodigo '
      '              WHERE p.grpcodigo=pro.grpcodigo)'
      '   AND pro.grpcodigo=:grpcodigo and pro.sipcodigo=1'
      '   '
      ' ORDER BY ifnull(sbr.sbrordem,0), pro.pronome'
      ''
      '')
    Left = 48
    Top = 352
    ParamData = <
      item
        DataType = ftUnknown
        Name = 'grpcodigo'
        Value = nil
      end>
    object procprocodigo: TIntegerField
      FieldName = 'procodigo'
    end
    object procpronomereduzido: TStringField
      DisplayLabel = 'Produto'
      FieldName = 'pronomereduzido'
      ReadOnly = True
      Size = 255
    end
    object procpunprecoav: TStringField
      Alignment = taRightJustify
      DisplayLabel = 'Valor'
      FieldName = 'punprecoav'
      ReadOnly = True
      Size = 40
    end
  end
  object dGrp: TUniDataSource
    DataSet = grp
    Left = 128
    Top = 304
  end
  object grp: TUniQuery
    Connection = Conexao
    SQL.Strings = (
      'set @tgrcodigo=:tgrcodigo;'
      'set @cgrcodigo=:cgrcodigo;'
      ''
      'SELECT'
      '  grp.grpcodigo,'
      '  grp.grpidentificacao,'
      '  pro.tpocodigo'
      'FROM pro'
      '  INNER JOIN grp'
      '    ON pro.grpcodigo = grp.grpcodigo'
      '  INNER JOIN gri'
      '    ON grp.grpcodigo = gri.grpcodigo'
      '    '
      
        'WHERE (pro.tpocodigo = 0 or pro.tpocodigo = 4 or pro.tpocodigo =' +
        ' 9 )'
      
        'and (gri.gricardapio=1 ) and grp.tgrcodigo=@tgrcodigo AND if(@cg' +
        'rcodigo=-1,grp.cgrcodigo<>@cgpcodigo,grp.cgrcodigo=@cgrcodigo)'
      'and pro.sipcodigo=1'
      'GROUP BY grp.grpidentificacao'
      'ORDER BY grp.grpordem, grp.grpidentificacao')
    Left = 48
    Top = 304
    ParamData = <
      item
        DataType = ftUnknown
        Name = 'tgrcodigo'
        Value = nil
      end
      item
        DataType = ftUnknown
        Name = 'cgrcodigo'
        Value = nil
      end>
    object grpgrpcodigo: TIntegerField
      DisplayLabel = 'C'#243'digo'
      FieldName = 'grpcodigo'
    end
    object grpgrpidentificacao: TStringField
      DisplayLabel = 'Grupo'
      FieldName = 'grpidentificacao'
      Required = True
      Size = 30
    end
    object grptpocodigo: TIntegerField
      FieldName = 'tpocodigo'
      ReadOnly = True
      Required = True
    end
  end
  object dVtiItens: TUniDataSource
    DataSet = vtItens
    Left = 320
    Top = 200
  end
  object vtItens: TVirtualTable
    IndexFieldNames = 'itoitem'
    FieldDefs = <
      item
        Name = 'itoitem'
        DataType = ftInteger
      end
      item
        Name = 'procodigo'
        DataType = ftInteger
      end
      item
        Name = 'puncodigo'
        DataType = ftInteger
      end
      item
        Name = 'pronome'
        DataType = ftString
        Size = 150
      end
      item
        Name = 'itoquantidade'
        DataType = ftFloat
      end
      item
        Name = 'unisimbolo'
        DataType = ftString
        Size = 6
      end
      item
        Name = 'Status'
        DataType = ftInteger
      end
      item
        Name = 'Obs'
        DataType = ftString
        Size = 100
      end
      item
        Name = 'tipo'
        DataType = ftInteger
      end
      item
        Name = 'sfncodigo'
        DataType = ftInteger
      end
      item
        Name = 'itochave'
        DataType = ftInteger
      end
      item
        Name = 'copos'
        DataType = ftInteger
      end
      item
        Name = 'pratos'
        DataType = ftInteger
      end>
    Left = 243
    Top = 200
    Data = {
      04000D00070069746F6974656D0300000000000000090070726F636F6469676F
      0300000000000000090070756E636F6469676F0300000000000000070070726F
      6E6F6D6501009600000000000D0069746F7175616E7469646164650600000000
      0000000A00756E6973696D626F6C6F0100060000000000060053746174757303
      0000000000000003004F6273010064000000000004007469706F030000000000
      0000090073666E636F6469676F0300000000000000080069746F636861766503
      000000000000000500636F706F7303000000000000000600707261746F730300
      000000000000000000000000}
    object vtItensitoitem: TIntegerField
      DisplayLabel = 'It.'
      FieldName = 'itoitem'
    end
    object vtItensprocodigo: TIntegerField
      DisplayLabel = 'C'#243'd.'
      FieldName = 'procodigo'
    end
    object vtItenspronome: TStringField
      DisplayLabel = 'Produto'
      FieldName = 'pronome'
      Size = 150
    end
    object vtItenspuncodigo: TIntegerField
      FieldName = 'puncodigo'
    end
    object vtItensitoquantidade: TFloatField
      DisplayLabel = 'Qtd'
      FieldName = 'itoquantidade'
      DisplayFormat = '#,#00'
      EditFormat = '#,#00'
    end
    object vtItensunisimbolo: TStringField
      DisplayLabel = 'Uni'
      FieldName = 'unisimbolo'
      Size = 6
    end
    object vtItensStatus: TIntegerField
      FieldName = 'Status'
    end
    object vtItensObs: TStringField
      FieldName = 'Obs'
      Size = 100
    end
    object vtItenstipo: TIntegerField
      FieldName = 'tipo'
    end
    object vtItenssfncodigo: TIntegerField
      FieldName = 'sfncodigo'
    end
    object vtItensitochave: TIntegerField
      FieldName = 'itochave'
    end
    object vtItenscopos: TIntegerField
      FieldName = 'copos'
      Required = True
    end
    object vtItenspratos: TIntegerField
      FieldName = 'pratos'
      Required = True
    end
    object vtItenshoraimprimiu: TStringField
      FieldName = 'horaimprimiu'
      Size = 10
    end
  end
  object dIto: TUniDataSource
    DataSet = ito
    Left = 128
    Top = 256
  end
  object dOrc: TUniDataSource
    DataSet = orc
    Left = 128
    Top = 208
  end
  object dMsa: TUniDataSource
    Left = 128
    Top = 152
  end
  object dClb: TUniDataSource
    DataSet = clb
    Left = 128
    Top = 96
  end
  object ito: TUniQuery
    SQLInsert.Strings = (
      'INSERT INTO ito'
      
        '  (itochave, orcchave, procodigo, puncodigo, unicodigo, stocodig' +
        'o, tdecodigo, itoquantidade, itovalorav, itodescontoav, itototal' +
        'av, itosaldoav, itovalorap, itodescontoap, itototalap, itosaldoa' +
        'p, itocontendo, itoitem, itopercdescap, itopercdescav, itoquanti' +
        'condi, itoquantidevolcondi)'
      'VALUES'
      
        '  (:itochave, :orcchave, :procodigo, :puncodigo, :unicodigo, :st' +
        'ocodigo, :tdecodigo, :itoquantidade, :itovalorav, :itodescontoav' +
        ', :itototalav, :itosaldoav, :itovalorap, :itodescontoap, :itotot' +
        'alap, :itosaldoap, :itocontendo, :itoitem, :itopercdescap, :itop' +
        'ercdescav, :itoquanticondi, :itoquantidevolcondi)')
    SQLDelete.Strings = (
      'DELETE FROM ito'
      'WHERE'
      '  itochave = :Old_itochave')
    SQLUpdate.Strings = (
      'UPDATE ito'
      'SET'
      
        '  itochave = :itochave, orcchave = :orcchave, procodigo = :proco' +
        'digo, puncodigo = :puncodigo, unicodigo = :unicodigo, stocodigo ' +
        '= :stocodigo, tdecodigo = :tdecodigo, itoquantidade = :itoquanti' +
        'dade, itovalorav = :itovalorav, itodescontoav = :itodescontoav, ' +
        'itototalav = :itototalav, itosaldoav = :itosaldoav, itovalorap =' +
        ' :itovalorap, itodescontoap = :itodescontoap, itototalap = :itot' +
        'otalap, itosaldoap = :itosaldoap, itocontendo = :itocontendo, it' +
        'oitem = :itoitem, itopercdescap = :itopercdescap, itopercdescav ' +
        '= :itopercdescav, itoquanticondi = :itoquanticondi, itoquantidev' +
        'olcondi = :itoquantidevolcondi'
      'WHERE'
      '  itochave = :Old_itochave')
    SQLLock.Strings = (
      'SELECT * FROM ito'
      'WHERE'
      '  itochave = :Old_itochave'
      'FOR UPDATE')
    SQLRefresh.Strings = (
      
        'SELECT itochave, orcchave, procodigo, puncodigo, unicodigo, stoc' +
        'odigo, tdecodigo, itoquantidade, itovalorav, itodescontoav, itot' +
        'otalav, itosaldoav, itovalorap, itodescontoap, itototalap, itosa' +
        'ldoap, itocontendo, itoitem, itopercdescap, itopercdescav, itoqu' +
        'anticondi, itoquantidevolcondi FROM ito'
      'WHERE'
      '  itochave = :itochave')
    SQLRecCount.Strings = (
      'SELECT COUNT(*) FROM ito')
    Connection = Conexao
    SQL.Strings = (
      'SELECT ito.itochave            -- chave'
      '     , ito.procodigo           -- chave produto'
      
        '     , IF(sfn.sfncodigo IS NULL, pro.pronome, CONCAT(pro.pronome' +
        'reduzido,'#39' '#39',if(UPPER(uni.uninome)='#39'UNIDADE'#39','#39#39',uni.uninome),'#39' (' +
        'Sb: '#39',formatValor(sfn.sfnquantidade,0),'#39')'#39')) pronome'
      '     , ito.itoquantidade       -- quantidade vendida'
      '     , uni.unisimbolo'
      '     , ito.itovalorav          -- pre'#231'o a vista'
      '     , ito.itototalav          -- total liquido a vista'
      '     , ito.itoitem             -- item do orcamento'
      '     , ito.puncodigo           -- pun codigo '
      
        '     , IfNULL(DATE_FORMAT(immhoraimpresso, '#39'%H:%i'#39'),'#39#39')   immhor' +
        'aimpresso        -- hora de impressao '
      '  FROM ito'
      '  '
      ' INNER JOIN pro ON ito.procodigo = pro.procodigo'
      ' '
      ' INNER JOIN uni ON ito.unicodigo = uni.unicodigo'
      ' '
      ' INNER JOIN sto ON ito.stocodigo = sto.stocodigo'
      ' '
      ''
      '  LEFT JOIN sfn '
      '         ON pro.procodigo = sfn.procodigo '
      '        AND uni.unicodigo = sfn.unicodigo'
      ''
      '  left join imm'
      '         on imm.itochave = ito.itochave         '
      'WHERE ito.orcchave = :orcchave'
      '  AND ito.stocodigo in (1,2,5)'
      ' ORDER BY ito.itoitem')
    Left = 48
    Top = 256
    ParamData = <
      item
        DataType = ftUnknown
        Name = 'orcchave'
        Value = nil
      end>
    object itoitochave: TIntegerField
      FieldName = 'itochave'
    end
    object itoitoitem: TIntegerField
      FieldName = 'itoitem'
      Required = True
    end
    object itoprocodigo: TIntegerField
      FieldName = 'procodigo'
      Required = True
    end
    object itopronome: TStringField
      FieldName = 'pronome'
      ReadOnly = True
      Required = True
      Size = 150
    end
    object itoitoquantidade: TFloatField
      FieldName = 'itoquantidade'
      Required = True
    end
    object itounisimbolo: TStringField
      FieldName = 'unisimbolo'
      ReadOnly = True
      Required = True
      Size = 6
    end
    object itoitovalorav: TFloatField
      FieldName = 'itovalorav'
      Required = True
    end
    object itoitototalav: TFloatField
      FieldName = 'itototalav'
      Required = True
    end
    object itopuncodigo: TIntegerField
      FieldName = 'puncodigo'
      Required = True
    end
    object itoimmhoraimpresso: TStringField
      FieldName = 'immhoraimpresso'
      Size = 10
    end
  end
  object orc: TUniQuery
    SQLInsert.Strings = (
      'INSERT INTO orc'
      
        '  (orcchave, etdcodigo, clbcodigo, fopcodigo, tdecodigo, stocodi' +
        'go, moccodigo, trmcodigo, tfpcodigo, puocodigo, orcdataabert, or' +
        'choraabert, orcdataencerr, orcgeralav, orcdescontoav, orcpercdes' +
        'cav, orctotalav, orcgeralap, orcdescontoap, orcpercdescap, orcto' +
        'talap, orchoraencerr)'
      'VALUES'
      
        '  (:orcchave, :etdcodigo, :clbcodigo, :fopcodigo, :tdecodigo, :s' +
        'tocodigo, :moccodigo, :trmcodigo, :tfpcodigo, :puocodigo, :orcda' +
        'taabert, :orchoraabert, :orcdataencerr, :orcgeralav, :orcdescont' +
        'oav, :orcpercdescav, :orctotalav, :orcgeralap, :orcdescontoap, :' +
        'orcpercdescap, :orctotalap, :orchoraencerr)')
    SQLDelete.Strings = (
      'DELETE FROM orc'
      'WHERE'
      '  orcchave = :Old_orcchave')
    SQLUpdate.Strings = (
      'UPDATE orc'
      'SET'
      
        '  orcchave = :orcchave, etdcodigo = :etdcodigo, clbcodigo = :clb' +
        'codigo, fopcodigo = :fopcodigo, tdecodigo = :tdecodigo, stocodig' +
        'o = :stocodigo, moccodigo = :moccodigo, trmcodigo = :trmcodigo, ' +
        'tfpcodigo = :tfpcodigo, puocodigo = :puocodigo, orcdataabert = :' +
        'orcdataabert, orchoraabert = :orchoraabert, orcdataencerr = :orc' +
        'dataencerr, orcgeralav = :orcgeralav, orcdescontoav = :orcdescon' +
        'toav, orcpercdescav = :orcpercdescav, orctotalav = :orctotalav, ' +
        'orcgeralap = :orcgeralap, orcdescontoap = :orcdescontoap, orcper' +
        'cdescap = :orcpercdescap, orctotalap = :orctotalap, orchoraencer' +
        'r = :orchoraencerr'
      'WHERE'
      '  orcchave = :Old_orcchave')
    SQLLock.Strings = (
      'SELECT * FROM orc'
      'WHERE'
      '  orcchave = :Old_orcchave'
      'FOR UPDATE')
    SQLRefresh.Strings = (
      
        'SELECT orcchave, etdcodigo, clbcodigo, fopcodigo, tdecodigo, sto' +
        'codigo, moccodigo, trmcodigo, tfpcodigo, puocodigo, orcdataabert' +
        ', orchoraabert, orcdataencerr, orcgeralav, orcdescontoav, orcper' +
        'cdescav, orctotalav, orcgeralap, orcdescontoap, orcpercdescap, o' +
        'rctotalap, orchoraencerr FROM orc'
      'WHERE'
      '  orcchave = :orcchave')
    SQLRecCount.Strings = (
      'SELECT COUNT(*) FROM orc')
    Connection = Conexao
    SQL.Strings = (
      'SELECT orc.orcchave       -- chave'
      '     , orc.etdcodigo      -- entidade'
      '     , orc.clbcodigo      -- atendente'
      '     , orc.stocodigo      -- 1 Em digita'#231#227'o'
      '     , orc.orcmesa        -- mesa'
      '     , orcpessoas'
      '  FROM orc'
      ' WHERE orc.orcmesa = :orcmesa'
      '   AND orc.orcdataencerr IS NULL'
      '   AND orc.stocodigo in (1,2,5)')
    Left = 48
    Top = 200
    ParamData = <
      item
        DataType = ftInteger
        Name = 'orcmesa'
        Value = 0
      end>
    object orcorcchave: TIntegerField
      FieldName = 'orcchave'
    end
    object orcetdcodigo: TIntegerField
      FieldName = 'etdcodigo'
      Required = True
    end
    object orcclbcodigo: TIntegerField
      FieldName = 'clbcodigo'
    end
    object orcstocodigo: TIntegerField
      FieldName = 'stocodigo'
      Required = True
    end
    object orcorcmesa: TIntegerField
      FieldName = 'orcmesa'
    end
    object orcorcpessoas: TIntegerField
      FieldName = 'orcpessoas'
    end
  end
  object msa: TUniQuery
    SQLInsert.Strings = (
      'INSERT INTO msa'
      
        '  (msachave, msaabertura, msafechamento, clbcodigo, orcchave, ms' +
        'asituacao, msanumero)'
      'VALUES'
      
        '  (:msachave, :msaabertura, :msafechamento, :clbcodigo, :orcchav' +
        'e, :msasituacao, :msanumero)')
    SQLDelete.Strings = (
      'DELETE FROM msa'
      'WHERE'
      '  msachave = :Old_msachave')
    SQLUpdate.Strings = (
      'UPDATE msa'
      'SET'
      
        '  msachave = :msachave, msaabertura = :msaabertura, msafechament' +
        'o = :msafechamento, clbcodigo = :clbcodigo, orcchave = :orcchave' +
        ', msasituacao = :msasituacao, msanumero = :msanumero'
      'WHERE'
      '  msachave = :Old_msachave')
    SQLLock.Strings = (
      'SELECT * FROM msa'
      'WHERE'
      '  msachave = :Old_msachave'
      'FOR UPDATE')
    SQLRefresh.Strings = (
      
        'SELECT msachave, msaabertura, msafechamento, clbcodigo, orcchave' +
        ', msasituacao, msanumero FROM msa'
      'WHERE'
      '  msachave = :msachave')
    SQLRecCount.Strings = (
      'SELECT COUNT(*) FROM msa')
    Connection = Conexao
    SQL.Strings = (
      'SELECT msachave'
      '     , msaabertura'
      '     , msafechamento'
      '     , clbcodigo'
      '     , orcchave'
      '     , msasituacao'
      '     , msanumero'
      '  FROM msa'
      ' WHERE msanumero = :msanumero'
      '   AND msaabertura BETWEEN (CURRENT_DATE()-1) AND CURRENT_DATE()'
      '   AND msasituacao = 0')
    Left = 48
    Top = 152
    ParamData = <
      item
        DataType = ftInteger
        Name = 'msanumero'
        ParamType = ptInput
        Value = nil
      end>
    object msamsachave: TIntegerField
      FieldName = 'msachave'
    end
    object msamsaabertura: TDateTimeField
      FieldName = 'msaabertura'
      Required = True
    end
    object msamsafechamento: TDateTimeField
      FieldName = 'msafechamento'
    end
    object msaclbcodigo: TIntegerField
      FieldName = 'clbcodigo'
      Required = True
    end
    object msaorcchave: TIntegerField
      FieldName = 'orcchave'
      Required = True
    end
    object msamsasituacao: TIntegerField
      FieldName = 'msasituacao'
      Required = True
    end
    object msamsanumero: TIntegerField
      FieldName = 'msanumero'
      Required = True
    end
  end
  object Consulta: TUniQuery
    Connection = Conexao
    Left = 208
    Top = 24
  end
  object MySQLUniProvider: TMySQLUniProvider
    Left = 120
    Top = 32
  end
  object clb: TUniQuery
    Connection = Conexao
    SQL.Strings = (
      'SET @usuario = :usuario;'
      'SET @senha   = :senha;'
      'SET @senha   = (select MD5(UPPER(CONCAT(@senha,'#39'pega'#39'))));'
      ''
      'SELECT clb.clbcodigo '
      '     , clb.clbidentificacao'
      '  FROM clb '
      ' WHERE LOWER(clb.clbidentificacao)=@usuario'
      '   AND clb.clbsenha=SUBSTR(@senha,1,15)'
      '   AND clb.clbativo='#39'1'#39)
    Left = 48
    Top = 96
    ParamData = <
      item
        DataType = ftString
        Name = 'Usuario'
        ParamType = ptInput
        Value = nil
      end
      item
        DataType = ftString
        Name = 'Senha'
        ParamType = ptInput
        Value = nil
      end>
    object clbclbcodigo: TIntegerField
      FieldName = 'clbcodigo'
    end
    object clbclbidentificacao: TStringField
      FieldName = 'clbidentificacao'
      Size = 30
    end
  end
  object Conexao: TUniConnection
    DataTypeMap = <
      item
        DBType = 210
        FieldType = ftInteger
        IgnoreErrors = True
      end
      item
        DBType = 211
        FieldType = ftInteger
        IgnoreErrors = True
      end>
    ProviderName = 'MySQL'
    Database = 'cabanasteste'
    Options.DisconnectedMode = True
    PoolingOptions.Validate = True
    Pooling = True
    Debug = True
    Username = 'root'
    Server = '192.168.5.182'
    LoginPrompt = False
    Left = 40
    Top = 32
    EncryptedPassword = '87FF9BFF9EFFC6FFC8FFCCFF'
  end
  object dsLetras: TUniDataSource
    DataSet = letras
    Left = 200
    Top = 576
  end
  object trm: TUniQuery
    Connection = Conexao
    SQL.Strings = (
      'SELECT'
      '  trmcodigo,'
      '  trmmesavendarapida'
      'FROM trm')
    Left = 168
    Top = 456
    object trmtrmcodigo: TIntegerField
      FieldName = 'trmcodigo'
    end
    object trmtrmmesavendarapida: TIntegerField
      FieldName = 'trmmesavendarapida'
    end
  end
end
