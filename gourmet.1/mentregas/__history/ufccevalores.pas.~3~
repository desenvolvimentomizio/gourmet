unit ufccevalores;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, ufrmbase, System.ImageList, Vcl.ImgList,
  PngImageList, System.Actions, Vcl.ActnList, Data.DB, MemDS, DBAccess, Uni,
  Vcl.Buttons, Vcl.ComCtrls, Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.Mask, Vcl.DBCtrls, ufuncoes;

type
  Tfccevalores = class(Tfrmbase)
    registroccechave: TIntegerField;
    registrocznchave: TIntegerField;
    registrocceabertura: TDateTimeField;
    Label1: TLabel;
    ccechave: TDBEdit;
    Label2: TLabel;
    clbcodigo: TDBEdit;
    registroclbcodigo: TIntegerField;
    clb: TUniQuery;
    clbclbcodigo: TIntegerField;
    clbclbidentificacao: TStringField;
    registroclbidentificacao: TStringField;
    Label3: TLabel;
    ccevalorregistro: TDBEdit;
    tipooperacao: TRadioGroup;
    icc: TUniQuery;
    edHistorico: TEdit;
    Label4: TLabel;
    registroccevalorregistro: TFloatField;
    procedure registroAfterInsert(DataSet: TDataSet);
    procedure bconfirmaClick(Sender: TObject);
    procedure clbcodigoExit(Sender: TObject);
    procedure clbcodigoChange(Sender: TObject);
    procedure FormShow(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    vpFncCodigo: string;
  end;

var
  fccevalores: Tfccevalores;

implementation

{$R *.dfm}

procedure Tfccevalores.bconfirmaClick(Sender: TObject);
begin

  if clbcodigo.Field.AsString <> '' then
  begin

    consulta.Close;
    consulta.SQL.Text := 'SELECT clbcodigo from clb where fnccodigo=' + vpFncCodigo + ' and clbcodigo=' + clbcodigo.Field.AsString;
    consulta.Open;

    if consulta.IsEmpty then
    begin
      Showmessage('Este colaborador não é um ENTREGADOR!, não pode abrir caixa!');
      exit;
    end;

    consulta.Close;
    consulta.SQL.Text := 'SELECT clbcodigo from clb where clbativo=0 and  clbcodigo=' + clbcodigo.Field.AsString;
    consulta.Open;

    if not consulta.IsEmpty then
    begin
      Showmessage('Este colaborador esta INATIVO!, não pode abrir caixa!');
      exit;
    end;

    consulta.Close;
    consulta.SQL.Text := 'SELECT ccechave from cce where ccefechamento IS NULL and cznchave=' + vChaveMestre + ' and  clbcodigo=' +
      clbcodigo.Field.AsString;
    consulta.Open;

    if not consulta.IsEmpty then
    begin
      Showmessage('Este colaborador já esta com seu caixa aberto!');
      exit;
    end
    else
    begin
      icc.Close;
      icc.Open;
      icc.Append;
      icc.FieldByName('ccechave').AsInteger := registroccechave.AsInteger;
      icc.FieldByName('iccvalor').AsCurrency := registroccevalorregistro.AsCurrency;

      if tipooperacao.ItemIndex = 0 then
        icc.FieldByName('cedcodigo').AsInteger := 1
      else
        icc.FieldByName('cedcodigo').AsInteger := 0;

      icc.FieldByName('icchistorico').AsString := edHistorico.Text;
      icc.FieldByName('iccinclusao').AsDateTime := now();
      icc.FieldByName('clbcodigo').AsInteger := acesso.usuario;
      icc.Post;


      inherited;

    end;

  end;
end;

procedure Tfccevalores.clbcodigoChange(Sender: TObject);
begin
  inherited;

  txtFiltro := 'fnccodigo=' + vpFncCodigo + '  and clbativo=' + QuotedStr('1');
end;

procedure Tfccevalores.clbcodigoExit(Sender: TObject);
begin
  inherited;
  if ActiveControl = bcancela then
    exit;

  if clbcodigo.Field.AsString <> '' then
  begin
    validasaida(Sender);
    consulta.Close;
    consulta.SQL.Text := 'SELECT clbcodigo from clb where clbativo=' + QuotedStr('0') + ' and  clbcodigo=' + clbcodigo.Field.AsString;
    consulta.Open;

    if not consulta.IsEmpty then
    begin
      Showmessage('Este colaborador esta INATIVO!, não pode abrir caixa!');
      clbcodigo.SetFocus;
    end
    else
    begin

      inherited;
    end;

  end
  else
  begin
    inherited;
    if findcomponent('spdbclbcodigo') <> nil then
    begin
      (findcomponent('spdbclbcodigo') as TBitBtn).Click;
    end;

  end;

end;

procedure Tfccevalores.FormShow(Sender: TObject);
begin
  inherited;

  consulta.Close;
  consulta.SQL.Text := 'select fnccodigo from fnc where fncidentificacao=' + QuotedStr('ENTREGADOR') + ' order by fnccodigo limit 1';
  consulta.Open;

  vpFncCodigo := '';
  vpFncCodigo := consulta.FieldByName('fnccodigo').AsString;

  if vpFncCodigo = '' then
    vpFncCodigo := '10';

end;

procedure Tfccevalores.registroAfterInsert(DataSet: TDataSet);
begin
  inherited;
  registrocceabertura.AsString := agora(application, ZCone);
  registrocznchave.AsString := vChaveMestre;
end;

end.
