unit GourmetAIQ.Controller.MenuAIQ;

interface

{
  https://purple-box.aiqfome.com/alfredo/menu/culinary

}

uses
  FireDAC.Stan.Intf,
  FireDAC.Stan.Option,
  FireDAC.Stan.Param,
  FireDAC.Stan.Error,
  FireDAC.DatS,
  FireDAC.Phys.Intf,
  FireDAC.DApt.Intf,
  Data.DB,
  FireDAC.Comp.DataSet,
  FireDAC.Comp.Client,
  GourmetAIQ.service.constants,
  GourmetAIQ.service.funcoes,
  GourmetAIQ.service.authenticationAIQ,
  GourmetAIQ.DataModulo.MenuAIQ;

Function CarregaMenuTamanhosAIQ(vCategoriasAIQ: TFDMemTable; vToken: string; vIDLoja: String): TFDMemTable;

Function CarregaMenuCategoriasDetalhadaAIQ(vCategoriasAIQ: TFDMemTable; vToken: string; vIDLoja: String; vIDCategoria: string): TFDMemTable;
Function CarregaMenuCategoriasAIQ(vCategoriasAIQ: TFDMemTable; vToken: string; vIDLoja: String): TFDMemTable;
Function CarregaMenuProdutosAIQ(vProdutosAIQ: TFDMemTable; vSaboresAIQ: TFDMemTable; vIngredientesAIQ: TFDMemTable; vTamanhosAIQ: TFDMemTable;
  vToken: string; vIDLoja: String; vIDCategoria: string): Boolean;

implementation

uses
  REST.Client,
  REST.Types,
  System.JSON,
  DateUtils,
  System.SysUtils, System.Classes;

Function CarregaMenuProdutosAIQ(vProdutosAIQ: TFDMemTable; vSaboresAIQ: TFDMemTable; vIngredientesAIQ: TFDMemTable; vTamanhosAIQ: TFDMemTable;
  vToken: string; vIDLoja: String; vIDCategoria: string): Boolean;
var
  vlDMMenuAIQ: TDMMenuAIQ;
  vlJSONData: TJsonvalue;
  vJSONItens: TJSONArray;
  vJSONPair: TJSONPair;
  vJSONObject: TJSONObject;
  I: Integer;
  a: string;
  vlLInhaDescricao: string;
  vlLinha: string;
  vlNomeIngrediente: string;
begin
  try
    vlDMMenuAIQ := TDMMenuAIQ.Create(nil);
    // ajustado a autenticacao
    vlDMMenuAIQ.OAuth2AuthenticatorAIQ := AjustaAutenticacaoAIQ(vlDMMenuAIQ.OAuth2AuthenticatorAIQ, vToken);

    vlDMMenuAIQ.RESTClientAIQ.BaseURL := urlbase + '/menu/' + vIDLoja + '/categories/' + vIDCategoria + '/items/';

    vlDMMenuAIQ.RESTRequestAIQ.Method := TRESTRequestMethod.rmGET;
    vlDMMenuAIQ.RESTRequestAIQ.Execute;

    if vlDMMenuAIQ.RESTResponseAIQ.StatusCode = 200 then
    begin

      vlJSONData := TJSONObject.ParseJSONValue(vlDMMenuAIQ.RESTResponseAIQ.Content, False);
      vJSONItens := vlJSONData.GetValue<TJSONArray>('data');

      a := vJSONItens.ToString;

      for I := 0 to vJSONItens.Count - 1 do
      begin
        vProdutosAIQ.Append;

        vJSONObject := vJSONItens.Items[I].GetValue<TJSONObject>();

        vJSONPair := vJSONObject.Get('uuid');
        vProdutosAIQ.FieldByName('codigo').AsString := StringReplace(vJSONPair.JsonValue.ToString, '"', '', [rfReplaceAll, rfIgnoreCase]);

        vProdutosAIQ.FieldByName('categoria').AsString := vIDCategoria;

        vJSONPair := vJSONObject.Get('name');
        vProdutosAIQ.FieldByName('nome').AsString := uppercase(StringReplace(vJSONPair.JsonValue.ToString, '"', '', [rfReplaceAll, rfIgnoreCase]));

        vJSONPair := vJSONObject.Get('description');
        vlLInhaDescricao := StringReplace(vJSONPair.JsonValue.ToString, '"', '', [rfReplaceAll, rfIgnoreCase]);

        vlLInhaDescricao := trim(StringReplace(vlLInhaDescricao, ' e ', ', ', [rfReplaceAll, rfIgnoreCase]));
        vlLInhaDescricao := trim(StringReplace(vlLInhaDescricao, '  ', ' ', [rfReplaceAll, rfIgnoreCase]));

        vProdutosAIQ.FieldByName('description').AsString := uppercase(vlLInhaDescricao);
        vProdutosAIQ.Post;
      end;
    end;
    result := True;
  finally
    vlDMMenuAIQ.free;
  end;

end;

Function CarregaMenuCategoriaAIQ(vCategoriasAIQ: TFDMemTable; vToken: string; vIDLoja: String): TFDMemTable;
var
  vlDMMenuAIQ: TDMMenuAIQ;
  vlJSONData: TJsonvalue;
  vJSONItens: TJSONArray;
  vJSONPair: TJSONPair;
  vJSONObject: TJSONObject;
  I: Integer;
  a: string;
  valor: string;
begin

  try
    vlDMMenuAIQ := TDMMenuAIQ.Create(nil);
    // ajustado a autenticacao
    vlDMMenuAIQ.OAuth2AuthenticatorAIQ := AjustaAutenticacaoAIQ(vlDMMenuAIQ.OAuth2AuthenticatorAIQ, vToken);

    vlDMMenuAIQ.RESTClientAIQ.BaseURL := urlbase + '/menu/' + vIDLoja + '/categories/';
    vlDMMenuAIQ.RESTRequestAIQ.Method := TRESTRequestMethod.rmGET;
    vlDMMenuAIQ.RESTRequestAIQ.Execute;

    if vlDMMenuAIQ.RESTResponseAIQ.StatusCode = 200 then
    begin

      vlJSONData := TJSONObject.ParseJSONValue(vlDMMenuAIQ.RESTResponseAIQ.Content, False);
      vJSONItens := vlJSONData.GetValue<TJSONArray>('data');

      a := vJSONItens.ToString;

      for I := 0 to vJSONItens.Count - 1 do
      begin
        vCategoriasAIQ.Append;
        vJSONObject := vJSONItens.Items[I].GetValue<TJSONObject>();

        vJSONPair := vJSONObject.Get('id');
        vCategoriasAIQ.FieldByName('codigo').AsString := vJSONPair.JsonValue.ToString;

        vJSONPair := vJSONObject.Get('name');
        vCategoriasAIQ.FieldByName('nome').AsString := StringReplace(vJSONPair.JsonValue.ToString, '"', '', [rfReplaceAll, rfIgnoreCase]);

        vJSONPair := vJSONObject.Get('description');
        vCategoriasAIQ.FieldByName('descricao').AsString := StringReplace(vJSONPair.JsonValue.ToString, '"', '', [rfReplaceAll, rfIgnoreCase]);

        vJSONPair := vJSONObject.Get('available_at');
        vCategoriasAIQ.FieldByName('tempoproducao').AsString := vJSONPair.JsonValue.ToString;

        vJSONPair := vJSONObject.Get('order');
        valor := StringReplace(vJSONPair.JsonValue.ToString, '"', '', [rfReplaceAll, rfIgnoreCase]);

        vJSONPair := vJSONObject.Get('status');

        vCategoriasAIQ.FieldByName('situacao').AsString := StringReplace(vJSONPair.JsonValue.ToString, '"', '', [rfReplaceAll, rfIgnoreCase]);

        vCategoriasAIQ.Post;
      end;

    end;
    result := vCategoriasAIQ;
  finally
    vlDMMenuAIQ.free;
  end;

end;

Function CarregaMenuTamanhosAIQ(vCategoriasAIQ: TFDMemTable; vToken: string; vIDLoja: String): TFDMemTable;
var
  vlDMMenuAIQ: TDMMenuAIQ;
  vlJSONData: TJsonvalue;
  vJSONItens: TJSONArray;
  vJSONPair: TJSONPair;
  vJSONObject: TJSONObject;
  I: Integer;
  a: string;
  valor: string;
begin

  try
    vlDMMenuAIQ := TDMMenuAIQ.Create(nil);
    // ajustado a autenticacao
    vlDMMenuAIQ.OAuth2AuthenticatorAIQ := AjustaAutenticacaoAIQ(vlDMMenuAIQ.OAuth2AuthenticatorAIQ, vToken);

    vlDMMenuAIQ.RESTClientAIQ.BaseURL := urlbase + '/menu/' + vIDLoja + '/sizes';

    vlDMMenuAIQ.RESTRequestAIQ.Method := TRESTRequestMethod.rmGET;
    vlDMMenuAIQ.RESTRequestAIQ.Execute;

    if vlDMMenuAIQ.RESTResponseAIQ.StatusCode = 200 then
    begin

      vlJSONData := TJSONObject.ParseJSONValue(vlDMMenuAIQ.RESTResponseAIQ.Content, False);
      vJSONItens := vlJSONData.GetValue<TJSONArray>('data');

      a := vJSONItens.ToString;

    end;
    result := vCategoriasAIQ;
  finally
    vlDMMenuAIQ.free;
  end;

end;

Function CarregaMenuCategoriasAIQ(vCategoriasAIQ: TFDMemTable; vToken: string; vIDLoja: String): TFDMemTable;
var
  vlDMMenuAIQ: TDMMenuAIQ;
  vlJSONData: TJsonvalue;
  vJSONItens: TJSONArray;
  vJSONCardapio: TJSONObject;
  vJSONPair: TJSONPair;
  vJSONObject: TJSONObject;
  vlTxtCardapio:TStringList;
  I: Integer;
  a: string;
  valor: string;
begin

  try
    vlDMMenuAIQ := TDMMenuAIQ.Create(nil);
    // ajustado a autenticacao
    vlDMMenuAIQ.OAuth2AuthenticatorAIQ := AjustaAutenticacaoAIQ(vlDMMenuAIQ.OAuth2AuthenticatorAIQ, vToken);

    // vlDMMenuAIQ.RESTClientAIQ.BaseURL := urlbase + '/menu/' + vIDLoja ; ERRO

    // vlDMMenuAIQ.RESTClientAIQ.BaseURL := urlbase + '/menu/' + vIDLoja + '/categories'; OK

    // vlDMMenuAIQ.RESTClientAIQ.BaseURL := urlbase + '/menu/'+  vIDLoja+'/categories/83475/items'; OK

    // vlDMMenuAIQ.RESTClientAIQ.BaseURL := urlbase + '/menu/'+  vIDLoja+'/items/'+'9f0c35d3-5f20-46ee-b61a-bf8a32190a00'; ERROR
    vlDMMenuAIQ.RESTClientAIQ.BaseURL := urlbase + '/menu/' + vIDLoja;

    vlDMMenuAIQ.RESTRequestAIQ.Method := TRESTRequestMethod.rmGET;
    vlDMMenuAIQ.RESTRequestAIQ.Execute;

    if vlDMMenuAIQ.RESTResponseAIQ.StatusCode = 200 then
    begin

      vlJSONData := TJSONObject.ParseJSONValue(vlDMMenuAIQ.RESTResponseAIQ.Content, False);

      a:=vlDMMenuAIQ.RESTResponseAIQ.Content;

      if vlJSONData <> nil then
      begin
        a := vlJSONData.ToString;
        vlTxtCardapio:=TStringList.Create;

         vlTxtCardapio.text:=vlJSONData.ToString;
         vlTxtCardapio.SaveToFile('c:\gourmet\cardapio.json');

        vJSONCardapio := vlJSONData.GetValue<TJSONObject>('data');
        a := vJSONCardapio.ToString;
        vJSONItens := vJSONCardapio.GetValue<TJSONArray>('categories');


        a := vJSONItens.ToString;

        for I := 0 to vJSONItens.Count - 1 do
        begin
          vCategoriasAIQ.Append;
          vJSONObject := vJSONItens.Items[I].GetValue<TJSONObject>();
          a:=vJSONObject.ToString;

          vJSONPair := vJSONObject.Get('id');

          a:= vJSONPair.ToString;

          vCategoriasAIQ.FieldByName('codigo').AsString := vJSONPair.JsonValue.ToString;

          vJSONPair := vJSONObject.Get('name');
          vCategoriasAIQ.FieldByName('nome').AsString := StringReplace(vJSONPair.JsonValue.ToString, '"', '', [rfReplaceAll, rfIgnoreCase]);
          vCategoriasAIQ.FieldByName('nome').AsString :=
            uppercase(StringReplace(vCategoriasAIQ.FieldByName('nome').AsString, '?', '', [rfReplaceAll, rfIgnoreCase]));

        // vJSONPair := vJSONObject.Get('description');
        //  vCategoriasAIQ.FieldByName('descricao').AsString := StringReplace(vJSONPair.JsonValue.ToString, '"', '', [rfReplaceAll, rfIgnoreCase]);

        vCategoriasAIQ.FieldByName('descricao').AsString :=uppercase(StringReplace(vCategoriasAIQ.FieldByName('nome').AsString, '?', '', [rfReplaceAll, rfIgnoreCase]));

        //  vJSONPair := vJSONObject.Get('available_at');
        //  vCategoriasAIQ.FieldByName('tempoproducao').AsString := vJSONPair.JsonValue.ToString;

          vJSONPair := vJSONObject.Get('status');
          vCategoriasAIQ.FieldByName('situacao').AsString := StringReplace(vJSONPair.JsonValue.ToString, '"', '', [rfReplaceAll, rfIgnoreCase]);

          vCategoriasAIQ.Post;
        end;

      end;
    end;
    result := vCategoriasAIQ;
  finally
    vlDMMenuAIQ.free;
  end;

end;

Function CarregaMenuCategoriasDetalhadaAIQ(vCategoriasAIQ: TFDMemTable; vToken: string; vIDLoja: String; vIDCategoria: string): TFDMemTable;
var
  vlDMMenuAIQ: TDMMenuAIQ;
  vlJSONData: TJsonvalue;
  vJSONItens: TJSONArray;
  vJSONPair: TJSONPair;
  vJSONObject: TJSONObject;
  I: Integer;
  a: string;
  valor: string;
begin

  try
    vlDMMenuAIQ := TDMMenuAIQ.Create(nil);
    // ajustado a autenticacao
    vlDMMenuAIQ.OAuth2AuthenticatorAIQ := AjustaAutenticacaoAIQ(vlDMMenuAIQ.OAuth2AuthenticatorAIQ, vToken);

    vlDMMenuAIQ.RESTClientAIQ.BaseURL := urlbase + '/menu/' + vIDLoja + '/categories/' + vIDCategoria + '/items';
    vlDMMenuAIQ.RESTRequestAIQ.Method := TRESTRequestMethod.rmGET;
    vlDMMenuAIQ.RESTRequestAIQ.Execute;

    // PATH_ITENS = '/menu/_store/categories/_catergory/items';

    if vlDMMenuAIQ.RESTResponseAIQ.StatusCode = 200 then
    begin

      vlJSONData := TJSONObject.ParseJSONValue(vlDMMenuAIQ.RESTResponseAIQ.Content, False);
      vJSONItens := vlJSONData.GetValue<TJSONArray>('data');

      a := vJSONItens.ToString;

      {
        for I := 0 to vJSONItens.Count - 1 do
        begin
        vCategoriasAIQ.Append;
        vJSONObject := vJSONItens.Items[I].GetValue<TJSONObject>();

        vJSONPair := vJSONObject.Get('id');
        vCategoriasAIQ.FieldByName('codigo').AsString := vJSONPair.JsonValue.ToString;

        vJSONPair := vJSONObject.Get('name');
        vCategoriasAIQ.FieldByName('nome').AsString := StringReplace(vJSONPair.JsonValue.ToString, '"', '', [rfReplaceAll, rfIgnoreCase]);

        vJSONPair := vJSONObject.Get('description');
        vCategoriasAIQ.FieldByName('descricao').AsString := StringReplace(vJSONPair.JsonValue.ToString, '"', '', [rfReplaceAll, rfIgnoreCase]);

        vJSONPair := vJSONObject.Get('available_at');
        vCategoriasAIQ.FieldByName('tempoproducao').AsString := vJSONPair.JsonValue.ToString;

        vJSONPair := vJSONObject.Get('order');
        a:=StringReplace(vJSONPair.JsonValue.ToString, '"', '', [rfReplaceAll, rfIgnoreCase]);

        vJSONPair := vJSONObject.Get('status');
        vCategoriasAIQ.FieldByName('situacao').AsString := StringReplace(vJSONPair.JsonValue.ToString, '"', '', [rfReplaceAll, rfIgnoreCase]);

        vCategoriasAIQ.Post;
        end; }

    end;
    result := vCategoriasAIQ;
  finally
    vlDMMenuAIQ.free;
  end;

end;

end.
