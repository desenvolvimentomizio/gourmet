unit GourmetAIQ.Controller.PedidoAIQ;

interface

uses
  FireDAC.Stan.Intf,
  FireDAC.Stan.Option,
  FireDAC.Stan.Param,
  FireDAC.Stan.Error,
  FireDAC.DatS,
  FireDAC.Phys.Intf,
  FireDAC.DApt.Intf,
  Data.DB,
  FireDAC.Comp.DataSet,
  FireDAC.Comp.Client,
  GourmetAIQ.service.constants,
  GourmetAIQ.service.funcoes,
  GourmetAIQ.service.authenticationAIQ,
  GourmetAIQ.DataModulo.PedidoAIQ,
  GourmetAIQ.Model.Entity.PedidoAIQGourmet;

Function CarregaPedidosAIQ(vPedidosAIQ: TFDMemTable; vToken: string; vAgente: string): TFDMemTable;
Function CarregaPedidoAIQ(vPedidoAIQ: TFDMemTable; vToken: string; vPedido: String): TFDMemTable;
Function MarcaPedidoProntoAIQ(vToken: string; vPedido: String; vAgente: string): Boolean;
Function MarcaPedidoLidoAIQ(vToken: string; vPedido: String; vAgente: string): Boolean;

implementation

uses
  REST.Client,
  REST.Types,
  System.JSON,
  DateUtils,
  System.SysUtils, uFormGourmetAIQ;

Function MarcaPedidoProntoAIQ(vToken: string; vPedido: String; vAgente: string): Boolean;
var
  vlDMPedidoAIQ: TDMPedidoAIQ;
  vlJSONData: TJsonvalue;
  vJSONItens: TJSONArray;
  vJSONPair: TJSONPair;
  vJSONObject: TJSONObject;
  I: Integer;
  a: string;
begin
  try

    vlDMPedidoAIQ := TDMPedidoAIQ.Create(nil);

    // ajustado a autenticacao
    vlDMPedidoAIQ.OAuth2AuthenticatorAIQ := AjustaAutenticacaoAIQ(vlDMPedidoAIQ.OAuth2AuthenticatorAIQ, vToken);

    vlDMPedidoAIQ.RESTClientAIQ.BaseURL := urlbase + PATH_PEDIDO_PRONTO;
    vlDMPedidoAIQ.RESTRequestAIQ.Method := TRESTRequestMethod.rmPOST;
    vlDMPedidoAIQ.RESTRequestAIQ.Params.Clear;

    vlDMPedidoAIQ.RESTRequestAIQ.Params.AddHeader('Aiq-User-Agent', 'pegasus (' + vAgente + ')');

    vlDMPedidoAIQ.RESTRequestAIQ.Body.Add('{"order_id": ' + vPedido + ' }', TRESTContentType.ctAPPLICATION_JSON);
    try
      vlDMPedidoAIQ.RESTRequestAIQ.Execute;
    except
      sleep(2000);
      vlDMPedidoAIQ.RESTRequestAIQ.Execute;

    end;

    if vlDMPedidoAIQ.RESTResponseAIQ.StatusCode = 200 then
      result := True
    else
      result := false;

  finally
    vlDMPedidoAIQ.free;
  end;

end;

Function MarcaPedidoLidoAIQ(vToken: string; vPedido: String; vAgente: string): Boolean;
var
  vlDMPedidoAIQ: TDMPedidoAIQ;
  vLPedido: TPedidoAIQ;
begin
  try

    vLPedido := TPedidoAIQ.Create;
    vLPedido.aiqpedido := vPedido;

    vlDMPedidoAIQ := TDMPedidoAIQ.Create(nil);

    // ajustado a autenticacao
    vlDMPedidoAIQ.OAuth2AuthenticatorAIQ := AjustaAutenticacaoAIQ(vlDMPedidoAIQ.OAuth2AuthenticatorAIQ, vToken);

    vlDMPedidoAIQ.RESTClientAIQ.BaseURL := urlbase + PATH_PEDIDO_LIDO;
    vlDMPedidoAIQ.RESTRequestAIQ.Method := TRESTRequestMethod.rmPOST;

    vlDMPedidoAIQ.RESTRequestAIQ.Params.Clear;
    vlDMPedidoAIQ.RESTRequestAIQ.Params.AddHeader('Aiq-User-Agent', 'pegasus (' + vAgente + ')');
    vlDMPedidoAIQ.RESTRequestAIQ.Body.Add('{"order_id" : ' + vPedido + '}', TRESTContentType.ctAPPLICATION_JSON);

    FormGourmetAIQ.logs.lines.add(vPedido);


    try
      vlDMPedidoAIQ.RESTRequestAIQ.Execute;
    except
      sleep(2000);
      vlDMPedidoAIQ.RESTRequestAIQ.Execute;

    end;

    FormGourmetAIQ.logs.lines.add('status :'+vlDMPedidoAIQ.RESTResponseAIQ.StatusCode.ToString );


    if vlDMPedidoAIQ.RESTResponseAIQ.StatusCode = 200 then
      result := True
    else
      result := false;

  finally
    vlDMPedidoAIQ.free;
  end;

end;

Function CarregaPedidoAIQ(vPedidoAIQ: TFDMemTable; vToken: string; vPedido: String): TFDMemTable;
var
  vlDMPedidoAIQ: TDMPedidoAIQ;
  vlJSONData: TJsonvalue;
  vJSONItem: TJSONObject;
  vJSONPair: TJSONPair;
  vJSONObject: TJSONObject;
  I: Integer;
  a: string;
begin
  // rate limit: 20 requests/min
  try
    vlDMPedidoAIQ := TDMPedidoAIQ.Create(nil);
    // ajustado a autenticacao
    vlDMPedidoAIQ.OAuth2AuthenticatorAIQ := AjustaAutenticacaoAIQ(vlDMPedidoAIQ.OAuth2AuthenticatorAIQ, vToken);

    vlDMPedidoAIQ.RESTClientAIQ.BaseURL := urlbase + PATH_PEDIDOS + '/' + vPedido;
   // vlDMPedidoAIQ.RESTRequestAIQ.Body.Add('{"order_id": ' + vPedido + ' }', TRESTContentType.ctAPPLICATION_JSON);

    vlDMPedidoAIQ.RESTRequestAIQ.Method := TRESTRequestMethod.rmGET;
    try
      vlDMPedidoAIQ.RESTRequestAIQ.Execute;
    except
      sleep(2000);
      vlDMPedidoAIQ.RESTRequestAIQ.Execute;
    end;

    if vlDMPedidoAIQ.RESTResponseAIQ.StatusCode = 200 then
    begin

      vlJSONData := TJSONObject.ParseJSONValue(vlDMPedidoAIQ.RESTResponseAIQ.Content, false);
      vJSONItem := vlJSONData.GetValue<TJSONObject>('data');

      a := vJSONItem.ToString;

      vPedidoAIQ.edit;
      vPedidoAIQ.FieldByName('texto').AsString := vJSONItem.ToString;
      vPedidoAIQ.post;

    end;
    result := vPedidoAIQ;
  finally
    vlDMPedidoAIQ.free;
  end;

end;

Function CarregaPedidosAIQ(vPedidosAIQ: TFDMemTable; vToken: string; vAgente: string): TFDMemTable;
var
  vlDMPedidoAIQ: TDMPedidoAIQ;
  vlJSONData: TJsonvalue;
  vJSONItens: TJSONArray;
  vJSONPair: TJSONPair;
  vJSONObject: TJSONObject;
  vJSONObjectPagamento: TJSONObject;
  I: Integer;
  a: string;
  vlNumeroPedido: string;
begin
  // rate limit: 20 requests/min
  try
    vlDMPedidoAIQ := TDMPedidoAIQ.Create(nil);
    // ajustado a autenticacao
    vlDMPedidoAIQ.OAuth2AuthenticatorAIQ := AjustaAutenticacaoAIQ(vlDMPedidoAIQ.OAuth2AuthenticatorAIQ, vToken);

    vlDMPedidoAIQ.RESTRequestAIQ.Params.AddHeader('Aiq-User-Agent', 'pegasus (' + vAgente + ')');

    vlDMPedidoAIQ.RESTClientAIQ.BaseURL := urlbase + PATH_PEDIDOS;
    vlDMPedidoAIQ.RESTRequestAIQ.Method := TRESTRequestMethod.rmGET;
    try
      vlDMPedidoAIQ.RESTRequestAIQ.Execute;

    except
      sleep(2000);
      vlDMPedidoAIQ.RESTRequestAIQ.Execute;
    end;

    if vlDMPedidoAIQ.RESTResponseAIQ.StatusCode = 200 then
    begin

      vlJSONData := TJSONObject.ParseJSONValue(vlDMPedidoAIQ.RESTResponseAIQ.Content, false);
      vJSONItens := vlJSONData.GetValue<TJSONArray>('data');

      a := vJSONItens.ToString;

      for I := 0 to vJSONItens.Count - 1 do
      begin

        vJSONObject := vJSONItens.Items[I].GetValue<TJSONObject>();
        vJSONPair := vJSONObject.Get('order_id');
        vlNumeroPedido := StringReplace(vJSONPair.JsonValue.ToString, '"', '', [rfReplaceAll, rfIgnoreCase]);

        if not vPedidosAIQ.Locate('pedido', vlNumeroPedido, []) then
        begin

          vPedidosAIQ.Append;

          // vJSONObject := vJSONItens.Items[I].GetValue<TJSONObject>();

          vJSONPair := vJSONObject.Get('order_id');
          vPedidosAIQ.FieldByName('pedido').AsString := vlNumeroPedido;

          vJSONPair := vJSONObject.Get('created_at');
          vPedidosAIQ.FieldByName('registro').AsString := StringReplace(vJSONPair.JsonValue.ToString, '"', '', [rfReplaceAll, rfIgnoreCase]);

          vJSONPair := vJSONObject.Get('is_ready');
          vPedidosAIQ.FieldByName('pronto').AsInteger := truefalsetonumero(vJSONPair.JsonValue.ToString);

          vJSONPair := vJSONObject.Get('is_read');
          vPedidosAIQ.FieldByName('lido').AsInteger := truefalsetonumero(vJSONPair.JsonValue.ToString);

          vJSONPair := vJSONObject.Get('is_cancelled');
          vPedidosAIQ.FieldByName('cancelado').AsInteger := truefalsetonumero(vJSONPair.JsonValue.ToString);

          vJSONPair := vJSONObject.Get('is_aiqentrega_delivery');
          vPedidosAIQ.FieldByName('entregaaiq').AsInteger := truefalsetonumero(vJSONPair.JsonValue.ToString);

          vJSONPair := vJSONObject.Get('order_is_pickup');
          vPedidosAIQ.FieldByName('retira').AsInteger := truefalsetonumero(vJSONPair.JsonValue.ToString);

          vJSONPair := vJSONObject.Get('user_name');
          vPedidosAIQ.FieldByName('nome').AsString := StringReplace(vJSONPair.JsonValue.ToString, '"', '', [rfReplaceAll, rfIgnoreCase]);

          vJSONPair := vJSONObject.Get('order_delivery_time');
          vPedidosAIQ.FieldByName('tempoentrega').AsString := StringReplace(vJSONPair.JsonValue.ToString, '"', '', [rfReplaceAll, rfIgnoreCase]);

          { vJSONObjectPagamento := vJSONObject.GetValue<TJSONObject>('payment_method');

            if vJSONObjectPagamento <> nil then
            begin

            a := vJSONObjectPagamento.ToString;

            vJSONPair := vJSONObjectPagamento.Get('subtotal');
            vPedidosAIQ.FieldByName('valor').AsString := StringReplace(vJSONPair.JsonValue.ToString, '"', '', [rfReplaceAll, rfIgnoreCase]);

            vJSONPair := vJSONObjectPagamento.Get('delivery_tax');
            vPedidosAIQ.FieldByName('entrega').AsString := StringReplace(vJSONPair.JsonValue.ToString, '"', '', [rfReplaceAll, rfIgnoreCase]);

            end;
          }
          vPedidosAIQ.post;

        end;
      end;

    end;
    result := vPedidosAIQ;
  finally
    vlDMPedidoAIQ.free;
  end;

end;

end.
