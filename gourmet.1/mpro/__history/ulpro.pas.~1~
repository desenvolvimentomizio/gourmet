unit ulpro;

interface

uses
  Winapi.Windows, Vcl.Forms, ulfrmbase, ufrabase, ufrapro, Vcl.StdCtrls,
  Vcl.Buttons, System.Classes, Vcl.Controls, Vcl.ExtCtrls, uFuncoes, uPegaBase;

type
  Tlpro = class(Tlfrmbase)
    frapro: Tfrapro;
    procedure fraproActIncluirExecute(Sender: TObject);
    procedure fraproActPrecoDeVendaExecute(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure bconfirmaClick(Sender: TObject);
    procedure bcancelaClick(Sender: TObject);
    procedure FormCloseQuery(Sender: TObject; var CanClose: Boolean);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
  private
  public
    { Public declarations }
    vpPodeFechar: Boolean;
  end;

var
  lpro: Tlpro;

implementation

{$R *.dfm}

function formu(pCargaFrame: TCargaFrame): string;
begin
  (*
    ** Verifica se tela já está carregada pela aplicação e bloqueia a abertura **
    *** Corrige problemas do Atendimento onde usuário pode pressionar rapidamente tecla de atalho repetidas vezes ***
  *)
  if not(pCargaFrame.AOwner.FindComponent('lpro') = nil) then
    Exit;

  pCargaFrame.Titulo := vPlTitMdl;
  lpro := Tlpro.Create(pCargaFrame);
  try

    lpro.ShowModal;
    Result := lpro.frapro.vretorno;
  finally
    lpro.Free;
  end;
end;

exports formu;

procedure Tlpro.bcancelaClick(Sender: TObject);
begin
  self.frapro.PodeFechar := true;
  vpPodeFechar := true;
  inherited;

end;

procedure Tlpro.bconfirmaClick(Sender: TObject);
begin
  self.frapro.PodeFechar := true;
  vpPodeFechar := true;
  inherited;

end;

procedure Tlpro.FormCloseQuery(Sender: TObject; var CanClose: Boolean);
begin

  CanClose := vpPodeFechar;
  // inherited;

end;

procedure Tlpro.FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
begin

  if Key = 13 then
  begin
    vpPodeFechar := true;
  end
  else
  begin
    vpPodeFechar := False;
  end;
  // inherited;

end;

procedure Tlpro.FormShow(Sender: TObject);
begin
  inherited;
  vpPodeFechar := False;
  self.frapro.PodeFechar := False;

  // if self.frapro.FindComponent('edbusca') <> nil then
  // self.frapro.edbusca.SetFocus;

end;

procedure Tlpro.fraproActIncluirExecute(Sender: TObject);
begin
  inherited;
  frapro.ActIncluirExecute(Sender);

  if psituacao.Caption = 'Pesquisando' then
    self.frapro.dbglista.SetFocus;

end;

procedure Tlpro.fraproActPrecoDeVendaExecute(Sender: TObject);
begin
  inherited;
  frapro.ActPrecoDeVendaExecute(Sender);

end;

end.
