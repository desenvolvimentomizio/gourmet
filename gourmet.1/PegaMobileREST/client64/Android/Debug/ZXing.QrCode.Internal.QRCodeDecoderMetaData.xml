<?xml version="1.0" encoding="utf-8"?>
<namespace name="ZXing.QrCode.Internal.QRCodeDecoderMetaData" platform="Android">
  <class name="TQRCodeDecoderMetaData" sealed="true" file="ZXing.QrCode.Internal.QRCodeDecoderMetaData.pas" line="32">
    <devnotes>
       <summary>
       Meta-data container for QR Code decoding. Instances of this class may be used to convey information back to the
       decoding caller. Callers are expected to process this.
       </summary>
    </devnotes>
    <ancestor name="TObject" namespace="System">
      <methodref name="Create" visibility="public" procflags="constructor">
      </methodref>
      <methodref name="Free" visibility="public">
      </methodref>
      <methodref name="DisposeOf" visibility="public" procflags="inline">
      </methodref>
      <methodref name="InitInstance" visibility="public" procflags="class">
      </methodref>
      <methodref name="CleanupInstance" visibility="public">
      </methodref>
      <methodref name="ClassType" visibility="public" procflags="inline">
      </methodref>
      <methodref name="ClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassNameIs" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassParent" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassInfo" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InstanceSize" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InheritsFrom" visibility="public" procflags="class">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodName" visibility="public" procflags="class">
      </methodref>
      <methodref name="QualifiedClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="GetInterface" visibility="public">
      </methodref>
      <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
      </methodref>
      <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="UnitName" visibility="public" procflags="class">
      </methodref>
      <methodref name="UnitScope" visibility="public" procflags="class">
      </methodref>
      <methodref name="Equals" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="GetHashCode" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="ToString" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="SafeCallException" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="AfterConstruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Dispatch" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="DefaultHandler" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="NewInstance" visibility="public" procflags="class virtual">
      </methodref>
      <methodref name="FreeInstance" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor virtual">
      </methodref>
      <methodref name="CPP_ABI_1" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="CPP_ABI_2" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="CPP_ABI_3" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="GetDisposed" visibility="protected" procflags="inline">
      </methodref>
      <methodref name="CheckDisposed" visibility="protected" procflags="inline">
      </methodref>
      <propertyref name="Disposed" visibility="protected">
      </propertyref>
    </ancestor>
    <members>
      <field name="Fmirrored" type="Boolean" visibility="private" size="1" offset="4" file="ZXing.QrCode.Internal.QRCodeDecoderMetaData.pas" line="34" />
      <constructor name="Create" visibility="public" file="ZXing.QrCode.Internal.QRCodeDecoderMetaData.pas" line="40">
        <devnotes>
           <summary>
           Initializes a new instance of the <see cref="T:ZXing.QrCode.Internal.QRCodeDecoderMetaData.TQRCodeDecoderMetaData"/> class.
           </summary>
           <param name="mirrored">if set to <c>true</c> [mirrored].</param>
        </devnotes>
        <parameters>
          <parameter name="mirrored" type="Boolean" paramflags="const" />
        </parameters>
      </constructor>
      <procedure name="applyMirroredCorrection" visibility="public" file="ZXing.QrCode.Internal.QRCodeDecoderMetaData.pas" line="46">
        <devnotes>
           <summary>
           Apply the result points' order correction due to mirroring.
           </summary>
           <param name="points">Array of points to apply mirror correction to.</param>
        </devnotes>
        <parameters>
          <parameter name="points" type="TArray&lt;ZXing.ResultPoint.IResultPoint&gt;" paramflags="const" />
        </parameters>
      </procedure>
      <property name="IsMirrored" visibility="public" read="Fmirrored" type="Boolean" file="ZXing.QrCode.Internal.QRCodeDecoderMetaData.pas" line="51">
        <devnotes>
           <summary>
           true if the QR Code was mirrored.
           </summary>
        </devnotes>
      </property>
    </members>
  </class>
</namespace>
