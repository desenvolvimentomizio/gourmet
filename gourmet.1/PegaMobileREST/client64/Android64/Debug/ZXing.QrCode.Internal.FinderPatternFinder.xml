<?xml version="1.0" encoding="utf-8"?>
<namespace name="ZXing.QrCode.Internal.FinderPatternFinder" platform="Android">
  <class name="TFinderPatternFinder" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="42">
    <devnotes>
       <summary>
       <p>This class attempts to find finder patterns in a QR Code. Finder patterns are the square
       markers at three corners of a QR Code.</p>
      
       <p>This class is thread-safe but not reentrant. Each thread must allocate its own object.
       </summary>
    </devnotes>
    <ancestor name="TObject" namespace="System">
      <methodref name="Create" visibility="public" procflags="constructor">
      </methodref>
      <methodref name="Free" visibility="public">
      </methodref>
      <methodref name="DisposeOf" visibility="public" procflags="inline">
      </methodref>
      <methodref name="InitInstance" visibility="public" procflags="class">
      </methodref>
      <methodref name="CleanupInstance" visibility="public">
      </methodref>
      <methodref name="ClassType" visibility="public" procflags="inline">
      </methodref>
      <methodref name="ClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassNameIs" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassParent" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassInfo" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InstanceSize" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InheritsFrom" visibility="public" procflags="class">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodName" visibility="public" procflags="class">
      </methodref>
      <methodref name="QualifiedClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="GetInterface" visibility="public">
      </methodref>
      <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
      </methodref>
      <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="UnitName" visibility="public" procflags="class">
      </methodref>
      <methodref name="UnitScope" visibility="public" procflags="class">
      </methodref>
      <methodref name="Equals" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="GetHashCode" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="ToString" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="SafeCallException" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="AfterConstruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Dispatch" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="DefaultHandler" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="NewInstance" visibility="public" procflags="class virtual">
      </methodref>
      <methodref name="FreeInstance" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor virtual">
      </methodref>
      <methodref name="CPP_ABI_1" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="CPP_ABI_2" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="CPP_ABI_3" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="GetDisposed" visibility="protected" procflags="inline">
      </methodref>
      <methodref name="CheckDisposed" visibility="protected" procflags="inline">
      </methodref>
      <propertyref name="Disposed" visibility="protected">
      </propertyref>
    </ancestor>
    <members>
      <field name="CENTER_QUORUM" type="Integer" visibility="private" varflags="class" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="45" />
      <field name="INTEGER_MATH_SHIFT" type="Integer" visibility="private" varflags="class" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="46" />
      <field name="FImage" type="TBitMatrix" visibility="private" size="8" offset="8" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="48" />
      <field name="FPossibleCenters" type="TList&lt;ZXing.QrCode.Internal.FinderPattern.IFinderPattern&gt;" visibility="private" size="8" offset="16" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="49" />
      <field name="FhasSkipped" type="Boolean" visibility="private" size="1" offset="24" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="50" />
      <field name="FCrossCheckStateCount" type="TArray&lt;System.Integer&gt;" visibility="private" size="8" offset="32" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="51" />
      <field name="FresultPointCallback" type="TResultPointCallback" visibility="private" size="16" offset="40" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="52" />
      <function name="centerFromEnd" visibility="private" procflags="static" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="54">
        <parameters>
          <parameter name="stateCount" type="TArray&lt;System.Integer&gt;" />
          <parameter name="pEnd" type="Integer" />
          <retval type="Single" />
        </parameters>
      </function>
      <function name="crossCheckDiagonal" visibility="private" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="56">
        <parameters>
          <parameter name="startI" type="Integer" />
          <parameter name="centerJ" type="Integer" />
          <parameter name="maxCount" type="Integer" />
          <parameter name="originalStateCountTotal" type="Integer" />
          <retval type="Boolean" />
        </parameters>
      </function>
      <function name="crossCheckHorizontal" visibility="private" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="57">
        <parameters>
          <parameter name="startJ" type="Integer" />
          <parameter name="centerI" type="Integer" />
          <parameter name="maxCount" type="Integer" />
          <parameter name="originalStateCountTotal" type="Integer" />
          <retval type="Single" />
        </parameters>
      </function>
      <function name="crossCheckVertical" visibility="private" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="58">
        <parameters>
          <parameter name="startI" type="Integer" />
          <parameter name="centerJ" type="Integer" />
          <parameter name="maxCount" type="Integer" />
          <parameter name="originalStateCountTotal" type="Integer" />
          <retval type="Single" />
        </parameters>
      </function>
      <function name="findRowSkip" visibility="private" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="59">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="haveMultiplyConfirmedCenters" visibility="private" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="60">
        <parameters>
          <retval type="Boolean" />
        </parameters>
      </function>
      <function name="selectBestPatterns" visibility="private" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="61">
        <parameters>
          <retval type="TArray&lt;ZXing.QrCode.Internal.FinderPattern.IFinderPattern&gt;" />
        </parameters>
      </function>
      <function name="CrossCheckStateCount" visibility="private" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="63">
        <parameters>
          <retval type="TArray&lt;System.Integer&gt;" />
        </parameters>
      </function>
      <field name="MIN_SKIP" type="Integer" visibility="protected" varflags="class" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="69">
        <devnotes>
           <summary>
           1 pixel/module times 3 modules/center
           </summary>
        </devnotes>
      </field>
      <field name="MAX_MODULES" type="Integer" visibility="protected" varflags="class" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="73">
        <devnotes>
           <summary>
           support up to version 10 for mobile clients
           </summary>
        </devnotes>
      </field>
      <function name="foundPatternCross" visibility="protected" procflags="static" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="74">
        <devnotes>
           <param name="stateCount">count of black/white/black/white/black pixels just read
           </param>
           <returns> true iff the proportions of the counts is close enough to the 1/1/3/1/1 ratios
           used by finder patterns to be considered a match
           </returns>
        </devnotes>
        <parameters>
          <parameter name="stateCount" type="TArray&lt;System.Integer&gt;" paramflags="const" />
          <retval type="Boolean" />
        </parameters>
      </function>
      <function name="handlePossibleCenter" visibility="protected" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="75">
        <parameters>
          <parameter name="stateCount" type="TArray&lt;System.Integer&gt;" />
          <parameter name="i" type="Integer" />
          <parameter name="j" type="Integer" />
          <retval type="Boolean" />
        </parameters>
      </function>
      <property name="image" visibility="protected" read="FImage" type="TBitMatrix" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="77" />
      <constructor name="Create" visibility="public" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="83">
        <devnotes>
           <summary>
           <p>Creates a finder that will search the image for three finder patterns.</p>
           </summary>
           <param name="image">image to search</param>
        </devnotes>
        <parameters>
          <parameter name="image" type="TBitMatrix" paramflags="const" />
        </parameters>
      </constructor>
      <constructor name="Create" visibility="public" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="90">
        <devnotes>
<!-- Badly formed XML comment ignored for member 'Create' -->
        </devnotes>
        <parameters>
          <parameter name="image" type="TBitMatrix" paramflags="const" />
          <parameter name="resultPointCallback" type="TResultPointCallback" />
        </parameters>
      </constructor>
      <destructor name="Destroy" visibility="public" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="93">
        <parameters>
        </parameters>
      </destructor>
      <function name="find" visibility="public" procflags="virtual" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="95">
        <parameters>
          <parameter name="hints" type="TDictionary&lt;ZXing.DecodeHintType.TDecodeHintType,System.TObject&gt;" paramflags="const" />
          <retval type="TFinderPatternInfo">
            <devnotes>
               <summary>
               <p>Encapsulates information about finder patterns in an image, including the location of
               the three finder patterns, and their estimated module size.</p>
               </summary>
            </devnotes>
          </retval>
        </parameters>
      </function>
    </members>
  </class>
  <class name="TFurthestFromAverageComparator" sealed="true" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="98">
    <ancestor name="TInterfacedObject" namespace="System">
      <interfaces>
        <implements name="IInterface" />
      </interfaces>
      <methodref name="GetRefCount" visibility="private" procflags="inline">
      </methodref>
      <methodref name="__MarkDestroying" visibility="protected" procflags="static inline">
      </methodref>
      <methodref name="QueryInterface" visibility="protected">
      </methodref>
      <methodref name="_AddRef" visibility="protected">
      </methodref>
      <methodref name="_Release" visibility="protected">
      </methodref>
      <methodref name="AfterConstruction" visibility="public" procflags="override">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public" procflags="override">
      </methodref>
      <methodref name="NewInstance" visibility="public" procflags="class override">
      </methodref>
      <propertyref name="RefCount" visibility="public">
      </propertyref>
      <ancestor name="TObject" namespace="System">
        <methodref name="Create" visibility="public" procflags="constructor">
        </methodref>
        <methodref name="Free" visibility="public">
        </methodref>
        <methodref name="DisposeOf" visibility="public" procflags="inline">
        </methodref>
        <methodref name="InitInstance" visibility="public" procflags="class">
        </methodref>
        <methodref name="CleanupInstance" visibility="public">
        </methodref>
        <methodref name="ClassType" visibility="public" procflags="inline">
        </methodref>
        <methodref name="ClassName" visibility="public" procflags="class">
        </methodref>
        <methodref name="ClassNameIs" visibility="public" procflags="class">
        </methodref>
        <methodref name="ClassParent" visibility="public" procflags="class">
        </methodref>
        <methodref name="ClassInfo" visibility="public" procflags="class inline">
        </methodref>
        <methodref name="InstanceSize" visibility="public" procflags="class inline">
        </methodref>
        <methodref name="InheritsFrom" visibility="public" procflags="class">
        </methodref>
        <methodref name="MethodAddress" visibility="public" procflags="class overload">
        </methodref>
        <methodref name="MethodAddress" visibility="public" procflags="class overload">
        </methodref>
        <methodref name="MethodName" visibility="public" procflags="class">
        </methodref>
        <methodref name="QualifiedClassName" visibility="public" procflags="class">
        </methodref>
        <methodref name="FieldAddress" visibility="public" procflags="overload">
        </methodref>
        <methodref name="FieldAddress" visibility="public" procflags="overload">
        </methodref>
        <methodref name="GetInterface" visibility="public">
        </methodref>
        <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
        </methodref>
        <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
        </methodref>
        <methodref name="UnitName" visibility="public" procflags="class">
        </methodref>
        <methodref name="UnitScope" visibility="public" procflags="class">
        </methodref>
        <methodref name="Equals" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="GetHashCode" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="ToString" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="SafeCallException" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="AfterConstruction" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="Dispatch" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="DefaultHandler" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="NewInstance" visibility="public" procflags="class virtual">
        </methodref>
        <methodref name="FreeInstance" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="Destroy" visibility="public" procflags="destructor virtual">
        </methodref>
        <methodref name="CPP_ABI_1" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="CPP_ABI_2" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="CPP_ABI_3" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="GetDisposed" visibility="protected" procflags="inline">
        </methodref>
        <methodref name="CheckDisposed" visibility="protected" procflags="inline">
        </methodref>
        <propertyref name="Disposed" visibility="protected">
        </propertyref>
      </ancestor>
    </ancestor>
    <interfaces>
      <implements name="{System.Generics.Defaults}IComparer&lt;ZXing.QrCode.Internal.FinderPattern.IFinderPattern&gt;" />
    </interfaces>
    <members>
      <field name="average" type="Single" visibility="private" size="4" offset="24" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="101" />
      <constructor name="Create" visibility="public" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="103">
        <parameters>
          <parameter name="f" type="Single" />
        </parameters>
      </constructor>
      <function name="Compare" visibility="public" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="104">
        <parameters>
          <parameter name="Left" type="IFinderPattern" paramflags="const" />
          <parameter name="Right" type="IFinderPattern" paramflags="const" />
          <retval type="Integer" />
        </parameters>
      </function>
    </members>
  </class>
  <class name="TCenterComparator" sealed="true" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="107">
    <ancestor name="TInterfacedObject" namespace="System">
      <interfaces>
        <implements name="IInterface" />
      </interfaces>
      <methodref name="GetRefCount" visibility="private" procflags="inline">
      </methodref>
      <methodref name="__MarkDestroying" visibility="protected" procflags="static inline">
      </methodref>
      <methodref name="QueryInterface" visibility="protected">
      </methodref>
      <methodref name="_AddRef" visibility="protected">
      </methodref>
      <methodref name="_Release" visibility="protected">
      </methodref>
      <methodref name="AfterConstruction" visibility="public" procflags="override">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public" procflags="override">
      </methodref>
      <methodref name="NewInstance" visibility="public" procflags="class override">
      </methodref>
      <propertyref name="RefCount" visibility="public">
      </propertyref>
      <ancestor name="TObject" namespace="System">
        <methodref name="Create" visibility="public" procflags="constructor">
        </methodref>
        <methodref name="Free" visibility="public">
        </methodref>
        <methodref name="DisposeOf" visibility="public" procflags="inline">
        </methodref>
        <methodref name="InitInstance" visibility="public" procflags="class">
        </methodref>
        <methodref name="CleanupInstance" visibility="public">
        </methodref>
        <methodref name="ClassType" visibility="public" procflags="inline">
        </methodref>
        <methodref name="ClassName" visibility="public" procflags="class">
        </methodref>
        <methodref name="ClassNameIs" visibility="public" procflags="class">
        </methodref>
        <methodref name="ClassParent" visibility="public" procflags="class">
        </methodref>
        <methodref name="ClassInfo" visibility="public" procflags="class inline">
        </methodref>
        <methodref name="InstanceSize" visibility="public" procflags="class inline">
        </methodref>
        <methodref name="InheritsFrom" visibility="public" procflags="class">
        </methodref>
        <methodref name="MethodAddress" visibility="public" procflags="class overload">
        </methodref>
        <methodref name="MethodAddress" visibility="public" procflags="class overload">
        </methodref>
        <methodref name="MethodName" visibility="public" procflags="class">
        </methodref>
        <methodref name="QualifiedClassName" visibility="public" procflags="class">
        </methodref>
        <methodref name="FieldAddress" visibility="public" procflags="overload">
        </methodref>
        <methodref name="FieldAddress" visibility="public" procflags="overload">
        </methodref>
        <methodref name="GetInterface" visibility="public">
        </methodref>
        <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
        </methodref>
        <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
        </methodref>
        <methodref name="UnitName" visibility="public" procflags="class">
        </methodref>
        <methodref name="UnitScope" visibility="public" procflags="class">
        </methodref>
        <methodref name="Equals" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="GetHashCode" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="ToString" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="SafeCallException" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="AfterConstruction" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="Dispatch" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="DefaultHandler" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="NewInstance" visibility="public" procflags="class virtual">
        </methodref>
        <methodref name="FreeInstance" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="Destroy" visibility="public" procflags="destructor virtual">
        </methodref>
        <methodref name="CPP_ABI_1" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="CPP_ABI_2" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="CPP_ABI_3" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="GetDisposed" visibility="protected" procflags="inline">
        </methodref>
        <methodref name="CheckDisposed" visibility="protected" procflags="inline">
        </methodref>
        <propertyref name="Disposed" visibility="protected">
        </propertyref>
      </ancestor>
    </ancestor>
    <interfaces>
      <implements name="{System.Generics.Defaults}IComparer&lt;ZXing.QrCode.Internal.FinderPattern.IFinderPattern&gt;" />
    </interfaces>
    <members>
      <field name="average" type="Single" visibility="private" size="4" offset="24" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="109" />
      <constructor name="Create" visibility="public" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="111">
        <parameters>
          <parameter name="f" type="Single" />
        </parameters>
      </constructor>
      <function name="Compare" visibility="public" file="ZXing.QrCode.Internal.FinderPatternFinder.pas" line="112">
        <parameters>
          <parameter name="Left" type="IFinderPattern" paramflags="const" />
          <parameter name="Right" type="IFinderPattern" paramflags="const" />
          <retval type="Integer" />
        </parameters>
      </function>
    </members>
  </class>
</namespace>
