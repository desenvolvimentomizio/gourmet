unit MizioUP.Views.uListviewsetor;

interface

uses FMX.ListView.Types,
     FMX.ListView.Appearances,
     FMX.ListView,
     FMX.Graphics;

type
    TListviewSetor = class
    private

    public
        class procedure SetupItemSetor(lv: TListView; Item: TListViewItem; img_uncheck, img_check: TBitmap); static;
        class procedure SelecionarItemSetor(lv: TListView; Item: TListViewItem; img_uncheck, img_check: TBitmap); static;
        class function SelectedCountSetor(lview: TListView): integer; static;
        class procedure AddItemSetor(lv: TListView; codigo, descricao: string; bmp: TBitmap); static;

end;

implementation

uses
  System.UITypes;

class procedure TListviewSetor.SetupItemSetor(lv: TListView; Item: TListViewItem; img_uncheck, img_check: TBitmap);
begin
    with item do
    begin
        if Checked then
            TListItemImage(Objects.FindDrawable('ImgCheck')).Bitmap := img_check
        else
            TListItemImage(Objects.FindDrawable('ImgCheck')).Bitmap := img_uncheck;
    end;
end;


class procedure TListviewSetor.SelecionarItemSetor(lv: TListView; Item: TListViewItem; img_uncheck, img_check: TBitmap);
begin
    Item.Checked := NOT Item.Checked;
    SetupItemSetor(lv, item, img_uncheck, img_check);
end;

class function TListviewSetor.SelectedCountSetor(lview: TListView): integer;
var
    x : integer;
begin
    Result := 0;

    for x := lview.ItemCount - 1 downto 0 do
        if lview.Items[x].Checked then
            Inc(Result);
end;

class procedure TListviewSetor.AddItemSetor(lv: TListView; codigo, descricao: string; bmp: TBitmap);
begin
    with lv.Items.Add do
    begin
        Height := 60;
        TagString := codigo;
        Checked := false;

        TListItemText(Objects.FindDrawable('TxtSetor')).Text := descricao;
        TListItemImage(Objects.FindDrawable('ImgCheck')).Bitmap := bmp;
    end;
end;


end.

