unit GourmetServer.Service.Conexoes;

interface

uses

  inifiles,
  System.SysUtils,
  System.Classes,
  Data.DB,
  FireDAC.Phys.MySQLDef,
  FireDAC.Stan.Intf,
  FireDAC.Phys,
  FireDAC.Phys.MySQL,
  FireDAC.Stan.Option,
  FireDAC.Stan.Error,
  FireDAC.UI.Intf,
  FireDAC.Phys.Intf,
  FireDAC.Stan.Def,
  FireDAC.Stan.Pool,
  FireDAC.Stan.Async,
  FireDAC.ConsoleUI.Wait,
  FireDAC.Comp.Client,
  FireDAC.Stan.Param,
  FireDAC.DatS,
  FireDAC.DApt.Intf,
  FireDAC.DApt,
  FireDAC.Comp.DataSet;

var
    vpNomeBanco :String;
    vpServidor :String;
    vpUsuario :String;
    vpSenha :String;
    vpPortaBanco :String;

function AtivaConexao(aConexao:TFDConnection):TFDConnection;

implementation

uses
  Vcl.Forms;


Procedure CarregaIni;
Var
  arquini: TIniFile;
Begin

  arquini := TIniFile.Create(extractfilepath(application.exename) + 'gourmeterp.ini');
  With arquini Do
  Begin
    vpNomeBanco := ReadString('posi', 'nomebanco', 'mizio');
    vpServidor := ReadString('posi', 'servidor', '127.0.0.1');
    vpUsuario := ReadString('posi', 'usuario', 'root');
    vpSenha := ReadString('posi', 'senha', 'xda973');
    vpPortaBanco := ReadString('posi', 'portabanco', '3306');
  End;
  arquini.Free;



End;


function AtivaConexao(aConexao:TFDConnection):TFDConnection;
begin

  CarregaIni;

  try
    aConexao.FormatOptions.StrsTrim := True;
    aConexao.Params.DataBase :=vpNomeBanco;
    aConexao.Params.Add('Server='+vpServidor);
    aConexao.Params.UserName := 'root';
    aConexao.Params.Add('port='+vpPortaBanco);
    aConexao.Params.Password := vpSenha;
    aConexao.Params.Add('characterSet=utf8');
    aConexao.DriverName := 'MySQL';
    aConexao.LoginPrompt := false;
    aConexao.Connected := true;




    if aConexao.Connected = True then
      Result := aConexao
    else
      Result := Nil;

    except
    on E: Exception do
    begin
       writeln('Erro: ' + E.Message );

        Result := Nil;
    end;

  end;

end;

end.
