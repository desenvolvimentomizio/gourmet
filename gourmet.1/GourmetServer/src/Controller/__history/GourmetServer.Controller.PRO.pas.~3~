unit GourmetServer.Controller.PRO;

interface

Uses
  System.Json,
  System.SysUtils,
  idHashMessageDigest,
  GourmetServer.Model.DAOGeneric,
  GourmetServer.Model.Entity.V_PRO,
  GourmetServer.Model.Entity.PRO;

function ManutencaoPROAplicativo(vProNome: String; vGrpCodigo: Integer; vUniCodigo: Integer; vTpoCodigo: Integer; vIngredientes: String): Integer;

function ManutencaoPRO(vProduto: tJsonObject): Integer;

function BuscaCodigoGRPProCodigo(vProCodigo: Integer): Integer;
function BuscaCodigoPROTaxaValor(vValor: String): Integer;
function BuscaCodigoPROProNome(vProNome: String): Integer;
function BuscaCodigoPROIsaIdentificacao(vProNome: String): Integer;

type
  TAPIError = class
  private
    Ferror: string;
  public
    property error: string read Ferror write Ferror;
  end;

implementation

function BuscaCodigoPROIsaIdentificacao(vProNome: String): Integer;
var
  FDAO: iDAOGeneric<TPRO>;
  vlprocodigo: Integer;
begin
  vlprocodigo := 0;

  FDAO := TDAOGeneric<TPRO>.New;

  FDAO.DAO.SQL.where('pronome=' + QuotedStr(vProNome) + ' and tpocodigo=1').&End.Find;

  vlprocodigo := FDAO.DataSet.FieldByName('procodigo').asinteger;
  result := vlprocodigo;
end;

function ManutencaoPROAplicativo(vProNome: String; vGrpCodigo: Integer; vUniCodigo: Integer; vTpoCodigo: Integer; vIngredientes: String): Integer;
var
  vlprocodigo: Integer;
  vlPro: tJsonObject;

begin
  vlprocodigo := BuscaCodigoPROProNome(vProNome);

  if vlprocodigo = 0 then
  begin
    vlPro := tJsonObject.create;

    vlPro.AddPair('procodigo', '0');

    vlPro.AddPair('pronome', vProNome);
    vlPro.AddPair('pronomereduzido', vProNome);

    if vIngredientes <> '' then
    begin
      vlPro.AddPair('proproducao', '1');
      vlPro.AddPair('cfocfop', '5.101');
      vlPro.AddPair('cfocfopfora', '6.101');
    end
    else
    begin
      vlPro.AddPair('proproducao', '0');
      vlPro.AddPair('cfocfop', '5.102');
      vlPro.AddPair('cfocfopfora', '6.102');

    end;

    vlPro.AddPair('icmcodigo', '00');
    vlPro.AddPair('icmcodigofora', '00');

    vlPro.AddPair('tpocodigo', vTpoCodigo.tostring);

    vlPro.AddPair('cstcodigo', '102');
    vlPro.AddPair('csicodigo', '99');
    vlPro.AddPair('cspcodigo', '49');
    vlPro.AddPair('csfcodigo', '49');
    vlPro.AddPair('propisaliquota', '0');
    vlPro.AddPair('procofinsaliquota', '0');
    vlPro.AddPair('proipialiquota', '0');

    vlPro.AddPair('procest', '');

    vlPro.AddPair('promva', '0');

    vlPro.AddPair('propercfcp', '0');
    vlPro.AddPair('promargemcontrib', '0');
    vlPro.AddPair('imuid', '0');
    vlPro.AddPair('pronatrecisenta', '0');

    vlPro.AddPair('marcodigo', '1');
    vlPro.AddPair('grpcodigo', vGrpCodigo.tostring);
    vlPro.AddPair('trbcodigo', '1');
    vlPro.AddPair('unicodigo', vUniCodigo.tostring);

    vlPro.AddPair('prounitrib', vUniCodigo.tostring);
    vlPro.AddPair('proqtdtrib', '1');

    vlPro.AddPair('sipcodigo', '1');
    vlPro.AddPair('prominimo', '0');
    vlPro.AddPair('proproprio', '0');
    vlPro.AddPair('pronumserie ', '0');
    vlPro.AddPair('proncm', '');
    vlPro.AddPair('procomposto', '');
    vlPro.AddPair('prosaldo', '0');
    vlPro.AddPair('probalanca', '0');
    vlPro.AddPair('protecla', '');
    vlPro.AddPair('provalidade', '0');
    vlPro.AddPair('procarga', '0');
    vlPro.AddPair('proreferencia', '0');
    vlPro.AddPair('proestoque', '0');
    vlPro.AddPair('prosped', '0');
    vlPro.AddPair('proobs', '');
    vlPro.AddPair('prosaldodisp', '0');
    vlPro.AddPair('proanpcodigo', '0');
    vlPro.AddPair('enpcodigo', '0');
    vlPro.AddPair('propedecomple', '0');
    vlPro.AddPair('propededescrserv', '0');
    vlPro.AddPair('propedetecnicoserv', '0');
    // vlPro.AddPair('gracodigo', '0');
    vlPro.AddPair('dprcodigo', '1');

    vlPro.AddPair('proconsolidado', '0');

    vlPro.AddPair('procontabiliza', '0');
    vlPro.AddPair('prousagrade', '0');
    vlPro.AddPair('propercreducaobaseicm', '0');
    vlPro.AddPair('imgcodigo', '1');
    vlPro.AddPair('proalterarqtd', '1');
    // vlpro.AddPair('proimagem','');
    vlPro.AddPair('proremoto', '1');
    vlPro.AddPair('stgcodigo', '1');
    vlPro.AddPair('rcspontuacao', '0');
    vlPro.AddPair('padcodigo', '1');
    vlPro.AddPair('proabc', 'A');

    vlprocodigo := ManutencaoPRO(vlPro);

  end;

  result := vlprocodigo;
end;

function ManutencaoPRO(vProduto: tJsonObject): Integer;
var
  FDAO: GourmetServer.Model.DAOGeneric.iDAOGeneric<TPRO>;
  FPRO: TPRO;
  vlprocodigo: Integer;

begin
  FDAO := TDAOGeneric<TPRO>.New;

  vlprocodigo := vProduto.getvalue('procodigo', '').ToInteger;

  FPRO := TPRO.create;
  FPRO.procodigo := vlprocodigo;
  FPRO.pronome := vProduto.getvalue('pronome', '');
  FPRO.pronomereduzido := vProduto.getvalue('pronomereduzido', '');
  FPRO.marcodigo := vProduto.getvalue('marcodigo', '').ToInteger;
  FPRO.grpcodigo := vProduto.getvalue('grpcodigo', '').ToInteger;
  FPRO.trbcodigo := vProduto.getvalue('trbcodigo', '').ToInteger;
  FPRO.icmcodigo := vProduto.getvalue('icmcodigo', '');
  FPRO.tpocodigo := vProduto.getvalue('tpocodigo', '').ToInteger;
  FPRO.unicodigo := vProduto.getvalue('unicodigo', '').ToInteger;
  FPRO.sipcodigo := vProduto.getvalue('sipcodigo', '').ToInteger;
  FPRO.prominimo := strtocurr(vProduto.getvalue('prominimo', ''));
  FPRO.proproprio := vProduto.getvalue('proproprio', '');
  FPRO.pronumserie := vProduto.getvalue('pronumserie', '');
  FPRO.proncm := vProduto.getvalue('proncm', '');
  FPRO.procomposto := vProduto.getvalue('procomposto', '');
  FPRO.prosaldo := strtocurr(vProduto.getvalue('prosaldo', ''));
  FPRO.probalanca := strtocurr(vProduto.getvalue('probalanca', ''));
  FPRO.protecla := vProduto.getvalue('protecla', '');
  FPRO.provalidade := vProduto.getvalue('provalidade', '').ToInteger;
  FPRO.procarga := vProduto.getvalue('procarga', '').ToInteger;
  FPRO.proreferencia := vProduto.getvalue('proreferencia', '');
  FPRO.proestoque := vProduto.getvalue('proestoque', '');
  FPRO.prosped := vProduto.getvalue('prosped', '');
  FPRO.proobs := vProduto.getvalue('proobs', '');
  FPRO.prounitrib := vProduto.getvalue('prounitrib', '').ToInteger;
  FPRO.proqtdtrib := strtocurr(vProduto.getvalue('proqtdtrib', ''));
  FPRO.prosaldodisp := strtocurr(vProduto.getvalue('prosaldodisp', ''));
  FPRO.proanpcodigo := vProduto.getvalue('proanpcodigo', '').ToInteger;
  FPRO.enpcodigo := vProduto.getvalue('enpcodigo', '').ToInteger;
  FPRO.propedecomple := vProduto.getvalue('propedecomple', '').ToInteger;
  FPRO.propededescrserv := vProduto.getvalue('propededescrserv', '').ToInteger;
  FPRO.propedetecnicoserv := vProduto.getvalue('propedetecnicoserv', '').ToInteger;
  // FPRO.gracodigo := vProduto.getvalue('gracodigo', '').ToInteger;
  FPRO.dprcodigo := vProduto.getvalue('dprcodigo', '').ToInteger;
  FPRO.cstcodigo := vProduto.getvalue('cstcodigo', '');
  FPRO.proconsolidado := vProduto.getvalue('proconsolidado', '').ToInteger;
  FPRO.csicodigo := vProduto.getvalue('csicodigo', '');
  FPRO.cspcodigo := vProduto.getvalue('cspcodigo', '');
  FPRO.csfcodigo := vProduto.getvalue('csfcodigo', '');
  FPRO.procontabiliza := vProduto.getvalue('procontabiliza', '').ToInteger;
  FPRO.prousagrade := vProduto.getvalue('prousagrade', '').ToInteger;
  FPRO.propercreducaobaseicm := strtocurr(vProduto.getvalue('propercreducaobaseicm', ''));
  FPRO.propisaliquota := strtocurr(vProduto.getvalue('propisaliquota', ''));
  FPRO.procofinsaliquota := strtocurr(vProduto.getvalue('procofinsaliquota', ''));
  FPRO.imgcodigo := vProduto.getvalue('imgcodigo', '').ToInteger;
  FPRO.proalterarqtd := vProduto.getvalue('proalterarqtd', '').ToInteger;
  // FPRO.proimagem := vProduto.getvalue('proimagem', '').ToInteger;
  FPRO.proremoto := vProduto.getvalue('proremoto', '').ToInteger;
  FPRO.stgcodigo := vProduto.getvalue('stgcodigo', '').ToInteger;
  FPRO.procest := vProduto.getvalue('procest', '');
  FPRO.proproducao := vProduto.getvalue('proproducao', '').ToInteger;
  FPRO.rcspontuacao := vProduto.getvalue('rcspontuacao', '').ToInteger;
  FPRO.padcodigo := vProduto.getvalue('padcodigo', '').ToInteger;
  FPRO.cfocfop := vProduto.getvalue('cfocfop', '');
  FPRO.promva := vProduto.getvalue('promva', '');
  FPRO.propercfcp := vProduto.getvalue('propercfcp', '');
  FPRO.proabc := vProduto.getvalue('proabc', '');
  FPRO.promargemcontrib := strtocurr(vProduto.getvalue('promargemcontrib', ''));
  // FPRO.imuid := vProduto.getvalue('imuid', '').ToInteger;
  FPRO.pronatrecisenta := vProduto.getvalue('pronatrecisenta', '').ToInteger;
  FPRO.icmcodigofora := vProduto.getvalue('icmcodigofora', '');
  FPRO.proipialiquota := strtocurr(vProduto.getvalue('proipialiquota', ''));
  FPRO.cfocfopfora := vProduto.getvalue('cfocfopfora', '');

  if vlprocodigo = 0 then
  // incluir novo
  begin
    FPRO.procodigo := 0;
    FDAO.DAO.Insert(FPRO);
    FDAO.DAO.LastID;
    vlprocodigo := FDAO.DataSet.FieldByName('procodigo').asinteger;
  end
  else
  // alterar se ja existe
  begin
    FPRO.procodigo := vlprocodigo;
    FDAO.DAO.Update(FPRO);
  end;
  result := vlprocodigo;

end;

function BuscaCodigoPROTaxaValor(vValor: String): Integer;
var
  FDAO: iDAOGeneric<TV_PRO>;
  vlprocodigo: Integer;

begin
  vlprocodigo := 0;

  FDAO := TDAOGeneric<TV_PRO>.New;

  FDAO.DAO.SQL.where('punprecoav=' + stringreplace(vValor, ',', '.', []) + ' and tpoidentificacao=' + QuotedStr('Serviços')).&End.Find;

  vlprocodigo := FDAO.DataSet.FieldByName('procodigo').asinteger;
  result := vlprocodigo;
end;

function BuscaCodigoPROProNome(vProNome: String): Integer;
var
  FDAO: iDAOGeneric<TPRO>;
  vlgrpcodigo: Integer;
begin
  vlgrpcodigo := 0;

  FDAO := TDAOGeneric<TPRO>.New;

  FDAO.DAO.SQL.where('pronome=' + QuotedStr(vProNome)).&End.Find;

  vlgrpcodigo := FDAO.DataSet.FieldByName('procodigo').asinteger;
  result := vlgrpcodigo;
end;

function BuscaCodigoGRPProCodigo(vProCodigo: Integer): Integer;
var
  FDAO: iDAOGeneric<TPRO>;
  vlgrpcodigo: Integer;
begin
  vlgrpcodigo := 0;

  FDAO := TDAOGeneric<TPRO>.New;

  FDAO.DAO.SQL.where('procodigo=' + vProCodigo.tostring).&End.Find;

  vlgrpcodigo := FDAO.DataSet.FieldByName('grpcodigo').asinteger;
  result := vlgrpcodigo;
end;

end.
