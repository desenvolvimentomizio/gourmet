unit GourmetServer.Controller.RFM;

interface

Uses
  Horse,
  System.Json,
  System.SysUtils,
  idHashMessageDigest,
  GourmetServer.Model.Entity.RFM,
  GourmetServer.Model.DAOGeneric;

Function ManutencaoRFM(vRfiChave: Integer; vMesChave: Integer; vFlaCodigo: Integer): Integer;

type
  TAPIError = class
  private
    Ferror: string;
  public
    property error: string read Ferror write Ferror;
  end;

implementation

uses
  FireDAC.Comp.Client;

Function ManutencaoRFM(vRfiChave: Integer; vMesChave: Integer; vFlaCodigo: Integer): Integer;
var
  FDAO: GourmetServer.Model.DAOGeneric.iDAOGeneric<TRFM>;
  FRFM: TRFM;
  vlrfmchave: Integer;
begin
  FDAO := TDAOGeneric<TRFM>.New;

  vlrfmchave := 0;

  FRFM := TRFM.Create;
  FRFM.rfmchave := vlrfmchave;
  FRFM.rfichave := vRfiChave;
  FRFM.meschave := vMesChave;
  FRFM.flacodigo := vFlaCodigo;

  if vlrfmchave = 0 then
  // incluir novo
  begin
    FRFM.rfmchave := 0;
    FDAO.DAO.Insert(FRFM);
    FDAO.DAO.LastID;
  //  vlrfmchave := FDAO.DataSet.FieldByName('rfmchave').asInteger;
  end
  else
  // alterar se ja existe
  begin
    FRFM.rfmchave := vlrfmchave;
    FDAO.DAO.Update(FRFM);
  end;
  result := vlrfmchave;

(FDAO.dataset as TFDQuery).Connection.connected:=false;
end;

end.
