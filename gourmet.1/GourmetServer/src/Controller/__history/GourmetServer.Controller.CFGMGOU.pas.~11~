unit GourmetServer.Controller.CFGMGOU;

interface

Uses
  FireDAC.Phys.MySQLDef,
  FireDAC.Phys.MySQL,
  FireDAC.Phys.Intf,
  FireDAC.Phys,
  FireDAC.UI.Intf,
  FireDAC.ConsoleUI.Wait,
  Data.DB,
  FireDAC.Comp.Client,
  FireDAC.Comp.DataSet,



  System.Json,
  System.SysUtils,
  idHashMessageDigest,
  GourmetServer.Controller.IMM,
  GourmetServer.Model.DAOGeneric,
  GourmetServer.Model.Entity.CFGMGOU;

function NovoNumeroPedidoCFG(vCznChave: integer): integer;
Function ManutencaoCFGMGOU(vcfgmgoupedidelivery: integer): integer;
Procedure v1ManutencaoStatusAIQ(vcfgcodigo: integer);

type
  TAPIError = class
  private
    Ferror: string;
  public
    property error: string read Ferror write Ferror;
  end;

implementation

uses
  GourmetServer.Service.Conexoes;

procedure v1ManutencaoStatusAIQ(vcfgcodigo: integer);
var
  conexao:TFDconnection;
  cfg:TFDQuery;

begin

  conexao:=TFDconnection.Create(nil);

  if AtivaConexao(conexao)<>nil then
  begin

    cfg:=TFDQuery.Create(nil);
    cfg.Connection:=Conexao;
    cfg.sql.Text:='select cfgcodigo,cfgmgoupedidelivery, cfgmgoustatusaiq from cfgmgou '+
                    'where cfgcodigo=' + vcfgcodigo.ToString;
    cfg.Open;

    if not cfg.IsEmpty then
    begin
      cfg.edit;
      cfg.FieldByName('cfgmgoustatusaiq').AsDateTime := now();
      cfg.Post;
    end;

    cfg.close;

    if cfg<>nil then
      cfg.DisposeOf;

  end;

  if conexao<>nil then
    conexao.DisposeOf;

end;

Function ManutencaoCFGMGOU(vcfgmgoupedidelivery: integer): integer;
var
  FDAO: iDAOGeneric<TCFGMGOU>;
  FCFGMGOU: TCFGMGOU;
  vlNumeroPedido: integer;
begin
  vlNumeroPedido := 0;

  FDAO := TDAOGeneric<TCFGMGOU>.New;

  FDAO.DAO.SQL.where('cfgcodigo=1').&End.Find;

  FCFGMGOU := TCFGMGOU.create;
  FCFGMGOU.cfgcodigo := 1;
  FCFGMGOU.cfgmgoupedidelivery := vcfgmgoupedidelivery;
  FDAO.DAO.Update(FCFGMGOU);

  FDAO.DAO.Find;
  vlNumeroPedido := FDAO.DataSet.FieldByName('cfgmgoupedidelivery').asInteger;
  result := vlNumeroPedido;

end;

function NovoNumeroPedidoCFG(vCznChave: integer): integer;
var
  vlNumeroPedido: integer;
begin

  vlNumeroPedido := BuscaNumeroUltimoPedido(vCznChave) + 1;
  ManutencaoCFGMGOU(vlNumeroPedido);
  result := vlNumeroPedido;

end;

end.
