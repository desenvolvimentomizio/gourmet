unit GourmetServer.Controller.VCH;

interface

Uses
  Horse,
  System.Json,
  System.SysUtils,
  idHashMessageDigest,
  GourmetServer.Model.DAOGeneric,
  GourmetServer.Model.Entity.VCH;


function BuscaVoucher(vCodigoVoucher: string): string;
Function ManutencaoVCH(vVoucher: TJsonObject): Integer;

type
  TAPIError = class
  private
    Ferror: string;
  public
    property error: string read Ferror write Ferror;
  end;

implementation


function BuscaVoucher(vCodigoVoucher: string): string;
begin

end;

Function ManutencaoVCH(vVoucher: TJsonObject): Integer;
var
  FDAO: GourmetServer.Model.DAOGeneric.iDAOGeneric<TVCH>;
  FVCH: TVCH;
  vlvchchave: Integer;
begin
  FDAO := TDAOGeneric<TVCH>.New;
  vlvchchave := 0;

  FVCH := TVCH.Create;


    FVCH.vchchave:=vlvchchave;
    FVCH.vchdataemissao:=now();
    FVCH.vchsituacao:=1;
    FVCH.vchvoucher: String;
    FVCH.vchtipo: Integer;
    FVCH.vchmodouso: Integer;
    FVCH.vchdatavalidade:=STRTODAT('31/12/2050');
    FVCH.vchvalor: Currency;
    FVCH.vchpercentual:=0;
    FVCH.etdcodigo: Integer;
    FVCH.vchdatauso:=NUL;
    FVCH.procodigo:=0;
    FVCH.puncodigo:=0;
    FVCH.vchetdemissor: Integer;
    FVCH.vchautomatico:=1;



  if vlvchchave = 0 then
  // incluir novo
  begin
    FVCH.vchchave := 0;
    FDAO.DAO.Insert(FVCH);
    FDAO.DAO.LastID;
    vlvchchave := FDAO.DataSet.FieldByName('vchchave').asInteger;
  end
  else
  // alterar se ja existe
  begin
    FVCH.vchchave:=vlvchchave;
    FDAO.DAO.Update(FVCH);
  end;

  result := vlvchchave;

end;




{

Function ManutencaoVCHIdentificacao(vNome: string; vProCodigo: String; vGrpCodigo: String): Integer;
var
  vSabor: TJsonObject;
  vlsbrcodigo: Integer;
begin

  vlsbrcodigo := BuscaSBRIdentificacao(vNome, vProCodigo, vGrpCodigo);
  if vlsbrcodigo = 0 then
  begin
    vSabor := TJsonObject.Create;

    if vGrpCodigo <> '' then
      vSabor.AddPair('grpcodigo', vGrpCodigo);
    if vProCodigo <> '' then
      vSabor.AddPair('procodigo', vProCodigo);

    vSabor.AddPair('sbrcodigo','0');
    vSabor.AddPair('sbridentificacao', vNome);
    vSabor.AddPair('sbrcobraadicional', '0');
    vSabor.AddPair('gsbcodigo', '0');
    vSabor.AddPair('sbrordem', '0');
    vSabor.AddPair('sbrfracionado', '0');
    vSabor.AddPair('sbrquantidade', '0');
    vSabor.AddPair('imgcodigo', '1');
    vSabor.AddPair('stgcodigo', '1');
    vSabor.AddPair('sipcodigo', '1');
    vlsbrcodigo := ManutencaoSBR(vSabor);

  end;

  result := vlsbrcodigo;

end;

}



end.
