unit GourmetServer.Controller.MES;

interface

Uses
  Horse,

  FireDAC.Phys.MySQLDef,
  FireDAC.Phys.MySQL,
  FireDAC.Phys.Intf,
  FireDAC.Phys,
  FireDAC.UI.Intf,
  FireDAC.ConsoleUI.Wait,
  Data.DB,
  FireDAC.Comp.DataSet,



  System.Json,
  System.SysUtils,
  idHashMessageDigest,
  GourmetServer.Service.Funcoes,
  GourmetServer.Model.DAOGeneric,
  GourmetServer.Model.Entity.MES;

Function ManutencaoMES(vVenda: TJsonObject): Integer;

Function RemoveOrcVendaChaveOrigem(vMeschave: Integer; vOricodigo: Integer): Integer;
Function v1BuscaVendaNumeroPedidoAIQ(vAiqNumeroPedido: String; vOricodigo: Integer; vCZnchave:Integer): Integer;

type
  TAPIError = class
  private
    Ferror: string;
  public
    property error: string read Ferror write Ferror;
  end;

implementation

uses
  GourmetServer.Service.Conexoes, Uni, FireDAC.Comp.Client;

Function v1BuscaVendaNumeroPedidoAIQ(vAiqNumeroPedido: String; vOricodigo: Integer; vCZnchave:Integer): Integer;
var
  conexao:TFDconnection;
  mes:TFDQuery;

  vlMeschave: Integer;
begin
  vlMeschave := 0;
  conexao:=TFDconnection.Create(nil);
  if AtivaConexao(conexao)<>nil then
  begin

      mes:=TFDQuery.Create(nil);
      mes.Connection:=Conexao;
      mes.sql.Text:='select meschave from mes '+
                    'where cznchave='+vCZnchave.ToString+ ' and   mesnumeropedido=' + vAiqNumeroPedido;
      mes.Open;

      if not mes.IsEmpty then
       vlMeschave := mes.FieldByName('meschave').asinteger;

      mes.close;

      if mes<>nil then
      mes.DisposeOf;


  end;

  if conexao<>nil then
  conexao.DisposeOf;

  result := vlMeschave;


end;

Function RemoveOrcVendaChaveOrigem(vMeschave: Integer; vOricodigo: Integer): Integer;
var
  FDAO: iDAOGeneric<TMES>;

begin

  if (vMeschave = 0) then
  begin
    result := 0;
    exit;
  end;

  result := 0;

  FDAO := TDAOGeneric<TMES>.New;
  FDAO.DAO.SQL.where('meschave=' + vMeschave.ToString + ' and oricodigo=' + vOricodigo.ToString).&End.Find;

  FDAO.Delete('meschave', vMeschave.ToString);

  result := vMeschave;
end;

Function ManutencaoMES(vVenda: TJsonObject): Integer;
var
  FDAO: GourmetServer.Model.DAOGeneric.iDAOGeneric<TMES>;
  FMES: TMES;
  vlMeschave: Integer;
  a: string;
  vlNumeroPedido: string;
begin

  a := vVenda.ToString;
  vlNumeroPedido := '';
  vlNumeroPedido := vVenda.getvalue('mesnumeropedido', '');

  FDAO := TDAOGeneric<TMES>.New;

  if (vlNumeroPedido <> '') and (vlNumeroPedido <> '0') then
  begin
    vlMeschave := v1BuscaVendaNumeroPedidoAIQ(vlNumeroPedido, 8, vVenda.getvalue('ccxchave', '').ToInteger);
  end
  else
  begin
    vlMeschave := vVenda.getvalue('meschave', '').ToInteger;;
  end;

  FMES := TMES.Create;
  FMES.meschave := vlMeschave;

  FMES.etdcodigo := vVenda.getvalue('etdcodigo', '').ToInteger;
  FMES.mesemissao := StrToDate(vVenda.getvalue('mesemissao', ''));
  FMES.mesregistro := StrToDateTime(vVenda.getvalue('mesregistro', ''));
  FMES.tdfcodigo := vVenda.getvalue('tdfcodigo', '');
  FMES.sdecodigo := vVenda.getvalue('sdecodigo', '');
  FMES.messerie := vVenda.getvalue('messerie', '');
  FMES.mesnumero := vVenda.getvalue('mesnumero', '').ToInteger;
  FMES.meschavenfe := vVenda.getvalue('meschavenfe', '');
  FMES.toecodigo := vVenda.getvalue('toecodigo', '').ToInteger;
  FMES.mesvalor := StrToCurr(vVenda.getvalue('mesvalor', ''));
  FMES.mesdesconto := StrToCurr(vVenda.getvalue('mesdesconto', ''));
  FMES.mesprodutos := StrToCurr(vVenda.getvalue('mesprodutos', ''));
  FMES.messervicos := StrToCurr(vVenda.getvalue('messervicos', ''));
  FMES.mestotal := StrToCurr(vVenda.getvalue('mestotal', ''));
  FMES.tfpcodigo := vVenda.getvalue('tfpcodigo', '').ToInteger;
  FMES.refcodigo := vVenda.getvalue('refcodigo', '').ToInteger;
  FMES.trfcodigo := vVenda.getvalue('trfcodigo', '');
  FMES.mesfrete := StrToCurr(vVenda.getvalue('mesfrete', ''));
  FMES.messeguro := StrToCurr(vVenda.getvalue('messeguro', ''));
  FMES.mesoutras := StrToCurr(vVenda.getvalue('mesoutras', ''));
  FMES.mesbicm := StrToCurr(vVenda.getvalue('mesbicm', ''));
  FMES.mesicm := StrToCurr(vVenda.getvalue('mesicm', ''));
  FMES.mesbicms := StrToCurr(vVenda.getvalue('mesbicms', ''));
  FMES.mesicms := StrToCurr(vVenda.getvalue('mesicms', ''));
  FMES.mesipi := StrToCurr(vVenda.getvalue('mesipi', ''));
  FMES.mespis := StrToCurr(vVenda.getvalue('mespis', ''));
  FMES.mescofins := StrToCurr(vVenda.getvalue('mescofins', ''));
  FMES.mespiss := StrToCurr(vVenda.getvalue('mespiss', ''));
  FMES.mescofinss := StrToCurr(vVenda.getvalue('mescofinss', ''));
  FMES.mesretirou := vVenda.getvalue('mesretirou', '');
  FMES.clbcodigo := vVenda.getvalue('clbcodigo', '').ToInteger;
  FMES.trmcodigo := vVenda.getvalue('trmcodigo', '').ToInteger;
  FMES.mesacrescimo := StrToCurr(vVenda.getvalue('mesacrescimo', ''));
  FMES.mesemitente := StrToCurr(vVenda.getvalue('mesemitente', ''));
  FMES.mesprotocolo := vVenda.getvalue('mesprotocolo', '');
  FMES.messped := vVenda.getvalue('messped', '');
  FMES.temcodigo := vVenda.getvalue('temcodigo', '').ToInteger;
  FMES.mesobs := vVenda.getvalue('mesobs', '');
  FMES.edritem := vVenda.getvalue('edritem', '').ToInteger;
  FMES.tdecodigo := vVenda.getvalue('tdecodigo', '').ToInteger;
  FMES.mesinclusao := StrToDateTime(datahorasqltotext(vVenda.getvalue('mesinclusao', '')));
  FMES.clbvendedor := vVenda.getvalue('clbvendedor', '').ToInteger;
  FMES.eqpcodigo := vVenda.getvalue('eqpcodigo', '').ToInteger;
  FMES.meschaverecla := vVenda.getvalue('meschaverecla', '').ToInteger;
  FMES.mesrefeicao := vVenda.getvalue('mesrefeicao', '').ToInteger;
  FMES.flacodigo := vVenda.getvalue('flacodigo', '').ToInteger;
  FMES.mesreclassicacao := vVenda.getvalue('mesreclassicacao', '').ToInteger;
  FMES.mestipocomissao := vVenda.getvalue('mestipocomissao', '').ToInteger;
  FMES.mesoutroscustos := StrToCurr(vVenda.getvalue('mesoutroscustos', ''));
  FMES.fopcodigo := vVenda.getvalue('fopcodigo', '').ToInteger;
  FMES.ccxchave := vVenda.getvalue('ccxchave', '').ToInteger;
  FMES.moccodigo := vVenda.getvalue('moccodigo', '').ToInteger;
  FMES.mestelefone := vVenda.getvalue('mestelefone', '');
  FMES.oricodigo := vVenda.getvalue('oricodigo', '').ToInteger;
  FMES.baicodigo := vVenda.getvalue('baicodigo', '').ToInteger;
  FMES.mdacodigo := vVenda.getvalue('mdacodigo', '').ToInteger;
  FMES.mesnumeropedido := vVenda.getvalue('mesnumeropedido', '');
  FMES.mespedidointegracao := vVenda.getvalue('mespedidointegracao', '');
  FMES.mesretirabalcao := vVenda.getvalue('mesretirabalcao', '').ToInteger;
  FMES.mespararevenda := vVenda.getvalue('mespararevenda', '').ToInteger;
  FMES.cznchave := vVenda.getvalue('cznchave', '').ToInteger;

  if vlMeschave = 0 then
  // incluir novo
  begin
    FMES.meschave := 0;
    FDAO.DAO.Insert(FMES);
    FDAO.DAO.LastID;
    vlMeschave := FDAO.DataSet.FieldByName('meschave').AsInteger;
  end
  else
  // alterar se ja existe
  begin
    FMES.meschave := vlMeschave;
    FDAO.DAO.Update(FMES);
  end;
  result := vlMeschave;




end;

end.
