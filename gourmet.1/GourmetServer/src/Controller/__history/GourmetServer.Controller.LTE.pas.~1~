unit GourmetServer.Controller.LTE;

interface

Uses
  System.Json,
  System.SysUtils,
  idHashMessageDigest,
  GourmetServer.Model.DAOGeneric,
  GourmetServer.Model.Entity.LTE;

function ManutencaoLTE(vLote: TJsonObject): Integer;

type
  TAPIError = class
  private
    Ferror: string;
  public
    property error: string read Ferror write Ferror;
  end;

implementation

function ManutencaoLTE(vLote: TJsonObject): Integer;
var
  FDAO: GourmetServer.Model.DAOGeneric.iDAOGeneric<TLTE>;
  FLTE: TLTE;
  vlltechave: Integer;
  a:string;
begin
  FDAO := TDAOGeneric<TLTE>.New;
  FLTE := TLTE.Create;

  FLTE.ltechave := vLote.getvalue('ltechave', '').ToInteger;
  FLTE.tfdcodigo := vLote.getvalue('tfdcodigo', '').ToInteger;
  a:=vLote.getvalue('ltedata', '');
  FLTE.ltedata :=strtodate( vLote.getvalue('ltedata', ''));
  FLTE.lteprincipal := vLote.getvalue('lteprincipal', '').ToDouble;
  FLTE.ltedesconto := vLote.getvalue('ltedesconto', '').ToDouble;
  FLTE.ltetotal := vLote.getvalue('ltetotal', '').ToDouble;
  FLTE.ltesituacao := vLote.getvalue('ltesituacao', '').ToInteger;
  FLTE.flacodigo := vLote.getvalue('flacodigo', '').ToInteger;
  FLTE.clbcodigo := vLote.getvalue('clbcodigo', '').ToInteger;
  FLTE.ctacodigo := vLote.getvalue('ctacodigo', '').ToInteger;
  FLTE.lteregistro :=strtodatetime( vLote.getvalue('lteregistro', ''));
  FLTE.ltetroco := vLote.getvalue('ltetroco', '').ToDouble;
  FLTE.ltevalortaxa := vLote.getvalue('ltevalortaxa', '').ToDouble;
  FLTE.ltetipotaxa := vLote.getvalue('ltetipotaxa', '').ToInteger;
  FLTE.ccxchave := vLote.getvalue('ccxchave', '').ToInteger;

  if vlltechave = 0 then
  // incluir novo
  begin
    FLTE.ltechave := 0;
    FDAO.DAO.Insert(FLTE);
    FDAO.DAO.LastID;
    vlltechave := FDAO.DataSet.FieldByName('ltechave').asInteger;
  end
  else
  // alterar se ja existe
  begin
    FLTE.ltechave := vlltechave;
    FDAO.DAO.Update(FLTE);
  end;
  result := vlltechave;

end;

end.
