unit GourmetServer.Controller.CZN;

interface

Uses
  Horse,
  Horse.GBSwagger,
  idHashMessageDigest,
  System.Json,
  System.SysUtils,
  GourmetServer.Service.Funcoes,
  GourmetServer.Model.DAOGeneric,
  GourmetServer.Model.Entity.CZN;

procedure Registry(App: THorse);
procedure V1GetID(Req: THorseRequest; Res: THorseResponse; Next: TProc);
procedure V1GetIDv2(Req: THorseRequest; Res: THorseResponse; Next: TProc);

function BuscaCozinhaAberta: Integer;

type
  TAPIError = class
  private
    Ferror: string;
  public
    property error: string read Ferror write Ferror;
  end;

implementation

procedure Registry(App: THorse);
begin
  App.Get('/v1/situacaocozinha', V1GetID);
  App.Get('/v2/situacaocozinha', V1GetIDv2);

end;

function BuscaCozinhaAberta: Integer;
var
  FDAO: iDAOGeneric<TCZN>;
  VLString: string;
  vlcznchave: Integer;
begin

  FDAO := TDAOGeneric<TCZN>.New;

  VLString := 'cznfechamento IS null order by cznchave desc limit 1';

  FDAO.DAO.SQL.fields('cznchave,cznfechamento ').where(VLString).&End.Find;

  vlcznchave := FDAO.DataSet.FieldByName('cznchave').AsInteger;
  result := vlcznchave;

end;

procedure V1GetID(Req: THorseRequest; Res: THorseResponse; Next: TProc);
var
  FDAO: iDAOGeneric<TCZN>;
  VLString: string;
begin

  FDAO := TDAOGeneric<TCZN>.New;

  VLString := 'cznfechamento IS null order by cznchave limit 1';

  FDAO.DAO.SQL.fields('cznchave,cznfechamento ').where(VLString).&End.Find;

  Res.Send<TJsonarray>(FDAO.DataSetAsJsonArray);

end;

procedure V1GetIDv2(Req: THorseRequest; Res: THorseResponse; Next: TProc);
var
  FDAO: iDAOGeneric<TCZN>;
  VLString: string;
begin

  FDAO := TDAOGeneric<TCZN>.New;

  VLString := 'cznfechamento IS null order by cznchave limit 1';

  FDAO.DAO.SQL.fields('cznchave MOV_ID,cznfechamento MOV_FECHAMENTO').where(VLString).&End.Find;

  Res.Send<TJsonarray>(FDAO.DataSetAsJsonArray);

end;


end.
