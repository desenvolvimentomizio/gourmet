unit GourmetServer.Controller.EDR;

interface

Uses
  System.Json,
  System.SysUtils,
  GourmetServer.Model.DAOGeneric,
  GourmetServer.Controller.CDD,
  GourmetServer.Controller.UFS,
  GourmetServer.Controller.CEP,
  GourmetServer.Model.Entity.EDR;

Function ManutencaoEDR(var vetdcodigo: Integer; var vedrcodigo: Integer; vCliente: TJsonObject): Integer;

function BuscaCodigoEndereco(vetdcodigo: Integer; vEnderecoRua: string; vEnderecoNumero: string): Integer;
function BuscaItemEndereco(vetdcodigo: Integer; vedrcodigo: Integer): Integer;

type
  TAPIError = class
  private
    Ferror: string;
  public
    property error: string read Ferror write Ferror;
  end;

implementation

uses
  FireDAC.Comp.Client;

function BuscaCodigoEndereco(vetdcodigo: Integer; vEnderecoRua: string; vEnderecoNumero: string): Integer;
var
  FDAO: iDAOGeneric<TEDR>;
  vledrcodigo: Integer;
begin
  vledrcodigo := 0;

  FDAO := TDAOGeneric<TEDR>.New;

  FDAO.DAO.SQL.where('etdcodigo=' + vetdcodigo.ToString + ' and edrrua=' + QuotedStr(uppercase(vEnderecoRua)) + ' and edrnumero=' +
    QuotedStr(vEnderecoNumero)).&End.Find;

  vledrcodigo := FDAO.DataSet.FieldByName('edrcodigo').asInteger;
  result := vledrcodigo;

(FDAO.dataset as TFDQuery).Connection.connected:=false;
end;

function BuscaItemEndereco(vetdcodigo: Integer; vedrcodigo: Integer): Integer;
var
  FDAO: iDAOGeneric<TEDR>;
  vledritem: Integer;
  vlItem: string;
begin
  vledritem := 1;

  FDAO := TDAOGeneric<TEDR>.New;

  FDAO.DAO.SQL.where('etdcodigo=' + vetdcodigo.ToString).OrderBy('edrcodigo desc').&End.Find;

  if FDAO.DataSet.FieldByName('edritem').asstring <> '' then
  begin
    if vedrcodigo = 0 then
      vledritem := FDAO.DataSet.FieldByName('edritem').asInteger + 1
    else
      vledritem := FDAO.DataSet.FieldByName('edritem').asInteger;

  end
  else
    vledritem := 1;

  result := vledritem;

(FDAO.dataset as TFDQuery).Connection.connected:=false;
end;

Function ManutencaoEDR(var vetdcodigo: Integer; var vedrcodigo: Integer; vCliente: TJsonObject): Integer;
var
  FDAO: GourmetServer.Model.DAOGeneric.iDAOGeneric<TEDR>;
  FEDR: TEDR;
  vledrcodigo: Integer;
  vledritem: Integer;
begin
  FDAO := TDAOGeneric<TEDR>.New;

  vledrcodigo := vedrcodigo;

  vledritem := BuscaItemEndereco(vetdcodigo, vledrcodigo);
  FEDR := TEDR.Create;

  FEDR.edrcodigo := vledrcodigo;
  FEDR.etdcodigo := vetdcodigo;
  if vledritem > 1 then
    FEDR.tedcodigo := 2
  else
    FEDR.tedcodigo := 1;

  FEDR.edrrua := uppercase(vCliente.getvalue('street_name', ''));
  FEDR.edrnumero := uppercase(vCliente.getvalue('number', ''));
  FEDR.edrcomple := uppercase(trim(vCliente.getvalue('complement', '') + ' ' + vCliente.getvalue('reference', '')));
  FEDR.edrbairro := vCliente.getvalue('neighborhood_name', '');
  FEDR.ufscodigo := BuscaCodigoUF(vCliente.getvalue('state_uf', ''));
  FEDR.cddcodigo := BuscaCodigoCidade(vCliente.getvalue('city_name', ''), FEDR.ufscodigo);

  FEDR.edrcep := BuscaCEP(FEDR.cddcodigo);
  FEDR.edritem := vledritem;
  FEDR.edrativo := 1;
  FEDR.sipcodigo := 1;

  vledrcodigo := BuscaCodigoEndereco(vetdcodigo, FEDR.edrrua, FEDR.edrnumero);

  if vledrcodigo = 0 then
  // incluir novo
  begin
    FEDR.edrcodigo := 0;
    FDAO.DAO.Insert(FEDR);
    FDAO.DAO.LastID;
    vledrcodigo := FDAO.DataSet.FieldByName('edrcodigo').asInteger;
  end
  else
  // alterar se ja existe
  begin
    FEDR.edrcodigo := vledrcodigo;
    FDAO.DAO.Update(FEDR);
  end;
  result := vledrcodigo;
  (FDAO.dataset as TFDQuery).Connection.connected:=false;
end;

end.
