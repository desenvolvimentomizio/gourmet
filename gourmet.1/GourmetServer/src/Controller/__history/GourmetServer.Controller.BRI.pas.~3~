unit GourmetServer.Controller.BRI;

interface

Uses
  Horse,
  System.Json,
  System.SysUtils,
  idHashMessageDigest,
  GourmetServer.Model.DAOGeneric,
  GourmetServer.Model.Entity.BRI,
  GourmetServer.Controller.PUN,
  GourmetServer.Controller.BRD;

Function ManutencaoBRI(vItemBorda: TJsonObject): Integer;

type
  TAPIError = class
  private
    Ferror: string;
  public
    property error: string read Ferror write Ferror;
  end;

implementation

Function ManutencaoBRI(vItemBorda: TJsonObject): Integer;
var
  FDAO: GourmetServer.Model.DAOGeneric.iDAOGeneric<TBRI>;
  FBRI: TBRI;
  vlbrichave: Integer;
  vlBrdCodigo: string;
begin
  FDAO := TDAOGeneric<TBRI>.New;

  vlbrichave := vItemBorda.getvalue('brichave', '').ToInteger;

  FBRI := TBRI.Create;
  FBRI.brichave := vlbrichave;

  FBRI.itochave := vItemBorda.getvalue('itochave', '').ToInteger;

  vlBrdCodigo := vItemBorda.getvalue('brdcodigo', '');
  if vlBrdCodigo = '' then
    vlBrdCodigo := '0';


  vlBrdCodigo:=BuscaCodigoPROpunCodigo(vlBrdCodigo);

 vlBrdCodigo:= BuscaCodigoPRObrdCodigo(vlBrdCodigo);

  FBRI.brdcodigo := vlBrdCodigo.ToInteger;
  FBRI.briincluir := 1;

  if vlbrichave = 0 then
  // incluir novo
  begin
    FBRI.brichave := 0;
    FDAO.DAO.Insert(FBRI);
    FDAO.DAO.LastID;
    vlbrichave := FDAO.DataSet.FieldByName('brichave').asInteger;
  end
  else
  // alterar se ja existe
  begin
    FBRI.brichave := vlbrichave;
    FDAO.DAO.Update(FBRI);
  end;
  result := vlbrichave;

end;

end.
