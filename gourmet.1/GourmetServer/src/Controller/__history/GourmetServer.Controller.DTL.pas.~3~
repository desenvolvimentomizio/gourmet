unit GourmetServer.Controller.DTL;

interface

Uses
  System.Json,
  System.SysUtils,
  idHashMessageDigest,
  GourmetServer.Model.DAOGeneric,
  GourmetServer.Model.Entity.DTL;

function ManutencaoDTL(vDetalheLote: TJsonObject): Integer;

type
  TAPIError = class
  private
    Ferror: string;
  public
    property error: string read Ferror write Ferror;
  end;

implementation

uses
  FireDAC.Comp.Client;

function ManutencaoDTL(vDetalheLote: TJsonObject): Integer;
var
  FDAO: GourmetServer.Model.DAOGeneric.iDAOGeneric<TDTL>;
  FDTL: TDTL;
  vldtlchave: Integer;
begin
vldtlchave:=0;
  FDAO := TDAOGeneric<TDTL>.New;
  FDTL := TDTL.Create;
  FDTL.dtlchave := vDetalheLote.getvalue('dtlchave', '').ToInteger;
  FDTL.ltechave := vDetalheLote.getvalue('ltechave', '').ToInteger;
  FDTL.cedcodigo := vDetalheLote.getvalue('cedcodigo', '').ToInteger;
  FDTL.dtlvalor := vDetalheLote.getvalue('dtlvalor', '').ToDouble;
  FDTL.mdacodigo := vDetalheLote.getvalue('mdacodigo', '').ToInteger;
  FDTL.dtlvalorinfo := vDetalheLote.getvalue('dtlvalorinfo', '').ToDouble;
  FDTL.flacodigo := vDetalheLote.getvalue('flacodigo', '').ToInteger;
  FDTL.rdcnrauto := vDetalheLote.getvalue('rdcnrauto', '');
  FDTL.dtlregistro := strtodatetime(vDetalheLote.getvalue('dtlregistro', ''));
  FDTL.ccxchave := vDetalheLote.getvalue('ccxchave', '').ToInteger;

  if vldtlchave = 0 then
  // incluir novo
  begin
    FDTL.dtlchave := 0;
    FDAO.DAO.Insert(FDTL);
    FDAO.DAO.LastID;
    vldtlchave := FDAO.DataSet.FieldByName('dtlchave').asInteger;
  end
  else
  // alterar se ja existe
  begin
    FDTL.dtlchave := vldtlchave;
    FDAO.DAO.Update(FDTL);
  end;
  result := vldtlchave;

 (FDAO.dataset as TFDQuery).Connection.connected:=false;


end;

end.
