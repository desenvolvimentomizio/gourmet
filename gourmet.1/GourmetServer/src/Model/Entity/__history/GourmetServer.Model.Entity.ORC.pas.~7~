unit GourmetServer.Model.Entity.ORC;

interface

{$TYPEINFO ON}

Uses
  SimpleAttributes;

type

  [Tabela('orc')]
  TORCIMP = Class
  private
    forcchave: Integer;
    fstocodigo: Integer;
    fpdscodigo: Integer;
    forcdataencerr: TDate;

    procedure setorcchave(const Value: Integer);
    procedure setstocodigo(const Value: Integer);
    procedure setpdscodigo(const Value: Integer);
    procedure setorcdataencerr(const Value: TDate);

  public
    constructor create;
    destructor destroy; override;
  published

    [campo('orcchave'), PK, AutoInc]
    property orcchave: Integer read forcchave write setorcchave;

    [campo('stocodigo')]
    property stocodigo: Integer read fstocodigo write setstocodigo;

    [campo('pdscodigo')]
    property pdscodigo: Integer read fpdscodigo write setpdscodigo;

    [campo('orcdataencerr')]
    property orcdataencerr: TDate read forcdataencerr write setorcdataencerr;

  End;

  [Tabela('orc')]
  TORC = Class
  private
    forcchave: Integer;
    fflacodigo: Integer;
    fetdcodigo: Integer;
    fclbcodigo: Integer;
    ffopcodigo: Integer;
    ftdecodigo: Integer;
    fstocodigo: Integer;
    fmoccodigo: Integer;
    fpuocodigo: Integer;
    forcdataabert: String;
    forchoraabert: String;
    forcgeralav: currency;
    forcgeralap: currency;
    forcdescontoav: currency;
    forcdescontoap: currency;
    forctotalav: currency;
    forctotalap: currency;
    forcdestimpre: Integer;
    ftrmcodigo: Integer;
    ffoacodigo: Integer;
    fedrcodigo: Integer;
    fccxchave: Integer;
    fcznchave: Integer;
    foricodigo: Integer;
    fmdacodigo: Integer;
    forcnumeropedido: String;
    forctelefone: String;
    forctaxaservico: currency;
    ftfpcodigo: Integer;
    forcobs: String;


    procedure setorcchave(const Value: Integer);
    procedure setflacodigo(const Value: Integer);
    procedure setetdcodigo(const Value: Integer);
    procedure setclbcodigo(const Value: Integer);
    procedure setfopcodigo(const Value: Integer);
    procedure settdecodigo(const Value: Integer);
    procedure setstocodigo(const Value: Integer);
    procedure setmoccodigo(const Value: Integer);
    procedure setpuocodigo(const Value: Integer);
    procedure setorcdataabert(const Value: String);
    procedure setorchoraabert(const Value: String);
    procedure setorcgeralav(const Value: currency);
    procedure setorcgeralap(const Value: currency);
    procedure setorcdescontoav(const Value: currency);
    procedure setorcdescontoap(const Value: currency);
    procedure setorctotalav(const Value: currency);
    procedure setorctotalap(const Value: currency);
    procedure setorcdestimpre(const Value: Integer);
    procedure settrmcodigo(const Value: Integer);
    procedure setfoacodigo(const Value: Integer);
    procedure setorcnumeropedido(const Value: String);
    procedure setorctelefone(const Value: String);
    procedure settfpcodigo(const Value: Integer);
    procedure setedrcodigo(const Value: Integer);
    procedure setorctaxaservico(const Value: currency);
    procedure setccxchave(const Value: Integer);
    procedure setcznchave(const Value: Integer);
    procedure setoricodigo(const Value: Integer);
    procedure setmdacodigo(const Value: Integer);

    procedure setorcobs(const Value: String);


  public
    constructor create;
    destructor destroy; override;
  published

    [campo('orcchave'), PK, AutoInc]
    property orcchave: Integer read forcchave write setorcchave;

    [campo('flacodigo')]
    property flacodigo: Integer read fflacodigo write setflacodigo;

    [campo('etdcodigo')]
    property etdcodigo: Integer read fetdcodigo write setetdcodigo;

    [campo('clbcodigo')]
    property clbcodigo: Integer read fclbcodigo write setclbcodigo;

    [campo('fopcodigo')]
    property fopcodigo: Integer read ffopcodigo write setfopcodigo;

    [campo('tdecodigo')]
    property tdecodigo: Integer read ftdecodigo write settdecodigo;

    [campo('stocodigo')]
    property stocodigo: Integer read fstocodigo write setstocodigo;

    [campo('moccodigo')]
    property moccodigo: Integer read fmoccodigo write setmoccodigo;

    [campo('puocodigo')]
    property puocodigo: Integer read fpuocodigo write setpuocodigo;

    [campo('orcdataabert')]
    property orcdataabert: String read forcdataabert write setorcdataabert;

    [campo('orchoraabert')]
    property orchoraabert: String read forchoraabert write setorchoraabert;

    [campo('orcgeralav')]
    property orcgeralav: currency read forcgeralav write setorcgeralav;

    [campo('orcgeralap')]
    property orcgeralap: currency read forcgeralap write setorcgeralap;

    [campo('orcdescontoav')]
    property orcdescontoav: currency read forcdescontoav write setorcdescontoav;

    [campo('orcdescontoap')]
    property orcdescontoap: currency read forcdescontoap write setorcdescontoap;

    [campo('orctotalav')]
    property orctotalav: currency read forctotalav write setorctotalav;

    [campo('orctotalap')]
    property orctotalap: currency read forctotalap write setorctotalap;

    [campo('orcdestimpre')]
    property orcdestimpre: Integer read forcdestimpre write setorcdestimpre;

    [campo('trmcodigo')]
    property trmcodigo: Integer read ftrmcodigo write settrmcodigo;

    [campo('orctaxaservico')]
    property orctaxaservico: currency read forctaxaservico write setorctaxaservico;

    [campo('foacodigo')]
    property foacodigo: Integer read ffoacodigo write setfoacodigo;

    [campo('orcnumeropedido')]
    property orcnumeropedido: String read forcnumeropedido write setorcnumeropedido;

    [campo('orctelefone')]
    property orctelefone: String read forctelefone write setorctelefone;

    [campo('tfpcodigo')]
    property tfpcodigo: Integer read ftfpcodigo write settfpcodigo;

    [campo('edrcodigo')]
    property edrcodigo: Integer read fedrcodigo write setedrcodigo;

    [campo('ccxchave')]
    property ccxchave: Integer read fccxchave write setccxchave;

    [campo('cznchave')]
    property cznchave: Integer read fcznchave write setcznchave;

    [campo('oricodigo')]
    property oricodigo: Integer read foricodigo write setoricodigo;

    [campo('mdacodigo')]
    property mdacodigo: Integer read fmdacodigo write setmdacodigo;


    [campo('orcobs')]
    property orcobs: String read forcobs write setorcobs;


  End;

implementation

{ TORC }

constructor TORC.create;
begin

end;

destructor TORC.destroy;
begin
  inherited;
end;

procedure TORC.setccxchave(const Value: Integer);
begin
  fccxchave := Value;
end;

procedure TORC.setclbcodigo(const Value: Integer);
begin
  fclbcodigo := Value;
end;

procedure TORC.setcznchave(const Value: Integer);
begin
  fcznchave := Value;
end;

procedure TORC.setedrcodigo(const Value: Integer);
begin
  fedrcodigo := Value;
end;

procedure TORC.setetdcodigo(const Value: Integer);
begin
  fetdcodigo := Value;
end;

procedure TORC.setflacodigo(const Value: Integer);
begin
  fflacodigo := Value;
end;

procedure TORC.setfoacodigo(const Value: Integer);
begin
  ffoacodigo := Value;
end;

procedure TORC.setfopcodigo(const Value: Integer);
begin
  ffopcodigo := Value;
end;

procedure TORC.setmdacodigo(const Value: Integer);
begin
  fmdacodigo:=value;
end;

procedure TORC.setmoccodigo(const Value: Integer);
begin
  fmoccodigo := Value;
end;

procedure TORC.setorcchave(const Value: Integer);
begin
  forcchave := Value;
end;

procedure TORC.setorcdataabert(const Value: String);
begin
  forcdataabert := Value;
end;

procedure TORC.setorcdescontoap(const Value: currency);
begin
  forcdescontoap := Value;
end;

procedure TORC.setorcdescontoav(const Value: currency);
begin
  forcdescontoav := Value;
end;

procedure TORC.setorcdestimpre(const Value: Integer);
begin
  forcdestimpre := Value;
end;

procedure TORC.setorcgeralap(const Value: currency);
begin
  forcgeralap := Value;
end;

procedure TORC.setorcgeralav(const Value: currency);
begin
  forcgeralav := Value;
end;

procedure TORC.setorchoraabert(const Value: String);
begin
  forchoraabert := Value;
end;

procedure TORC.setorcnumeropedido(const Value: String);
begin
  forcnumeropedido := Value;
end;

procedure TORC.setorcobs(const Value: String);
begin
  forcobs := Value;
end;

procedure TORC.setorctaxaservico(const Value: currency);
begin
  forctaxaservico := Value;
end;

procedure TORC.setorctelefone(const Value: String);
begin
  forctelefone := Value;
end;

procedure TORC.setorctotalap(const Value: currency);
begin
  forctotalap := Value;
end;

procedure TORC.setorctotalav(const Value: currency);
begin
  forctotalav := Value;
end;

procedure TORC.setoricodigo(const Value: Integer);
begin
  foricodigo := Value;
end;

procedure TORC.setpuocodigo(const Value: Integer);
begin
  fpuocodigo := Value;
end;

procedure TORC.setstocodigo(const Value: Integer);
begin
  fstocodigo := Value;
end;


procedure TORC.settdecodigo(const Value: Integer);
begin
  ftdecodigo := Value;
end;

procedure TORC.settfpcodigo(const Value: Integer);
begin
  ftfpcodigo := Value;
end;

procedure TORC.settrmcodigo(const Value: Integer);
begin
  ftrmcodigo := Value;
end;

{ TORCIMP }

constructor TORCIMP.create;
begin

end;

destructor TORCIMP.destroy;
begin

  inherited;
end;

procedure TORCIMP.setorcchave(const Value: Integer);
begin
  forcchave := Value;
end;

procedure TORCIMP.setorcdataencerr(const Value: TDate);
begin
  forcdataencerr := Value;
end;

procedure TORCIMP.setpdscodigo(const Value: Integer);
begin
  fpdscodigo := Value;
end;

procedure TORCIMP.setstocodigo(const Value: Integer);
begin
  fstocodigo := Value;
end;

end.
