unit GourmetServer.Model.Connection;

interface

uses
  System.JSON,
  Data.DB,
  inifiles,
  vcl.Forms,
  UniProvider,
  MySQLUniProvider,
  DBAccess,
  Uni,
  System.Generics.Collections;

var
  FDriver: TMySQLUniProvider;
  FConnList: TObjectList<TUniConnection>;
  vpNomeBanco: string;
  vpUsuario: string;
  vpSenha: string;
  vpPortaBanco: string;
  vpServidor: string;

function Connected: Integer;
procedure Disconnected(Index: Integer);

implementation

uses
  System.SysUtils;

Procedure CarregaIni;
Var
  arquini: TIniFile;
Begin

  arquini := TIniFile.Create(extractfilepath(application.exename) + 'pegasus.ini');
  With arquini Do
  Begin
    vpNomeBanco := ReadString('posi', 'nomebanco', 'pegasus');
    vpServidor := ReadString('posi', 'servidor', '127.0.0.1');
    vpUsuario := ReadString('posi', 'usuario', 'root');
    vpSenha := ReadString('posi', 'senha', 'xda973');
    vpPortaBanco := ReadString('posi', 'portabanco', '3306');
  End;
  arquini.Free;

End;

function Connected: Integer;
begin

  CarregaIni;

  if not Assigned(FConnList) then
    FConnList := TObjectList<TUniConnection>.Create;

  FConnList.Add(TUniConnection.Create(nil));
  Result := Pred(FConnList.Count);
  FConnList.Items[Result].ProviderName := 'MySQL';
  FConnList.Items[Result].Database := vpNomeBanco;
  FConnList.Items[Result].UserName := vpUsuario;
  FConnList.Items[Result].Password := vpSenha;
  FConnList.Items[Result].Port :=StrToInt(vpPortaBanco);
  FConnList.Items[Result].Server := vpServidor;
  FConnList.Items[Result].SpecificOptions.Add('ConnectionTimeout:=150');

  FConnList.Items[Result].Connected;

end;

procedure Disconnected(Index: Integer);
begin
  FConnList.Items[Index].Connected := False;
  FConnList.Items[Index].Free;
  FConnList.TrimExcess;
end;

end.
