unit uforcfpagtoent;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.StdCtrls, Vcl.Buttons,
  Vcl.ExtCtrls, Vcl.DBCtrls, Vcl.Menus, System.ImageList, Vcl.ImgList,
  Vcl.ComCtrls, Vcl.Mask, uni, ufuncoes;

type
  Tforcfpagtoent = class(TForm)
    pbotoes: TPanel;
    psituacao: TPanel;
    bconfirma: TBitBtn;
    bcancela: TBitBtn;
    bfechar: TBitBtn;
    Dregistro: TDataSource;
    ImageList1: TImageList;
    plDinheiro: TPanel;
    sbDinheiro: TSpeedButton;
    plCartaoCredito: TPanel;
    sbCartaoCredito: TSpeedButton;
    plConvenio: TPanel;
    sbConvenio: TSpeedButton;
    plCartaoDebito: TPanel;
    sbCartaoDebito: TSpeedButton;
    plTroco: TPanel;
    Label2: TLabel;
    edTroco: TEdit;
    MenuFormaPagto: TPopupMenu;
    mnCartaoCredito: TMenuItem;
    mnCartaoDebito: TMenuItem;
    mnDinheiro: TMenuItem;
    mnConvenio: TMenuItem;
    Panel1: TPanel;
    Label1: TLabel;
    orcobs: TDBMemo;
    plTotalGeral: TPanel;
    pltotal: TPanel;
    plfinalizarvenda: TPanel;
    Panel2: TPanel;
    sbAFaturar: TSpeedButton;
    mnAFaturar: TMenuItem;
    plProgramacaoEntrega: TPanel;
    dtorcdataentrega: TDateTimePicker;
    hrorchoraentrega: TDateTimePicker;
    plVouvherDesconto: TPanel;
    EdCodigoVoucher: TEdit;
    spValidarVouche: TSpeedButton;
    plTotalLiquido: TPanel;
    plDesconto: TPanel;
    Memo1: TMemo;
    cbClienteRetira: TCheckBox;
    PIX1: TMenuItem;
    plPix: TPanel;
    sbPix: TSpeedButton;
    Panel3: TPanel;
    sbOnLine: TSpeedButton;
    OnLine1: TMenuItem;
    procedure sbCartaoCreditoClick(Sender: TObject);
    procedure sbCartaoDebitoClick(Sender: TObject);
    procedure sbDinheiroClick(Sender: TObject);
    procedure sbConvenioClick(Sender: TObject);
    procedure mnCartaoCreditoClick(Sender: TObject);
    procedure mnCartaoDebitoClick(Sender: TObject);
    procedure mnDinheiroClick(Sender: TObject);
    procedure mnConvenioClick(Sender: TObject);
    procedure bconfirmaClick(Sender: TObject);
    procedure bcancelaClick(Sender: TObject);
    procedure FormKeyPress(Sender: TObject; var Key: Char);
    procedure edTrocoExit(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure sbAFaturarClick(Sender: TObject);
    procedure sbARetirarClick(Sender: TObject);
    procedure spValidarVoucheClick(Sender: TObject);
    procedure EdCodigoVoucherKeyPress(Sender: TObject; var Key: Char);
    procedure mnAFaturarClick(Sender: TObject);
    procedure PIX1Click(Sender: TObject);
    procedure sbOnLineClick(Sender: TObject);
    procedure OnLine1Click(Sender: TObject);
  private
    procedure AjustaSpeedButton(Sender: TObject);
    procedure ajustadesconto(SVlrDesc: string);
    procedure RemoveMarcacoes;
    { Private declarations }
  public
    { Public declarations }
    vpFormaPagto: string;
    vpFinalizar: string;
    vpRetiraBalcao: string;

    vpValorTroco: string;
    vpDesconto: double;
    vpTotalBruto: double;

  end;

var
  forcfpagtoent: Tforcfpagtoent;

implementation

uses
  uFprinciEnt;

{$R *.dfm}

procedure Tforcfpagtoent.bcancelaClick(Sender: TObject);
begin
  if Dregistro.DataSet.State <> dsbrowse then
  begin
    Dregistro.DataSet.cancel;
  end;
  modalresult := mrcancel;
end;

procedure Tforcfpagtoent.bconfirmaClick(Sender: TObject);
var
  vlDesconto: string;
begin
  if vpDesconto > 0 then
  begin

    vlDesconto := floattostr(vpDesconto);
    vlDesconto := StringReplace(vlDesconto, '.', '', [rfReplaceAll, rfIgnoreCase]);
    vlDesconto := StringReplace(vlDesconto, ',', '.', [rfReplaceAll, rfIgnoreCase]);

    ajustadesconto(vlDesconto);

  end;

  if Dregistro.DataSet.State <> dsbrowse then
  begin
    Dregistro.DataSet.FieldByName('orcvias').AsInteger := 1;
    Dregistro.DataSet.post;
  end;

  if cbClienteRetira.Checked then
    vpRetiraBalcao := '1'
  else
    vpRetiraBalcao := '0';

  // vpFinalizar := '0';

  { consulta.Close;
    consulta.SQL.Text := 'UPDATE orc SET orcdestimpre = 1 WHERE orcchave = ' + Self.vorcchave;
    consulta.ExecSQL; }

  if sbCartaoDebito.Down then
  begin
    vpFormaPagto := '5';
  end
  else if sbCartaoCredito.Down then
  begin
    vpFormaPagto := '4';
  end
  else if sbDinheiro.Down then
  begin
    vpFormaPagto := '1';
    vpValorTroco := edTroco.Text;
  end
  else if sbConvenio.Down then
  begin
    vpFormaPagto := '7';
  end
   else if sbPix.Down then
  begin
    vpFormaPagto := '6';
  end
  else if sbAFaturar.Down then
  begin
    vpFormaPagto := '9';
  end
  else if sbOnLine.Down then
  begin
    vpFormaPagto := '78';
  end;

  if not((sbCartaoDebito.Down or sbCartaoCredito.Down or sbDinheiro.Down or sbConvenio.Down or sbAFaturar.Down) IN [True]) then
  begin
    if edTroco.Text <> '0,00' then
      sbDinheiro.Click;
  end;

  if not((sbCartaoDebito.Down or sbCartaoCredito.Down or sbDinheiro.Down or sbConvenio.Down or sbAFaturar.Down or sbPIX.Down) IN [True]) then
  begin
    ShowMessage('ATENÇÃO: ' + #13 + #13 + 'É necessário informar a Forma de Pagamento!');
  end
  else
  begin
    modalresult := mrok;
  end;

end;

procedure Tforcfpagtoent.EdCodigoVoucherKeyPress(Sender: TObject; var Key: Char);
begin

  // tratativa propria
end;

procedure Tforcfpagtoent.edTrocoExit(Sender: TObject);
begin
  if edTroco.Text = '' then
  begin
    edTroco.Text := '0,00';
  end;
  if edTroco.Text <> '' then
  begin
    try
      edTroco.Text := formatfloat('##,###,##0.00', strtofloat(edTroco.Text));
    except
      ShowMessage('Valor inválid!');
      edTroco.Text := '0,00';
    end;
  end;

end;

procedure Tforcfpagtoent.FormKeyPress(Sender: TObject; var Key: Char);
begin
  If Key = #13 Then
  Begin
    Key := #0;
    Perform(WM_NEXTDLGCTL, 0, 0);
  End
  Else If Key = #27 Then
  Begin
    if bcancela.Visible then
    begin
      bcancela.SetFocus;
      Key := #0;
      bcancela.Click;
    end
    else if bfechar.Visible then
    begin
      bfechar.SetFocus;
      Key := #0;
      bfechar.Click;
    end;
  End;
end;

procedure Tforcfpagtoent.FormShow(Sender: TObject);
begin
  dtorcdataentrega.DateTime := strtodate(hoje(application, FprinciEnt.Conexao));
  hrorchoraentrega.DateTime := now();
  // vpFinalizar := '0';
end;

procedure Tforcfpagtoent.mnAFaturarClick(Sender: TObject);
begin
  sbAFaturar.Click;
end;

procedure Tforcfpagtoent.mnCartaoCreditoClick(Sender: TObject);
begin
  sbCartaoCredito.Click;
end;

procedure Tforcfpagtoent.mnCartaoDebitoClick(Sender: TObject);
begin
  sbCartaoDebito.Click;
end;

procedure Tforcfpagtoent.mnConvenioClick(Sender: TObject);
begin
  sbConvenio.Click;
end;

procedure Tforcfpagtoent.mnDinheiroClick(Sender: TObject);
begin
  sbDinheiro.Click;
end;

procedure Tforcfpagtoent.OnLine1Click(Sender: TObject);
begin
  sbOnLine.Click;
end;

procedure Tforcfpagtoent.PIX1Click(Sender: TObject);
begin
sbPIX.Click;
end;

procedure Tforcfpagtoent.sbAFaturarClick(Sender: TObject);
begin
  AjustaSpeedButton(Sender);
end;

procedure Tforcfpagtoent.sbCartaoCreditoClick(Sender: TObject);
begin
  RemoveMarcacoes;
  AjustaSpeedButton(Sender);

end;

procedure Tforcfpagtoent.sbCartaoDebitoClick(Sender: TObject);
begin
  RemoveMarcacoes;
  AjustaSpeedButton(Sender);

end;

procedure Tforcfpagtoent.RemoveMarcacoes;
begin
    sbCartaoCredito.Down := false;
    TSpeedButton(sbCartaoCredito).Glyph.Assign(nil);
    ImageList1.GetBitmap(0, TSpeedButton(sbCartaoCredito).Glyph);

    sbCartaoDebito.Down := false;
    TSpeedButton(sbCartaoDebito).Glyph.Assign(nil);
    ImageList1.GetBitmap(0, TSpeedButton(sbCartaoDebito).Glyph);

    sbDinheiro.Down := false;
    TSpeedButton(sbDinheiro).Glyph.Assign(nil);
    ImageList1.GetBitmap(0, TSpeedButton(sbDinheiro).Glyph);

    sbPix.Down := false;
    TSpeedButton(sbPix).Glyph.Assign(nil);
    ImageList1.GetBitmap(0, TSpeedButton(sbPix).Glyph);

    sbConvenio.Down := false;
    TSpeedButton(sbConvenio).Glyph.Assign(nil);
    ImageList1.GetBitmap(0, TSpeedButton(sbConvenio).Glyph);

    sbAFaturar.Down := false;
    TSpeedButton(sbAFaturar).Glyph.Assign(nil);
    ImageList1.GetBitmap(0, TSpeedButton(sbAFaturar).Glyph);

    sbOnLine.Down := false;
    TSpeedButton(sbOnLine).Glyph.Assign(nil);
    ImageList1.GetBitmap(0, TSpeedButton(sbOnLine).Glyph);


end;


procedure Tforcfpagtoent.sbConvenioClick(Sender: TObject);
begin
  AjustaSpeedButton(Sender);
end;

procedure Tforcfpagtoent.sbDinheiroClick(Sender: TObject);
begin
  RemoveMarcacoes;
  AjustaSpeedButton(Sender);
  edTroco.SetFocus;
end;

procedure Tforcfpagtoent.sbOnLineClick(Sender: TObject);
begin
  AjustaSpeedButton(Sender);
end;

procedure Tforcfpagtoent.spValidarVoucheClick(Sender: TObject);
var
  vlValorDesconto: double;
  vlPercentualDesconto: double;

begin

  vlValorDesconto := 0;
  vlPercentualDesconto := 0;

  FprinciEnt.vch.Close;
  FprinciEnt.vch.ParamByName('vchvoucher').AsString := uppercase(EdCodigoVoucher.Text);
  FprinciEnt.vch.Open;

  if not FprinciEnt.vch.IsEmpty then
  begin

    if FprinciEnt.vchvchdatavalidade.AsDateTime < strtodate(hoje(application, FprinciEnt.Conexao)) then
    begin
      EdCodigoVoucher.Text := 'INVÁLIDO - VENCIMENTO: ' + FprinciEnt.vchvchdatavalidade.AsString;
    end
    else
    begin

      if (FprinciEnt.vchvchmodouso.AsInteger = 1) and (FprinciEnt.vchvchdatavalidade.AsFloat >= strtodate(hoje(application, FprinciEnt.Conexao))) then // por validade
      begin

        if FprinciEnt.vchvchpercentual.AsFloat > 0 then
        begin

          vpDesconto := vpTotalBruto * (FprinciEnt.vchvchpercentual.AsFloat / 100);
          plTotalLiquido.Caption := 'Liquido R$ ' + formatfloat('##,##0.00', vpTotalBruto - vpDesconto);
          plDesconto.Caption := 'Desconto R$ ' + formatfloat('##,##0.00', vpDesconto);
          plDesconto.Repaint;
          plTotalLiquido.Repaint;

        end
        else if FprinciEnt.vchvchvalor.AsFloat > 0 then
        begin
          if (FprinciEnt.vchprocodigo.AsInteger <> 0) and (FprinciEnt.vchpuncodigo.AsInteger <> 0) then
          begin

            vpDesconto := FprinciEnt.vchvchvalor.AsFloat;
            plTotalLiquido.Caption := 'Liquido R$ ' + formatfloat('##,##0.00', vpTotalBruto - vpDesconto);
            plDesconto.Caption := 'Desconto R$ ' + formatfloat('##,##0.00', vpDesconto);
            plDesconto.Repaint;
            plTotalLiquido.Repaint;

          end
          ELSE
          begin

            vpDesconto := FprinciEnt.vchvchvalor.AsFloat;
            plTotalLiquido.Caption := 'Liquido R$ ' + formatfloat('##,##0.00', vpTotalBruto - vpDesconto);
            plDesconto.Caption := 'Desconto R$ ' + formatfloat('##,##0.00', vpDesconto);
            plDesconto.Repaint;
            plTotalLiquido.Repaint;
          end;

        end;

      end
      else if (FprinciEnt.vchvchmodouso.AsInteger = 2) then // modo de uso unico
      begin

        if FprinciEnt.vchvchsituacao.AsInteger = 2 then
        begin
          EdCodigoVoucher.Text := 'INVÁLIDO - JÁ UTILIZADO';
        end
        else
        begin

          if (FprinciEnt.vchprocodigo.AsInteger <> 0) and (FprinciEnt.vchpuncodigo.AsInteger <> 0) then
          begin
            // desconto em um item especifico
          end
          else
          begin
            if FprinciEnt.vchvchpercentual.AsFloat > 0 then // deconto da venda em percentual
            begin
              vpDesconto := vpTotalBruto * (FprinciEnt.vchvchpercentual.AsFloat / 100);
              plTotalLiquido.Caption := 'Liquido R$ ' + formatfloat('##,##0.00', vpTotalBruto - vpDesconto);
              plDesconto.Caption := 'Desconto R$ ' + formatfloat('##,##0.00', vpDesconto);
              plDesconto.Repaint;
              plTotalLiquido.Repaint;

            end

            else if FprinciEnt.vchvchvalor.AsFloat > 0 then // deconto da venda em valor
            begin

              vpDesconto := FprinciEnt.vchvchvalor.AsFloat;
              plTotalLiquido.Caption := 'Liquido R$ ' + formatfloat('##,##0.00', vpTotalBruto - vpDesconto);
              plDesconto.Caption := 'Desconto R$ ' + formatfloat('##,##0.00', vpDesconto);
              plDesconto.Repaint;
              plTotalLiquido.Repaint;

            end;

          end;

        end;

      end;

    end;
  end;
end;

procedure Tforcfpagtoent.ajustadesconto(SVlrDesc: string);
begin

  If Not(SVlrDesc = '') Then
  begin
    FprinciEnt.zPCalcDescAV.SQL.Text := '';
    FprinciEnt.zPCalcDescAV.SQL.add(' SET @OrcChave = :orcchave;');
    FprinciEnt.zPCalcDescAV.SQL.add('SET @Desconto = :Desconto;');

    FprinciEnt.zPCalcDescAV.SQL.add('   SET @Total = (SELECT');
    FprinciEnt.zPCalcDescAV.SQL.add('     SUM(itototalav+itoacrescimoav)');
    FprinciEnt.zPCalcDescAV.SQL.add('   FROM ito,');
    FprinciEnt.zPCalcDescAV.SQL.add('        pro');
    FprinciEnt.zPCalcDescAV.SQL.add('   WHERE ito.procodigo = pro.procodigo');
    FprinciEnt.zPCalcDescAV.SQL.add('   AND ito.stocodigo NOT IN (8, 88)');
    FprinciEnt.zPCalcDescAV.SQL.add('   AND pro.tpocodigo <> 9');
    FprinciEnt.zPCalcDescAV.SQL.add('   AND orcchave = @OrcChave);');
    FprinciEnt.zPCalcDescAV.SQL.add('');
    FprinciEnt.zPCalcDescAV.SQL.add('');
    FprinciEnt.zPCalcDescAV.SQL.add(' UPDATE ito, pro');
    FprinciEnt.zPCalcDescAV.SQL.add(' SET itodescontoav = ROUND((@Desconto * ((itototalav+itoacrescimoav )/ @Total)), 2),');
    FprinciEnt.zPCalcDescAV.SQL.add('     ito.itopercdescav = (ito.itodescontoav / (ito.itototalav+itoacrescimoav)) * 100,');
    FprinciEnt.zPCalcDescAV.SQL.add('     tdecodigo = 1');
    FprinciEnt.zPCalcDescAV.SQL.add(' WHERE ito.procodigo = pro.procodigo');
    FprinciEnt.zPCalcDescAV.SQL.add(' AND ito.stocodigo NOT IN (8, 88)      ');
    FprinciEnt.zPCalcDescAV.SQL.add(' AND pro.tpocodigo <> 9');
    FprinciEnt.zPCalcDescAV.SQL.add(' AND orcchave = @OrcChave;');
    FprinciEnt.zPCalcDescAV.SQL.add('');
    FprinciEnt.zPCalcDescAV.SQL.add(' /*Trata Diferença de valor definido para desconto e valor calculado*/');
    FprinciEnt.zPCalcDescAV.SQL.add(' SET @DifDesconto = @Desconto - (SELECT');
    FprinciEnt.zPCalcDescAV.SQL.add('     ROUND(SUM(itodescontoav), 2)');
    FprinciEnt.zPCalcDescAV.SQL.add('   FROM ito');
    FprinciEnt.zPCalcDescAV.SQL.add('   WHERE orcchave = @OrcChave');
    FprinciEnt.zPCalcDescAV.SQL.add('   AND ito.stocodigo NOT IN (8, 88));');
    FprinciEnt.zPCalcDescAV.SQL.add('');
    FprinciEnt.zPCalcDescAV.SQL.add(' /*Identifica item de maior percentual*/');
    FprinciEnt.zPCalcDescAV.SQL.add(' SET @ChaveMaiorPerc = (SELECT');
    FprinciEnt.zPCalcDescAV.SQL.add('     itochave');
    FprinciEnt.zPCalcDescAV.SQL.add('   FROM ito,');
    FprinciEnt.zPCalcDescAV.SQL.add('        pro');
    FprinciEnt.zPCalcDescAV.SQL.add('   WHERE ito.procodigo = pro.procodigo');
    FprinciEnt.zPCalcDescAV.SQL.add('   AND ito.stocodigo NOT IN (8, 88)');
    FprinciEnt.zPCalcDescAV.SQL.add('   AND pro.tpocodigo <> 9');
    FprinciEnt.zPCalcDescAV.SQL.add('   AND orcchave = @OrcChave');
    FprinciEnt.zPCalcDescAV.SQL.add('   ORDER BY (itototalav / @Total) DESC LIMIT 1);');
    FprinciEnt.zPCalcDescAV.SQL.add('');
    FprinciEnt.zPCalcDescAV.SQL.add('');
    FprinciEnt.zPCalcDescAV.SQL.add(' UPDATE ito, pro');
    FprinciEnt.zPCalcDescAV.SQL.add(' SET itodescontoav = (itodescontoav + @DifDesconto),');
    FprinciEnt.zPCalcDescAV.SQL.add('     ito.itopercdescav = (ito.itodescontoav / (ito.itototalav+itoacrescimoav)) * 100');
    FprinciEnt.zPCalcDescAV.SQL.add(' WHERE ito.procodigo = pro.procodigo');
    FprinciEnt.zPCalcDescAV.SQL.add(' AND pro.tpocodigo <> 9');
    FprinciEnt.zPCalcDescAV.SQL.add(' AND itochave = @ChaveMaiorPerc;');
    FprinciEnt.zPCalcDescAV.SQL.add('  SET @OrcChave = :orcchave;');
    FprinciEnt.zPCalcDescAV.SQL.add(' SET @Desconto = :Desconto;');
    FprinciEnt.zPCalcDescAV.SQL.add('');
    FprinciEnt.zPCalcDescAV.SQL.add(' SET @Total = (SELECT');
    FprinciEnt.zPCalcDescAV.SQL.add('     SUM(itototalav)');
    FprinciEnt.zPCalcDescAV.SQL.add('   FROM ito,');
    FprinciEnt.zPCalcDescAV.SQL.add('        pro');
    FprinciEnt.zPCalcDescAV.SQL.add('   WHERE ito.procodigo = pro.procodigo');
    FprinciEnt.zPCalcDescAV.SQL.add('   AND ito.stocodigo NOT IN (8, 88)  ');
    FprinciEnt.zPCalcDescAV.SQL.add('   AND pro.tpocodigo <> 9');
    FprinciEnt.zPCalcDescAV.SQL.add('   AND orcchave = @OrcChave);');
    FprinciEnt.zPCalcDescAV.SQL.add('');
    FprinciEnt.zPCalcDescAV.SQL.add('');
    FprinciEnt.zPCalcDescAV.SQL.add(' UPDATE ito, pro');
    FprinciEnt.zPCalcDescAV.SQL.add(' SET itodescontoav = ROUND((@Desconto * ((itototalav +itoacrescimoav)/ @Total)), 2),');
    FprinciEnt.zPCalcDescAV.SQL.add('     ito.itopercdescav = (ito.itodescontoav / (ito.itototalav)) * 100,');
    FprinciEnt.zPCalcDescAV.SQL.add('     tdecodigo = 1');
    FprinciEnt.zPCalcDescAV.SQL.add(' WHERE ito.procodigo = pro.procodigo');
    FprinciEnt.zPCalcDescAV.SQL.add(' AND ito.stocodigo NOT IN (8, 88)');
    FprinciEnt.zPCalcDescAV.SQL.add(' AND pro.tpocodigo <> 9');
    FprinciEnt.zPCalcDescAV.SQL.add(' AND orcchave = @OrcChave;');
    FprinciEnt.zPCalcDescAV.SQL.add('');
    FprinciEnt.zPCalcDescAV.SQL.add(' /*Trata Diferença de valor definido para desconto e valor calculado*/');
    FprinciEnt.zPCalcDescAV.SQL.add(' SET @DifDesconto = @Desconto - (SELECT');
    FprinciEnt.zPCalcDescAV.SQL.add('     ROUND(SUM(itodescontoav), 2)');
    FprinciEnt.zPCalcDescAV.SQL.add('   FROM ito');
    FprinciEnt.zPCalcDescAV.SQL.add('   WHERE orcchave = @OrcChave');
    FprinciEnt.zPCalcDescAV.SQL.add('   AND ito.stocodigo NOT IN (8, 88));');
    FprinciEnt.zPCalcDescAV.SQL.add('');
    FprinciEnt.zPCalcDescAV.SQL.add(' /*Identifica item de maior percentual*/');
    FprinciEnt.zPCalcDescAV.SQL.add(' SET @ChaveMaiorPerc = (SELECT');
    FprinciEnt.zPCalcDescAV.SQL.add('     itochave');
    FprinciEnt.zPCalcDescAV.SQL.add('   FROM ito,');
    FprinciEnt.zPCalcDescAV.SQL.add('        pro');
    FprinciEnt.zPCalcDescAV.SQL.add('   WHERE ito.procodigo = pro.procodigo');
    FprinciEnt.zPCalcDescAV.SQL.add('   AND ito.stocodigo NOT IN (8, 88)');
    FprinciEnt.zPCalcDescAV.SQL.add('   AND pro.tpocodigo <> 9');
    FprinciEnt.zPCalcDescAV.SQL.add('   AND orcchave = @OrcChave');
    FprinciEnt.zPCalcDescAV.SQL.add('   ORDER BY (itototalav / @Total) DESC LIMIT 1);');
    FprinciEnt.zPCalcDescAV.SQL.add('');
    FprinciEnt.zPCalcDescAV.SQL.add('');
    FprinciEnt.zPCalcDescAV.SQL.add(' UPDATE ito, pro');
    FprinciEnt.zPCalcDescAV.SQL.add(' SET itodescontoav = (itodescontoav + @DifDesconto),');
    FprinciEnt.zPCalcDescAV.SQL.add('     ito.itopercdescav = (ito.itodescontoav / (ito.itototalav+itoacrescimoav)) * 100');
    FprinciEnt.zPCalcDescAV.SQL.add(' WHERE ito.procodigo = pro.procodigo');
    FprinciEnt.zPCalcDescAV.SQL.add(' AND pro.tpocodigo <> 9');
    FprinciEnt.zPCalcDescAV.SQL.add(' AND itochave = @ChaveMaiorPerc;');

    FprinciEnt.zPCalcDescAV.ParamByName('orcchave').AsString := FprinciEnt.orcorcchave.AsString;
    FprinciEnt.zPCalcDescAV.ParamByName('Desconto').AsString := BuscaTroca(SVlrDesc, ',', '.');

    

    FprinciEnt.zPCalcDescAV.Execute;

    FprinciEnt.orc.Edit;
    FprinciEnt.orctdecodigo.AsInteger := tdeTotal;
    FprinciEnt.orc.post;

    FprinciEnt.btVerPedido.Click;
    FprinciEnt.Recalculatotal;

  end;
end;

procedure Tforcfpagtoent.sbARetirarClick(Sender: TObject);
begin
  AjustaSpeedButton(Sender);
end;

procedure Tforcfpagtoent.AjustaSpeedButton(Sender: TObject);
begin

  TSpeedButton(Sender).Down := (TSpeedButton(Sender).Tag = 0);
  TSpeedButton(Sender).Tag := 1 - TSpeedButton(Sender).Tag;

  TSpeedButton(Sender).Glyph.Assign(nil);
  if TSpeedButton(Sender).Down then
    ImageList1.GetBitmap(1, TSpeedButton(Sender).Glyph)
  else
    ImageList1.GetBitmap(0, TSpeedButton(Sender).Glyph);
end;

end.
