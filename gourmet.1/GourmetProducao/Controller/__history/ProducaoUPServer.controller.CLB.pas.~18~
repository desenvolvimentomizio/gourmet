unit  ProducaoUPServer.controller.CLB;

interface

Uses
  Horse,
  System.Json,
  Uni,
  UniProvider,
  MySQLUniProvider;



procedure Registry(App: THorse);
procedure V1Get(Req: THorseRequest; Res: THorseResponse; Next: TProc);

type
 TAPIError = class
  private
    Ferror: string;
  public
    property error: string read Ferror write Ferror;
  end;


implementation

uses
  ProducaoUP.Services.Connection;


procedure Registry(App: THorse);
begin
  App.Get('/v1/clb', V1Get);
end;



procedure V1Get(Req: THorseRequest; Res: THorseResponse; Next: TProc);
var

  conexao:TUniConnection;
  CLB:TUniQuery;

begin


  conexao:=TUniConnection.Create(nil);

  if AtivaConexao(conexao) then
  begin

    CLB:=TUniQuery.Create(nil);
    CLB.Connection:=conexao;
    CLB.sql.Text:='select nfschave, nfsvalidacao from nfs Where meschavenfe=' +QuotedStr(vlchave);
    CLB.Open;

  end;


  FDAO
    .DAO
    .SQL
      .Fields('clb.clbcodigo, clb.clbidentificacao')
      .Where('clb.fnccodigo=9 and clb.clbativo=''1''')
      .OrderBy('clb.clbidentificacao')
    .&End
   .Find;



  if not FDAO.DataSet.IsEmpty then
  begin
     Res.Send<TJsonarray>(FDAO.DataSetAsJsonArray);
  end
  else
  begin
     res.Status(204);
  end;



end;



end.

