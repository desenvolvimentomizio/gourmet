unit UfrDemo;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs,
    //############ ATENCAO AQUI ####################
  //units adicionais obrigatorias
   uTWPPConnect.ConfigCEF, uTWPPConnect,            uTWPPConnect.Constant,      uTWPPConnect.JS,     uWPPConnectDecryptFile,
   uTWPPConnect.Console,   uTWPPConnect.Diversos,   uTWPPConnect.AdjustNumber,  uTWPPConnect.Config, uTWPPConnect.Classes,
   uTWPPConnect.Emoticons, Vcl.StdCtrls, Vcl.Buttons, Vcl.ExtCtrls, Vcl.ComCtrls,
  Vcl.Imaging.pngimage;

type
  TfrDemo = class(TForm)
    WPPConnect1: TWPPConnect;
    Memo1: TMemo;
    lblStatus: TLabel;
    Panel1: TPanel;
    SpeedButton3: TSpeedButton;
    Button1: TButton;
    StatusBar1: TStatusBar;
    whatsOn: TImage;
    whatsOff: TImage;
    lblNumeroConectado: TLabel;
    Label3: TLabel;
    procedure FormCreate(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure WPPConnect1GetStatus(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frDemo: TfrDemo;

implementation

{$R *.dfm}

procedure TfrDemo.Button1Click(Sender: TObject);
begin
 if not WPPConnect1.Auth(false) then
  Begin

    WPPConnect1.FormQrCodeType := TFormQrCodeType.Ft_Desktop;
    WPPConnect1.FormQrCodeStart;
  End;

  if not WPPConnect1.FormQrCodeShowing then
     WPPConnect1.FormQrCodeShowing := True;
end;

procedure TfrDemo.FormCreate(Sender: TObject);
begin
    GlobalCEFApp.LogConsoleActive := true;
end;


procedure TfrDemo.WPPConnect1GetStatus(Sender: TObject);
begin
  if not Assigned(Sender) Then
     Exit;


  if (TWPPConnect(Sender).Status = Inject_Initialized) then
  begin
    lblStatus.Caption            := 'Online';
    lblStatus.Font.Color         := $0000AE11;
    SpeedButton3.Enabled              := true;
  end else
  begin
    SpeedButton3.Enabled              := false;
    lblStatus.Caption            := 'Offline';
    //lblStatus.Font.Color         := $002894FF;
    lblStatus.Font.Color         := clGrayText;
  end;

  StatusBar1.Panels[1].Text  := lblStatus.Caption;
  whatsOn.Visible            := SpeedButton3.enabled;
  lblNumeroConectado.Visible := whatsOn.Visible;
  whatsOff.Visible           := Not whatsOn.Visible;


  Label3.Visible := False;
  case TWPPConnect(Sender).status of
    Server_ConnectedDown       : Label3.Caption := TWPPConnect(Sender).StatusToStr;
    Server_Disconnected        : Label3.Caption := TWPPConnect(Sender).StatusToStr;
    Server_Disconnecting       : Label3.Caption := TWPPConnect(Sender).StatusToStr;
    Server_Connected           : Label3.Caption := '';
    Server_Connecting          : Label3.Caption := TWPPConnect(Sender).StatusToStr;
    Inject_Initializing        : Label3.Caption := TWPPConnect(Sender).StatusToStr;
    Inject_Initialized         : Label3.Caption := TWPPConnect(Sender).StatusToStr;
    Server_ConnectingNoPhone   : Label3.Caption := TWPPConnect(Sender).StatusToStr;
    Server_ConnectingReaderCode: Label3.Caption := TWPPConnect(Sender).StatusToStr;
    Server_TimeOut             : Label3.Caption := TWPPConnect(Sender).StatusToStr;
    Inject_Destroying          : Label3.Caption := TWPPConnect(Sender).StatusToStr;
    Inject_Destroy             : Label3.Caption := TWPPConnect(Sender).StatusToStr;
  end;
  If Label3.Caption <> '' Then
     Label3.Visible := true;


  If TWPPConnect(Sender).Status in [Server_ConnectingNoPhone, Server_TimeOut] Then
  Begin
    if TWPPConnect(Sender).FormQrCodeType = Ft_Desktop then
    Begin
       if TWPPConnect(Sender).Status = Server_ConnectingNoPhone then
          WPPConnect1.FormQrCodeStop;
    end else
    Begin
      if TWPPConnect(Sender).Status = Server_ConnectingNoPhone then
      Begin
        if not TWPPConnect(Sender).FormQrCodeShowing then
           TWPPConnect(Sender).FormQrCodeShowing := True;
      end else
      begin
        TWPPConnect(Sender).FormQrCodeReloader;
      end;
    end;
  end;

end;

end.
